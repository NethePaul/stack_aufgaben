<?xml version="1.0" encoding="UTF-8"?>
<quiz>
<!-- question: 0  -->
  <question type="category">
    <category>
      <text>$course$/top/Digitale Aufgaben</text>
    </category>
    <info format="html">
      <text></text>
    </info>
    <idnumber></idnumber>
  </question>

<!-- question: 763953  -->
  <question type="stack">
    <name>
      <text>Potenz und Brüche</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Vereinfachen Sie soweit wie möglich.</p>
<p>\(\left( \left({@v@}-\dfrac{1}{{@v@}} \right)^{2}+2\right) : {\dfrac{1}{{@v^2@}}}\,=\,\)&nbsp; [[input:ans]] [[validation:ans]]&nbsp;<span style="font-size: 0.9375rem;">[[feedback:prt1]]</span></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p><strong>Lösungsweg:</strong></p><p><strong><br></strong></p><p> \[ \left(\left({@v@}-\dfrac{1}{{@v@}}\right)^{2}+2\right) : {\dfrac{1}{{@v^2@}}} = {\left({{@v@}}^{2}-2+\dfrac{1}{{{@v@}}^{2}}+2\right)} : {\dfrac{1}{{@v^2@}}} = {\left({{@v@}}^{2}+\dfrac{1}{{{@v@}}^{2}}\right)}\cdot{{@v^2@}} = \displaystyle {@ta@}. \]</p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text>v:rand([x,y,z,t]);
ta:ratsimp(((v-1/v)^2+2)/(1/v^2));</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\[\left( \left({@v@}-\frac{1}{{@v@}} \right)^{2}+2\right)\div{\frac{1}{{@v^2@}}} = {@ta@} .\]</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Die Antwort ist richtig.</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Die Antwort ist teilweise richtig.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Die Antwort ist nicht richtig.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans</name>
      <type>algebraic</type>
      <tans>ta</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>1</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>EqualComAss</answertest>
        <sans>ans</sans>
        <tans>ta</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>1-0-T </trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>1-0-F </falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans</sans>
        <tans>ta</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>1-1-T </trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Sie können die Antwort noch weiter kürzen oder zusammenfassen.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>1-1-F </falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Wenn Sie eine Kombination von mehreren Rechenoperationen haben, sollten Sie die Operationen nacheinander durchführen.</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>144444624</deployedseed>
    <deployedseed>521266647</deployedseed>
    <deployedseed>687378592</deployedseed>
    <deployedseed>1827789409</deployedseed>
    <qtest>
      <testcase>1</testcase>
      <description></description>
      <testinput>
        <name>ans</name>
        <value>ta</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>1-0-T</expectedanswernote>
      </expected>
    </qtest>
    <qtest>
      <testcase>2</testcase>
      <description></description>
      <testinput>
        <name>ans</name>
        <value>((v-1/v)^2+2)/(1/v^2)</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>0.0000000</expectedscore>
        <expectedpenalty>0.1000000</expectedpenalty>
        <expectedanswernote>1-1-T </expectedanswernote>
      </expected>
    </qtest>
  </question>

<!-- question: 0  -->
  <question type="category">
    <category>
      <text>$course$/top/Digitale Aufgaben/Vorbereitung zur Stack</text>
    </category>
    <info format="html">
      <text></text>
    </info>
    <idnumber></idnumber>
  </question>

<!-- question: 781168  -->
  <question type="stack">
    <name>
      <text>Alle: wurzel, funktionen</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p>
<p>Geben Sie den folgenden Ausdruck in das Eingabefeld ein. <br></p>
<p>\(\dfrac{\pi^2+\sqrt{e^x-{@a@}}}{\tan({@a1@}x)+\ln(x-{@a2@})}\) &nbsp; [[input:ans1]] [[validation:ans1]]</p>
<p><br></p>
<p><strong>Hinweise:<br></strong></p><ul><li>Die Zahl \(\pi\) wird mit <strong>pi</strong> eingegeben</li><li>Potenz wird mit <strong>^</strong><span> und</span><strong> </strong>Wurzel wird mit <strong>sqrt</strong> eingegeben, z.B. <strong>sqrt(x^2+1)</strong> für \(\sqrt{x^2+1}\)</li></ul>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text>a:rand_with_step(1,5,1);
a1: rand([5,7]);
a2: rand([2,4]);
los:(pi^2+sqrt(exp(x)-a))/(tan(a1*x)+ln(x-a2));</text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>@a@</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span> Richtige Antwort, gut gemacht!]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-adjust"></i></span> Ihre Antwort ist teilweise korrekt.]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa fa-times"></i></span> Falsche Antwort.]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>los</tans>
      <boxsize>20</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>los</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 781169  -->
  <question type="stack">
    <name>
      <text>Dezimalzahlen</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p>
<p>Geben Sie den folgenden Bruch als Dezimalzahl in das Eingabefeld ein. <br></p>
<p>\(\dfrac{{@a1@}}{{@a2@}}\) = [[input:ans1]] [[validation:ans1]]</p>
<p><br></p>
<p><strong>Hinweis: </strong>Dezimalzahlen werden mit einem <strong>Punkt</strong> eingegeben, z.B. <strong>1.3</strong> statt 1,3</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text>a:rand_with_step(1.21,2,0.1);
a1: rand([3,5,7]);
a2: rand([2,4]);
los:a1/a2;</text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>@a@</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span> Richtige Antwort, gut gemacht!]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-adjust"></i></span> Ihre Antwort ist teilweise korrekt.]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa fa-times"></i></span> Falsche Antwort.]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>los</tans>
      <boxsize>6</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>3</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>los</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 781245  -->
  <question type="stack">
    <name>
      <text>Intervall</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p>
<p>Geben Sie die entsprechenden Intervalle in die Eingabefelder ein, z.B. \(x \in \) oo(a,b) statt \(a&lt;x&lt;b \). <br></p>
<p>\(x &lt; {@a@} \)&nbsp; oder&nbsp; \(x \in \) [[input:ans1]] [[validation:ans1]][[feedback:prt1]]</p>
<p>\({@a@} &lt; x \leq {@a1@} \)&nbsp; oder&nbsp; \(x \in \) [[input:ans2]] [[validation:ans2]][[feedback:prt2]]</p><p>\(x \geq {@a@} \)&nbsp; oder&nbsp; \(x \in \) [[input:ans3]] [[validation:ans3]][[feedback:prt3]]</p><p>\({@a@} \leq x \leq {@a2@} \)&nbsp; oder&nbsp; \(x \in \) [[input:ans4]] [[validation:ans4]][[feedback:prt4]]<br></p>
<p><strong>Hinweise:<br></strong></p>
<ul>
    <li>Schreiben Sie: "<strong>minf</strong>"&nbsp;für \(-\infty\) und "<strong>inf</strong>" für \(+\infty\)</li>
    <li>Schreiben Sie: "<strong>oo(1,5)</strong>"&nbsp;für \((1,5)\), "<strong>cc(1,5)</strong>"&nbsp;für \([1,5]\), "<strong>oc(1,5)</strong>"&nbsp;für \((1,5]\), "<strong>co(1,5)</strong>"&nbsp;für \([1,5)\)<br></li>
</ul>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text>a:rand_with_step(1,5,1);
a1: rand([5,7,8,9,10]);
a2: rand([11,17,18,19,20]);
i1:oo(minf,a);
i2: oc(a,a1);
i3: co(a,inf);
i4: cc(a,a2);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>@a@</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span> Richtige Antwort, gut gemacht!]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-adjust"></i></span> Ihre Antwort ist teilweise korrekt.]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa fa-times"></i></span> Falsche Antwort.]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>i1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>3</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>i2</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>3</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>i3</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>3</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>algebraic</type>
      <tans>i4</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>3</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>i1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>i2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt3</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>i3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt3-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt3-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt4</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>i4</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt4-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt4-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 781171  -->
  <question type="stack">
    <name>
      <text>Produkt Bruch</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p>
<p>Geben Sie den folgenden Ausdruck in das Eingabefeld ein. <br></p>
<p>\(\dfrac{x-{@a@}}{{@a1@}x+{@a2@}}\) &nbsp; [[input:ans1]] [[validation:ans1]]</p>
<p><br></p>
<p><strong>Hinweise:<br></strong></p><ul><li>Der Produkt wird mit <strong>*</strong> eingegeben, z.B. \(2*x\) für \(2x\)</li><li>Der Bruch wird mit <strong>/</strong> eingegeben, z.B. \(2/3\) für \(\dfrac{2}{3}\) oder z.B. \(2/(3-x)\) für \(\dfrac{2}{3-x}\)<br></li></ul>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text>a:rand_with_step(1,5,1);
a1: rand([5,7]);
a2: rand([2,4]);
los:(x-a)/(a1*x+a2);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>@a@</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span> Richtige Antwort, gut gemacht!]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-adjust"></i></span> Ihre Antwort ist teilweise korrekt.]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa fa-times"></i></span> Falsche Antwort.]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>los</tans>
      <boxsize>20</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>los</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 0  -->
  <question type="category">
    <category>
      <text>$course$/top/Digitale Aufgaben/Woche_0</text>
    </category>
    <info format="html">
      <text></text>
    </info>
    <idnumber></idnumber>
  </question>

<!-- question: 798981  -->
  <question type="stack">
    <name>
      <text>Betragsgleichung</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Bestimmen Sie die Lösungsmenge \(\mathbb{L}\) der Gleichung&nbsp;<span style="font-size: 0.9375rem;">\(\left\vert x + {@v1@}\right\vert = {@v2*x@}-{@v3@}\).</span></p><p><span style="font-size: 0.9375rem;">\(\mathbb{L}\,=\,\) [[input:ans1]] [[validation:ans1]] [[feedback:prt1]]<br></span></p>
<p><strong></strong></p>
<p><strong>Hinweise:</strong></p>
<ul>
    <li>Schreiben Sie die Menge mit geschweiften Klammern und trennen Sie die Lösungen mit Komma, z.B. {1, 3}</li>
    <li>Schreiben Sie leere Menge als {}.</li>
</ul>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p dir="ltr"><strong>Lösungsweg:</strong></p>
<p dir="ltr">Die Gleichung \(\left\vert x + {@v1@}\right\vert = {@v2*x@}-{@v3@}\) kann z.B. mit Hilfe der Fallunterscheidung gelöst werden.</p>
<p dir="ltr"><strong><u>Fall 1:</u></strong>&nbsp;\(\displaystyle \quad x \geq {@-v1@}\).</p>
<p dir="ltr">\(x+{@v1@}={@v2*x@}-{@v3@}\) \(\quad \Longleftrightarrow&nbsp;\quad (1-{@v2@})\cdot x = -{@v3@}-{@v1@}\)&nbsp;\(\quad \Longleftrightarrow&nbsp;\quad ({@1-v2@})\cdot x = {@-v3-v1@}&nbsp;\)&nbsp;\(\quad \Longleftrightarrow&nbsp;\quad x = \displaystyle{@l1@}&nbsp;\) ist eine Lösung, da \( \displaystyle{@l1@} \geq {@-v1@}\).<br></p>
<p dir="ltr"></p>
<p dir="ltr"><u><strong></strong></u></p>
<p dir="ltr"><strong><u>Fall 2:</u></strong>&nbsp;\(\displaystyle \quad x &lt; {@-v1@}\).</p>
<p dir="ltr"></p>
<p dir="ltr">\(-(x+{@v1@})={@v2*x@}-{@v3@}\) \(\quad \Longleftrightarrow&nbsp;\quad -x-{@v1@}={@v2*x@}-{@v3@}\)&nbsp;\(\quad \Longleftrightarrow&nbsp;\quad (-1-{@v2@}) \cdot x=-{@v3@}+{@v1@}\)&nbsp;&nbsp;\(\quad \Longleftrightarrow&nbsp;\quad ({@-1-v2@}) \cdot x={@-v3+v1@}\)&nbsp;<span style="font-size: 0.9375rem;">\(\quad \Longleftrightarrow&nbsp;\quad x= \displaystyle{@l2@}\) ist keine Lösung, da \( \displaystyle{@l2@} &gt; {@-v1@}\).</span></p><p dir="ltr"><span style="font-size: 0.9375rem;">Aus den beiden Fällen ergibt sich dann die Lösungsmenge \(\mathbb{L} = \displaystyle {@loesung@}\).<br></span></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[v1: rand_with_step(1,9,1);
v2: rand_with_step(2,9,1); 
v3: rand_with_step(1,9,1); 
gl: |x+v1|=v2*x-v3
l1: (v1+v3)/(v2-1);
l2: (v3-v1)/(v2+1);
loesung: if(l1>=-v1) and (l2<-v1) then {l1,l2} else if(l1>=-v1) and (l2>-v1) then {l1} else if(l1<-v1) and (l2<-v1) then {l2} else {};]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>{@gl@}
Lösung: {@loesung@}</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span> Richtige Antwort, gut gemacht!]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-adjust"></i></span> Ihre Antwort ist teilweise richtig.]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa fa-times"></i></span> Falsche Antwort.]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>loesung</tans>
      <boxsize>20</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>loesung</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
    </tags>
  </question>

<!-- question: 781173  -->
  <question type="stack">
    <name>
      <text>Gleichungen (6)</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Lösen Sie die Gleichung \[\displaystyle {@gl@} \].</p>
<p><strong>Hinweise:</strong></p>
<ul>
    <li>Schreiben Sie die Menge mit geschweiften Klammern und trennen Sie die Lösungen mit Komma, z.B. {1,3}</li>
    <li>Schreiben Sie leere Menge als <strong>{ }</strong>.</li>
</ul>
<p>[[input:ans1]] [[validation:ans1]] [[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;"><strong>Lösungsweg:</strong></p>
<p dir="ltr">\(\displaystyle {@gl@}\)&nbsp;</p>
<p dir="ltr"><span style="font-size: 0.9375rem;">\(\quad&nbsp;\Longleftrightarrow \quad \displaystyle {@x+b/a=1/(a*(x-c))@}\)&nbsp;</span></p>
<p dir="ltr"><span style="font-size: 0.9375rem;">\(\quad&nbsp;\Longleftrightarrow \quad \displaystyle \left({@x+b/a@}\right) \cdot \left({@a*(x-c)@}\right) =1\)&nbsp;</span></p>
<p dir="ltr"><span style="font-size: 0.9375rem;">\(\quad&nbsp;\Longleftrightarrow \quad \displaystyle {@(a*x+b)*(x-c)@} = {@a*x^2+(b-a*c)*x-b*c@}=1\)&nbsp;</span></p>
<p dir="ltr"><span style="font-size: 0.9375rem;">\(\quad&nbsp;\Longleftrightarrow \quad \displaystyle {@x^2+(b-a*c)/a*x-b*c/a=1/a@}\)&nbsp;</span></p>
<p dir="ltr"><span style="font-size: 0.9375rem;">\(\quad&nbsp;\Longleftrightarrow \quad \displaystyle {@x^2+(b-a*c)/a*x-b*c/a-1/a=0@}\)</span></p>
<p dir="ltr"><span style="font-size: 0.9375rem;">\(\quad&nbsp;\Longleftrightarrow \quad \displaystyle x_{1;2} = {@-(b-a*c)/(2*a)@} \pm \sqrt{{@abs((b-a*c)/(2*a))@}^2 + {@b*c/a+1/a@}} = {@-(b-a*c)/(2*a)@} \pm {@sqrt((b-a*c)^2/(4*a^2)+b*c/a+1/a)@}\)</span></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text>vl: rand( [[1/3,1],[-1/3,2],[1/5,2],[-1/5,3],[1/7,3],[-1/7,4],[1/9,4],[-1/9,5]  ] );
a: vl[1];
c: vl[2];
b: c*ak: rand([2,3]);
gl: expand((k/a)*(a*x+b)=(k/a)*1/(x-c));
check: solve(gl,x);
loes: {rhs(check[1]),rhs(check[2])};</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>{@gl@}, Lösung: {@check@}</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtig!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Die Antwort ist teilweise richtig.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Die Antwort ist leider falsch.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>loes</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords>solve </forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>loes</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-0-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-0-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>2112178668</deployedseed>
    <deployedseed>2130435045</deployedseed>
    <deployedseed>2234368827</deployedseed>
    <deployedseed>2479621589</deployedseed>
    <deployedseed>2915652752</deployedseed>
    <deployedseed>3151992701</deployedseed>
    <deployedseed>3490695663</deployedseed>
    <deployedseed>3596202943</deployedseed>
    <deployedseed>3836530432</deployedseed>
    <deployedseed>5726719350</deployedseed>
    <deployedseed>6604247511</deployedseed>
    <deployedseed>6708678376</deployedseed>
    <deployedseed>7076575686</deployedseed>
    <deployedseed>7741111882</deployedseed>
    <deployedseed>8429885943</deployedseed>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
      <tag><text>TE:1:Grundlagen</text>
</tag>
      <tag><text>TE:2:Gleichungen</text>
</tag>
      <tag><text>te:3:Lösungsmenge</text>
</tag>
      <tag><text>src:F09-IPK</text>
</tag>
      <tag><text>Bloom:3</text>
</tag>
      <tag><text>Maier:1:2</text>
</tag>
      <tag><text>Maier:2:2</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:TaggingGeprueft</text>
</tag>
      <tag><text>qs:importIliasGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 798982  -->
  <question type="stack">
    <name>
      <text><![CDATA[Gleichungen Log,e 1 [{"DOMAINUID":"36C704E"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><span>Geben Sie alle reellen Lösungen der Gleichung \(\displaystyle {@gl2@} = {@-d@}\) an.</span></p>
<p>Diese Gleichung lässt sich durch Potenzieren auf eine lineare Gleichung zurückführen.</p>
<p>Diese lineare Gleichung ist: [[input:ans1]] [[validation:ans1]] [[feedback:prt1]] <br></p><p>Die Lösungsmenge der Gleichung ist also \(\mathbb{L}=\) [[input:ans2]] [[validation:ans2]] [[feedback:prt2]]<br></p><p></p><p><strong>Hinweise:</strong></p>
<ul>
    <li>Schreiben Sie die Menge mit geschweiften Klammern und trennen Sie die Lösungen mit Komma, z.B. {1, 3}</li>
    <li>Schreiben Sie leere Menge als {}.</li>
</ul>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p><strong>Lösungsweg:</strong></p>
<p>\(\displaystyle {@gl2@} = {@-d@}\) \(\quad \Longleftrightarrow&nbsp;\quad -\ln({@a@} \cdot x-{@b@}) = -{@d@}&nbsp;\cdot \ln({@f@})\) <span style="font-size: 0.9375rem;">\(\quad \Longleftrightarrow&nbsp;\quad \ln({@a@}&nbsp;\cdot&nbsp;x-{@b@}) = \ln({@f@}^{@d@})\) </span><span style="font-size: 0.9375rem;"><span>\(\quad \Longleftrightarrow&nbsp;\quad {@a@}&nbsp;\cdot&nbsp;x-{@b@} = {@f@}^{@d@}\) </span><span><span>\(\quad \Longleftrightarrow&nbsp;\quad x = {@LM1@}\) </span><br></span><br><br></span></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text>a: 1+rand(5);
b: 1+rand(5);
c: 1+rand(5);
d: rand([1,2,3]);
f: 1+rand(5);
lb(x):=log(x)/log(1/f);
lg(x):=log(x)/log(10);
tans1:a*x-b=f^d
tans: a*x-b
gl1:lb(tans)= -d;
gl2:lb(tans);
LM:setify(map(rhs,radcan(solve(tans1,x))));
sol:solve(tans1,x);
LM1:rhs(sol[1]);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>Berechne \({@x@}={@solve(gl1,x)@}\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span> Richtige Antwort, gut gemacht!]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-adjust"></i></span> Ihre Antwort ist teilweise richtig.]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa fa-times"></i></span> Falsche Antwort.]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>arccos</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>tans1</tans>
      <boxsize>20</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords>solve</forbidwords>
      <allowwords>lb,lg</allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>1</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>LM</tans>
      <boxsize>20</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords>solve</forbidwords>
      <allowwords>lb,lg</allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>1</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>SysEquiv</answertest>
        <sans>[ans1]</sans>
        <tans>[tans1]</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>1</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>+</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>LM</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>2</deployedseed>
    <deployedseed>5</deployedseed>
    <deployedseed>10</deployedseed>
    <deployedseed>18</deployedseed>
    <deployedseed>33</deployedseed>
    <deployedseed>44</deployedseed>
    <deployedseed>77</deployedseed>
    <deployedseed>99</deployedseed>
    <deployedseed>111</deployedseed>
    <deployedseed>666</deployedseed>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
    </tags>
  </question>

<!-- question: 798983  -->
  <question type="stack">
    <name>
      <text>Gleichungen: Wurzelgleichungen (1)</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Bestimmen Sie die Lösungsmenge der Gleichung {@gl@}</p><p>\(\mathbb{L} = \) [[input:ans]] [[validation:ans]][[feedback:prt1]]</p><p></p><p><strong>Hinweise:</strong></p>
<ul>
    <li>Schreiben Sie die Menge mit geschweiften Klammern und trennen Sie die Lösungen mit Komma, z.B. {1, 3}</li>
    <li>Schreiben Sie leere Menge als {}.</li><li>Geben Sie die exakte Lösung (keine Dezimalzahlen) ein.</li></ul>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p dir="ltr"><strong>Lösungsweg:</strong></p>
<p dir="ltr">Die vorgegebene Gleichung&nbsp;\({@sqrt(x^2+v1)=x+v2@}\) kann beidseitig quadriert werden, unter der beiden Voraussetzungen:</p>
<p dir="ltr"></p>
<ul>
    <li>\({@x^2+v1@} \geq 0\), was für alle \(x \in \mathbb{R}\) gilt.&nbsp;</li>
    <li>\({@x+v2@} \geq 0 \quad \Longleftrightarrow&nbsp;\quad x \geq {@-v2@}\)&nbsp;</li>
</ul>\(x^2+{@v1@} = x^2 + {@2*x*v2+v2*v2@}\) \(\quad \Longleftrightarrow&nbsp;\quad {@v1 = 2*x*v2+v2*v2@}\)&nbsp;\(\quad \Longleftrightarrow&nbsp;\quad {@2*x*v2+v2*v2-v1=0@}\)&nbsp;\(\quad \Longleftrightarrow&nbsp;\quad {@2*x*v2=-v2^2+v1@}\)&nbsp;\(\quad \Longleftrightarrow&nbsp;\quad \displaystyle x={@(-v2*v2+v1)/(2*v2)@}\) ist die Lösung, weil \(\displaystyle {@l1@} \geq {@-v2@}\).<br>
<p></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text>v1: rand_with_step(1,8,1);
v2: rand_with_step(1,4,1);
gl: sqrt(x^2+v1)=x+v2;
l1: (v1-v2^2)/(2*v2);
loesung: {l1};</text>
    </questionvariables>
    <specificfeedback format="html">
      <text><![CDATA[<p dir="ltr"></p><br>
<p></p>]]></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>{@gl@}Lösung: {@loesung@}</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span> Richtige Antwort, gut gemacht!]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-adjust"></i></span> Ihre Antwort ist teilweise richtig.]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa fa-times"></i></span> Falsche Antwort.]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans</name>
      <type>algebraic</type>
      <tans>loesung</tans>
      <boxsize>25</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint>{?,?,...}</syntaxhint>
      <syntaxattribute>1</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>3</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans</sans>
        <tans>loesung</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>1-0-T </trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>1-0-F </falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Quadrieren Sie die Gleichung zuerst auf beiden Seiten, um die Quadradwurzel aufzulösen.</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <qtest>
      <testcase>1</testcase>
      <description></description>
      <testinput>
        <name>ans</name>
        <value>ta</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>1-0-T</expectedanswernote>
      </expected>
    </qtest>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
      <tag><text>Rückmeldebaum</text>
</tag>
      <tag><text>TE:1:Grundlagen</text>
</tag>
      <tag><text>TE:2:Gleichungen</text>
</tag>
      <tag><text>TE:3:Wurzelgleichungen</text>
</tag>
      <tag><text>te:3:Lösungsmenge</text>
</tag>
      <tag><text>src:F09-IPK</text>
</tag>
      <tag><text>Bloom:3</text>
</tag>
      <tag><text>Maier:1:2</text>
</tag>
      <tag><text>Maier:2:1</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:TaggingGeprueft</text>
</tag>
      <tag><text>qs:importIliasGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 0  -->
  <question type="category">
    <category>
      <text>$course$/top/Digitale Aufgaben/Woche 1</text>
    </category>
    <info format="html">
      <text></text>
    </info>
    <idnumber></idnumber>
  </question>

<!-- question: 798988  -->
  <question type="gapselect">
    <name>
      <text><![CDATA[Äquivalenz von Aussagen [DE] (JH) [{"DOMAINUID":"4268681"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Verifizieren Sie anhand der folgenden Wahrheitstafel, dass die beiden Aussagen \((A\Rightarrow B)\Rightarrow B\) und \(A\vee B\) äquivalent zueinander sind.
</p>
<table style="border: 3px solid; border-spacing:10px;">

  <tbody>
    <tr style="border: 2px solid">
      <td style="border: 2px solid">\(\; \; A\; \;\)</td>
      <td style="border: 2px solid">\(\; \; B\; \;\)</td>
      <td style="border: 2px solid">\(\; \; A\Rightarrow B\; \;\)</td>
      <td style="border: 2px solid">\(\; \; (A\Rightarrow B)\Rightarrow B\; \;\)</td>
      <td style="border: 2px solid">\(\; \; A\vee B\; \;\)</td>
    </tr>
    <tr style="border: 2px solid">
      <td style="border: 2px solid">wahr</td>
      <td style="border: 2px solid">wahr</td>
      <td style="border: 2px solid">[[1]]</td>
      <td style="border: 2px solid">[[5]]</td>
      <td style="border: 2px solid">[[1]]</td>
    </tr>
    <tr style="border: 2px solid">
      <td style="border: 2px solid">wahr</td>
      <td style="border: 2px solid">falsch</td>
      <td style="border: 2px solid">[[2]]</td>
      <td style="border: 2px solid">[[1]]</td>
      <td style="border: 2px solid">[[5]]</td>
    </tr>
    <tr style="border: 2px solid">
      <td style="border: 2px solid">falsch</td>
      <td style="border: 2px solid">wahr</td>
      <td style="border: 2px solid">[[1]]</td>
      <td style="border: 2px solid">[[5]]</td>
      <td style="border: 2px solid">[[1]]</td>
    </tr>
    <tr style="border: 2px solid">
      <td style="border: 2px solid">falsch</td>
      <td style="border: 2px solid">falsch</td>
      <td style="border: 2px solid">[[5]]</td>
      <td style="border: 2px solid">[[8]]</td>
      <td style="border: 2px solid">[[2]]</td>
    </tr>

  </tbody>
</table>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>3.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <shuffleanswers>1</shuffleanswers>
    <correctfeedback format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span> Alle Antworten sind richtig, gut gemacht!]]></text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-adjust"></i></span> Ihre Antworten sind teilweise richtig.]]></text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa fa-times"></i></span> Alle Antworten sind falsch.]]></text>
    </incorrectfeedback>
    <shownumcorrect/>
    <selectoption>
      <text>wahr</text>
      <group>1</group>
    </selectoption>
    <selectoption>
      <text>falsch</text>
      <group>2</group>
    </selectoption>
    <selectoption>
      <text>falsch</text>
      <group>1</group>
    </selectoption>
    <selectoption>
      <text>wahr</text>
      <group>2</group>
    </selectoption>
    <selectoption>
      <text>wahr</text>
      <group>3</group>
    </selectoption>
    <selectoption>
      <text>falsch</text>
      <group>3</group>
    </selectoption>
    <selectoption>
      <text>wahr</text>
      <group>4</group>
    </selectoption>
    <selectoption>
      <text>falsch</text>
      <group>4</group>
    </selectoption>
    <hint format="html">
      <text></text>
      <shownumcorrect/>
    </hint>
    <hint format="html">
      <text></text>
      <shownumcorrect/>
    </hint>
  </question>

<!-- question: 798984  -->
  <question type="stack">
    <name>
      <text><![CDATA[Aussage negieren [{"DOMAINUID":"56D6538"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Negieren Sie die folgenden Aussagen.<br></p>
<p>a) Aussage \(A\) = "Alle Hunde haben vier Beine"</p>
<p>\(\lnot A=\) [[input:ans1]] [[input:ans2]]&nbsp;<span style="font-size: 0.9375rem;">[[feedback:prt1]]</span></p>
<p><span style="font-size: 0.9375rem;">b) Aussage \(B\) = "Es gibt mindestens ein Gebäude auf der Welt, das höher ist als 500 Meter"</span><br></p>
<p>\(\lnot B=\) [[input:ans3]] [[input:ans4]]&nbsp;<span style="font-size: 0.9375rem;">[[feedback:prt2]]</span></p>
<p><span style="font-size: 0.9375rem;">c) Aussage \(C\) = "Es gibt keinen Mathematiker, der sich noch nie verrechnet hat"</span><br></p>
<p>\(\lnot C=\) [[input:ans5]] [[input:ans6]]&nbsp;<span style="font-size: 0.9375rem;">[[feedback:prt3]]</span></p>
<p><span style="font-size: 0.9375rem;">d) Aussage \(D\) = "Für alle Pferdebesitzer gilt, dass alle ihre Pferde wiehern"</span><br></p>
<p>\(\lnot D=\) [[input:ans7]] [[input:ans8]] [[input:ans9]]&nbsp;<span style="font-size: 0.9375rem;">[[feedback:prt4]]</span></p><p>[[validation:ans1]] [[validation:ans2]] [[validation:ans3]] [[validation:ans4]] [[validation:ans5]] [[validation:ans6]] [[validation:ans7]] [[validation:ans8]] [[validation:ans9]]<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p><b>Hinweis zur Negation von Aussagen:</b></p><p>Aussagen mit Quantoren (\(\forall\) und \(\exists\)) werden negiert, indem man jeden der \(\forall\) in ein \(\exists\) umgewandelt und umgekehrt. Die inneren Aussagen werden ganz normal negiert, die Aussagen des Quantors bleiben unberührt.<br></p><p><u>Beispiel:</u> \(\lnot (\forall x\in M : x&gt;5 )\Leftrightarrow \exists x\in M: x\le 5\)<br></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[/*Erstellt von Jonas Lache, Ruhr-Universität Bochum*/

L1_1: [[1,true,"Es gibt mindestens einen Hund,"],[2,false,"Es gibt genau einen Hund,"],[3,false,"Für alle Hunde gilt, dass"],[4,false,"Es gibt keinen Hund,"]];
L1: random_permutation(L1_1);
L2_1: [[1,true,"der nicht vier Beine hat"],[2,false,"der mehr als vier Beine hat"],[3,false,"der weniger als vier Beine hat"], [4,false,"der genau vier Beine hat"]];
L2: random_permutation(L2_1);

L3_1: [[1,true,"Für jedes Gebäude auf der Welt gilt,"],[2,false,"Es gibt genau ein Gebäude auf der Welt, für das gilt,"],[3,false,"Es gibt mindestens ein Gebäude auf der Welt, für das gilt,"],[4,false,"Es gibt kein Gebäude auf der Welt, für das gilt,"]];
L3: random_permutation(L3_1);
L4_1: [[1,true,"dass es niedriger als 500 Meter oder genau 500 Meter hoch ist"],[2,false,"dass es genau 500 Meter hoch ist"],[3,false,"dass es niedriger als 500 Meter ist"], [4,false,"dass es höher als 500 Meter oder genau 500 Meter hoch ist"]];
L4: random_permutation(L4_1);

L5_1: [[1,true,"Es gibt mindestens einen Mathematiker, für den gilt,"],[2,false,"Es gibt genau einen Mathematiker, für den gilt, "],[3,false,"Für jeden Mathematiker gilt,"],[4,false,"Es gibt keinen Mathematiker, für den gilt,"]];
L5: random_permutation(L5_1);
L6_1: [[1,true,"dass er sich noch nie verrechnet hat"],[2,false,"dass er sich jedes Mal verrechnet"],[3,false,"dass er sich schon genau einmal verrechnet hat"], [4,false,"dass er sich schon mindestens einmal verrechnet hat"]];
L6: random_permutation(L6_1);


L7_1: [[1,true,"Es gibt mindestens einen Pferdebesitzer, für den gilt,"],[2,false,"Es gibt genau einen Pferdebesitzer, für den gilt, "],[3,false,"Für jeden Pferdebesitzer gilt,"],[4,false,"Es gibt keinen Pferdebesitzer, für den gilt,"]];
L7: random_permutation(L7_1);
L8_1: [[1,true,"dass er mindstens ein Pferd besitzt, für das gilt,"],[2,false,"dass nur Pferde besitzt, von denen für jedes gilt,"],[3,false,"dass er genau ein Pferd besitzt, für das gilt,"], [4,false,"dass er kein Pferd besitzt, für das gilt"]];
L8: random_permutation(L8_1);
L9_1: [[1,true,"dass es nicht wiehert"],[2,false,"dass es schon genau einmal gewiehert hat"],[3,false,"dass es schon mindestens einmal gewiehert hat"]];
L9: random_permutation(L9_1);]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>{@L1@}, {@L2@} {@L3@}, {@L4@} {@L5@}, {@L6@}</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span> Richtige Antwort, gut gemacht!]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-adjust"></i></span> Ihre Antwort ist teilweise korrekt.]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa fa-times"></i></span> Falsche Antwort.]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>dropdown</type>
      <tans>L1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>dropdown</type>
      <tans>L2</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>dropdown</type>
      <tans>L3</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>dropdown</type>
      <tans>L4</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans5</name>
      <type>dropdown</type>
      <tans>L5</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans6</name>
      <type>dropdown</type>
      <tans>L6</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans7</name>
      <type>dropdown</type>
      <tans>L7</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans8</name>
      <type>dropdown</type>
      <tans>L8</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans9</name>
      <type>dropdown</type>
      <tans>L9</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text><![CDATA[SAns1: sconcat((L1_1[ans1])[3]," ",(L2_1[ans2])[3]);]]></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0</truescore>
        <truepenalty></truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Ihre Antwort "{@SAns1@}" ist leider nicht korrekt.<br>Richtig wäre "Es gibt mindestens einen Hund, der nicht vier Beine hat". <br></p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[Ihre Antwort "{@SAns1@}" ist leider nicht korrekt.<br>Richtig wäre "Es gibt mindestens einen Hund, der nicht vier Beine hat".<br>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text><![CDATA[SAns2: sconcat((L3_1[ans3])[3]," ",(L4_1[ans4])[3]);]]></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0</truescore>
        <truepenalty></truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[Ihre Antwort "{@SAns2@}" ist leider nicht korrekt.<br>Richtig wäre "Für jedes Gebäude auf der Welt gilt, dass es niedriger als 500 Meter oder genau 500 Meter hoch ist"<br>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Ihre Antwort "{@SAns2@}" ist leider nicht korrekt.<br>Richtig wäre "Für jedes Gebäude auf der Welt gilt, dass es niedriger als 500 Meter oder genau 500 Meter hoch ist"<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt3</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text><![CDATA[SAns3: sconcat((L5_1[ans5])[3]," ",(L6_1[ans6])[3]);]]></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans5</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0</truescore>
        <truepenalty></truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt3-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt3-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Ihre Antwort "{@SAns3@}" ist leider nicht korrekt.<br>Richtig wäre "Es gibt mindestens einen Mathematiker, für den gilt, dass er sich noch nie verrechnet hat"<br></p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans6</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt3-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt3-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Ihre Antwort "{@SAns3@}" ist leider nicht korrekt.<br>Richtig wäre "Es gibt mindestens einen Mathematiker, für den gilt, dass er sich noch nie verrechnet hat"<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt4</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text><![CDATA[SAns4: sconcat((L7_1[ans7])[3]," ",(L8_1[ans8])[3]," ",(L9_1[ans9])[3]);]]></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans7</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0</truescore>
        <truepenalty></truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt4-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt4-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p></p><p>Ihre Antwort "{@SAns4@}" ist leider nicht korrekt.<br>Richtig wäre "Es gibt mindestens einen Pferdebesitzer, für den gilt, dass er mindstens ein Pferd besitzt, für das gilt, dass es nicht wiehert"<br></p><br><p></p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans8</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0</truescore>
        <truepenalty></truepenalty>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt4-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt4-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Ihre Antwort "{@SAns4@}" ist leider nicht korrekt.<br>Richtig wäre "Es 
gibt mindestens einen Pferdebesitzer, für den gilt, dass er mindstens 
ein Pferd besitzt, für das gilt, dass es nicht wiehert"<br></p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans9</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt4-3-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt4-3-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Ihre Antwort "{@SAns4@}" ist leider nicht korrekt.<br>Richtig wäre "Es 
gibt mindestens einen Pferdebesitzer, für den gilt, dass er mindstens 
ein Pferd besitzt, für das gilt, dass es nicht wiehert"<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 781241  -->
  <question type="stack">
    <name>
      <text><![CDATA[Notwendig vs. hinreichend [{"DOMAINUID":"0FE4C1D"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p>Wir betrachten die folgenden zwei Aussagen:<br></p><p><i>Aussage \(A\): "Person X ist Student/in"</i></p><p><i>Aussage \(B\): "Person X nimmt an MathePlus teil"</i><br></p><p>Welche der folgenden Aussagen treffen zu? Kreuzen Sie eine oder mehrere Antwortmöglichkeiten an.<br></p><p>[[input:ans1]] [[validation:ans1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p><b>Hinweis:</b>
</p>
<ul>
  <li>Zum Begriff "notwendige Bedingung":
    <br>Ist \(A\) eine notwendige Bedingung für \(B\), bedeutet das, dass \(A\) eintreten muss, damit \(B\) eintreten kann. Wenn schon klar ist, dass \(B\) eingetreten ist, heißt dies dann automatisch, dass \(A\) auch gelten muss. Daher schreibt man in diesem
    Fall \(B\Rightarrow A\).
    <br>
    <br><u>Beispiel:</u> Die Aussage <i>"Person X ist Student/in"</i> ist eine notwendige Bedingung für die Aussage <i>"Person X nimmt an MathePlus teil"</i>, denn man muss studieren um an MathePlus teilnehmen zu können.
    <br>
  </li>
</ul>
<p>
  <br>
</p>
<ul>
  <li>Zum Begriff "hinreichende Bedingung":
    <br>Ist \(A\) eine hinreichende Bedingung für \(B\), bedeutet das, dass \(A\) <u>eine</u> Ursache für \(B\) ist, aber nicht notwendigerweise die einzige: Wenn \(A\) eintritt, bedeutet dies, dass \(B\) ebenfalls eintritt. Allerdings bedeutet umgekehrt das Eintreten von \(B\) nicht immer, dass auch \(A\) eingetreten sein muss.
    Man schreibt \(A\Rightarrow B\)
    .<br>
    <div>
      <br><u>Beispiel:</u> Die Aussage <i>"Person X nimmt an MathePlus teil"</i> ist eine hinreichende Bedingung für die Aussage <i>"Person X ist Student/in"</i>, denn wenn Person X an MathePlus teilnimmt, dann muss er/sie auch Student/in sein.
      <br>Umgekehrt folgt aus der Aussage, dass Person X Student/in ist noch nicht, dass er/sie auch an MathePlus teilnimmt.
      <br>
    </div>
  </li>
</ul>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[/*Erstellt von Jonas Lache, Ruhr-Universität Bochum*/
Liste: [[1,true," A ist eine notwendige Bedingung für B"],[2,false," B ist eine notwendige Bedingung für A"],[3,false," A ist eine hinreichende Bedingung für B"],[4,true," B ist eine hinreichende Bedingung für A"],[5,false," A und B sind äquivalente Aussagen"]];

TAnsMenge: set(1,4);]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text></text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>checkbox</type>
      <tans>Liste</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>SAnsMenge: setify(ans1);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>SAnsMenge</sans>
        <tans>TAnsMenge</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>member(1,SAnsMenge)</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(A\) ist eine notwendige Bedingung für \(B\), denn man muss Student/in sein um an MathePlus teilzunehmen.<br></p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>member(2,SAnsMenge)</sans>
        <tans>false</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>3</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>3</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(B\) ist keine notwendige Bedingung für \(A\), denn man muss nicht bei MathePlus teilnehmen, um ein/e Student/in zu sein.<br></p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>member(3,SAnsMenge)</sans>
        <tans>false</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>4</truenextnode>
        <trueanswernote>prt1-4-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>4</falsenextnode>
        <falseanswernote>prt1-4-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(A\) ist keine hinreichende Bedingung für \(B\), denn wenn Person X 
Student/in ist folgt daraus noch nicht, dass sie auch bei MathePlus 
teilnimmt.<br></p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>4</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>member(4,SAnsMenge)</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>5</truenextnode>
        <trueanswernote>prt1-5-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>5</falsenextnode>
        <falseanswernote>prt1-5-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(B\) ist eine hinreichende Bedingung für \(A\), denn wenn Person X bei MathePlus teilnimmt, folgt daraus, dass sie Student/in sein muss.<br></p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>5</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>member(3,SAnsMenge)</sans>
        <tans>false</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-6-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-6-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(A\) und \(B\) sind nicht äquivalent zu einander, denn dann müsste \(B\) aus \(A\) und \(A\) aus \(B\) folgen, was hier nicht der Fall ist.<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 798987  -->
  <question type="stack">
    <name>
      <text><![CDATA[Welche Aussagen sind äquivalent? [{"DOMAINUID":"130EE58"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Seien \(A\), \(B\) und \(C\) logische Aussagen. Geben Sie jeweils an, ob die beiden Aussagen äquivalent zu einander sind.</p>
<table>
    <thead>
        <tr>
            <th scope="col"><span style="font-weight: normal;">a)
                </span>
                <br>
            </th>
            <th scope="col"><span style="font-weight: normal;">\( A \Rightarrow B \)&nbsp;<span>und&nbsp;<span>\( B \Rightarrow A \)</span></span></span>
                <br>
            </th>
            <th scope="col"><br>
            </th>
            <th scope="col">&nbsp;<br>
            </th>
            <th scope="col"><span style="font-weight: normal;">[[input:ans1]]</span>
            </th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>b)
                <br>
            </td>
            <td><span>\( A \Rightarrow B \)&nbsp;<span>und&nbsp;\(&nbsp;\lnot B \Rightarrow \lnot A\)</span></span>
            </td>
            <td><span></span>
                <br>
            </td>
            <td><br>
            </td>
            <td>[[input:ans2]]</td>
        </tr>
        <tr>
            <td>c)
                <br>
            </td>
            <td>\( A \lor B \) <span>und \( B \lor A \)</span><br>
            </td>
            <td><span></span>
                <br>
            </td>
            <td><br></td>
            <td>[[input:ans3]]</td>
        </tr>
        <tr>
            <td>d)
                <br>
            </td>
            <td>\( A \lor B \lor C \) <span>und</span> \( (A \lor B) \lor C \)<br>
            </td>
            <td><span></span>
                <br>
            </td>
            <td><br></td>
            <td>[[input:ans4]]</td>
        </tr>
        <tr>
            <td>e)
                <br>
            </td>
            <td>\( A \land (B \lor C) \) <span>und \( (A \land B) \lor C \)<br></span></td>
            <td><span></span>
                <br>
            </td>
            <td><br></td>
            <td>[[input:ans5]]</td>
        </tr>
        <tr>
            <td>f)
                <br>
            </td>
            <td>\( \lnot (A \land B) \) <span>und&nbsp; \( \lnot A \lor \lnot B \)</span><br>
            </td>
            <td><span></span>
                <br>
            </td>
            <td><br>
            </td>
            <td>[[input:ans6]]</td>
        </tr>
    </tbody>
</table>
[[validation:ans1]] [[validation:ans2]] [[validation:ans3]] [[validation:ans4]] [[validation:ans5]] [[validation:ans6]]]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p></p><p><strong>Hinweise:</strong></p><p>a) Die Aussagen <span>\( A \Rightarrow B \)&nbsp;<span>und&nbsp;<span>\( B \Rightarrow A \) sind <strong><span>nicht</span> äquivalent</strong>.<br></span></span></span><span><span><span></span></span></span> &nbsp;&nbsp; &nbsp; <u>Beispiel:</u> \(A\) = <i>"Draußen regnet es"</i> und \(B\) = <i>"Die Straße ist nass"</i><br>&nbsp;&nbsp;&nbsp;&nbsp; Dann gilt zwar \(A\Rightarrow B\), aber <u>nicht</u> \(B\Rightarrow A\), denn die Straße könnte ja auch aus anderen Gründen nass sein.<br><span><span><span></span></span></span><span><span><span></span></span></span></p><p><span><span><span>b) Die Aussagen <span>\( A \Rightarrow B \)&nbsp;<span>und&nbsp;\(&nbsp;\lnot B \Rightarrow \lnot A\) sind <strong>äquivalent</strong></span></span></span></span></span>. Diese Regel nennt man Kontrapositionsgesetz.<span><span><span><span></span></span></span></span><br>
</p>
 <ol>
         </ol><ol>
      </ol>c) In der Aussagenlogik ist die<span> Disjunktion ("\(\lor\)") kommutativ, daher sind&nbsp;\( A \lor B \) <span>und \( B \lor A \)</span><span><span> <strong>äquivalent</strong>.</span></span></span><p></p><p>d) Die Aussagen \( A \lor B \lor C \) <span>und</span> \( (A \lor B) \lor C \) sind <strong>äquivalent</strong>. Dies sieht man, wenn man eine Wahrheitstafel anfertigt.</p><p>e) Die Aussagen \( A \land (B \lor C) \) <span>und \( (A \land B) \lor C \) sind <strong><span>nicht</span> äquivalent</strong>. Dies sieht man, wenn man eine Wahrheitstafel anfertigt.</span><br></p><p>f) Die Aussagen \( \lnot (A \land B) \) <span>und&nbsp; \( \lnot A \lor \lnot B \) sind <strong>äquivalent</strong>. Diese Regel ist eines der De Morganschen Gesetze der Aussagenlogik.</span><br></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[/*Erstellt von Jonas Lache, Ruhr-Universität Bochum*/
L1: [[false,true,"nicht äquivalent"],[true,false,"äquivalent"]];
L2: [[false,false,"nicht äquivalent"],[true,true,"äquivalent"]];
L3: [[false,false,"nicht äquivalent"],[true,true,"äquivalent"]];
L4: [[false,false,"nicht äquivalent"],[true,true,"äquivalent"]];
L5: [[false,true,"nicht äquivalent"],[true,false,"äquivalent"]];
L6: [[false,false,"nicht äquivalent"],[true,true,"äquivalent"]];]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text></text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span> Alle Antworten sind richtig, gut gemacht!]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-adjust"></i></span> Ihre Antworten sind teilweise richtig.]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa fa-times"></i></span> Alle Antworten sind falsch.]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>dropdown</type>
      <tans>L1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>dropdown</type>
      <tans>L2</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>dropdown</type>
      <tans>L3</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>dropdown</type>
      <tans>L4</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans5</name>
      <type>dropdown</type>
      <tans>L5</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans6</name>
      <type>dropdown</type>
      <tans>L6</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>false</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.167</truescore>
        <truepenalty></truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.167</truescore>
        <truepenalty></truepenalty>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.167</truescore>
        <truepenalty></truepenalty>
        <truenextnode>3</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>3</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.167</truescore>
        <truepenalty></truepenalty>
        <truenextnode>4</truenextnode>
        <trueanswernote>prt1-4-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>4</falsenextnode>
        <falseanswernote>prt1-4-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>4</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans5</sans>
        <tans>false</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.167</truescore>
        <truepenalty></truepenalty>
        <truenextnode>5</truenextnode>
        <trueanswernote>prt1-5-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>5</falsenextnode>
        <falseanswernote>prt1-5-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>5</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans6</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.167</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-6-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-6-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 0  -->
  <question type="category">
    <category>
      <text>$course$/top/Mengenlehre</text>
    </category>
    <info format="moodle_auto_format">
      <text></text>
    </info>
    <idnumber></idnumber>
  </question>

<!-- question: 800674  -->
  <question type="matching">
    <name>
      <text><![CDATA[Operationen mit Teilmengen reeller Zahlen [DE] (AP) [{"DOMAINUID":"42B4EF3"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Wir betrachten die folgenden Teilmengen der Menge der reellen Zahlen: &nbsp;</p>
<p>\( A=\{x\in\mathbb{R}\;|\;&nbsp; x\geq 1\}\) und \( B=\{x\in\mathbb{R}\;|\;&nbsp; x&lt; 5\}\)</p><p>Bestimmen Sie die folgenden Mengen.</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;">\(A \cup B = \{x\in\mathbb{R}\;|\; x\geq 1 \text{ oder } x &lt; 5\} = (-\infty;\ +\infty) = \mathbb{R}\)<br></p><p dir="ltr" style="text-align: left;">\(A \cap B = \{x\in\mathbb{R}\;|\; x\geq 1 \text{ und } x &lt; 5\} = [1;\ 5)\)<br></p><p dir="ltr" style="text-align: left;">\(A \setminus B = \{x\in\mathbb{R}\;|\; x\geq 1 \text{ und } x \geq 5\} = [5;\ +\infty)\)<br></p><p dir="ltr" style="text-align: left;">\(B \setminus A = \{x\in\mathbb{R}\;|\;&nbsp;x &lt; 5 \text{ und } x &lt; 1\} = (-\infty;\ 1)\)<br></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.2000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <shuffleanswers>false</shuffleanswers>
    <correctfeedback format="html">
      <text><![CDATA[<p>Die Antwort ist richtig</p>]]></text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text><![CDATA[<p>Die Antwort ist teilweise richtig.</p>]]></text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text><![CDATA[<p>Die Antwort ist falsch</p>]]></text>
    </incorrectfeedback>
    <shownumcorrect/>
    <subquestion format="html">
      <text><![CDATA[<p>\(A \cup B = \)<br></p>]]></text>
      <answer>
        <text><![CDATA[(-&infin;; +&infin;)]]></text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text><![CDATA[<p>\(A \cap B = \)<br></p>]]></text>
      <answer>
        <text>[1; 5)</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text><![CDATA[<p>\(A \setminus B = \)<br></p>]]></text>
      <answer>
        <text><![CDATA[[5; +&infin;)]]></text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text><![CDATA[<p>\(B \setminus A = \)<br></p>]]></text>
      <answer>
        <text><![CDATA[(-&infin;; 1)]]></text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>[1; 5]</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text><![CDATA[(-&infin;; 1]]]></text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text><![CDATA[(5; +&infin;)]]></text>
      </answer>
    </subquestion>
    <hint format="html">
      <text><![CDATA[<p>Achten Sie darauf, ob es sich um echte Ungleichungen handelt oder nicht.</p>]]></text>
      <clearwrong/>
    </hint>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
    </tags>
  </question>

<!-- question: 800675  -->
  <question type="multichoice">
    <name>
      <text><![CDATA[Mengenlehre1 [DE] (EG) [{"DOMAINUID":"53C72AA"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Welche der folgenden Beschreibungen der grauen Menge auf dem Bild sind korrekt?</p>
<p style="text-align: left;">
    <img src="@@PLUGINFILE@@/Venn%28BNotA%29Cup%28ACapC%29.png" alt="" role="presentation" style="width:30%" class="img-fluid atto_image_button_text-bottom" width="250" height="213">
    <br>
</p>]]></text>
<file name="Bildschirmfoto 2017-10-07 um 12.24.25.png" path="/" encoding="base64"></file>
<file name="Venn(BNotA)Cup(ACapC).png" path="/" encoding="base64"></file>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>false</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Die Antwort ist richtig.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Die Antwort ist teilweise richtig.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Die Antwort ist falsch.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="100" format="html">
      <text><![CDATA[<p>\((B \setminus A) \cup (A \cap C)\)<br></p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p dir="ltr" style="text-align: left;">Richtig, sehr gut!</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="-100" format="html">
      <text><![CDATA[<p>\((B \cap C) \cup (B \cap A) \cup B\)<br></p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p dir="ltr" style="text-align: left;">Leider falsch, da es die folgende Menge ist.<br><br><img src="@@PLUGINFILE@@/Venn%28BNotA%29Cup%28ACapC%29_2.png" alt="" role="presentation" class="img-fluid atto_image_button_text-bottom" width="450" height="413"><br></p>]]></text>
<file name="Venn(BNotA)Cup(ACapC)_2.png" path="/" encoding="base64"></file>
<file name="Venn(BNotA)Cup(ACapC).png" path="/" encoding="base64"></file>
      </feedback>
    </answer>
    <answer fraction="-100" format="html">
      <text><![CDATA[<p>\((C \setminus A) \cap (B \setminus A)\)<br></p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p dir="ltr" style="text-align: left;">Leider falsch, da es die folgende Menge ist.<br><img src="@@PLUGINFILE@@/Venn%28BNotA%29Cup%28ACapC%29_3.png" alt="" role="presentation" class="img-fluid atto_image_button_text-bottom" width="450" height="710"><br></p>]]></text>
<file name="Venn(BNotA)Cup(ACapC)_3.png" path="/" encoding="base64"></file>
      </feedback>
    </answer>
  </question>

<!-- question: 800736  -->
  <question type="multichoice">
    <name>
      <text><![CDATA[Mengenlehre2 [DE] (EG) [{"DOMAINUID":"C0899E1"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Welche der folgenden Beschreibungen der grauen Menge auf dem Bild sind korrekt?</p>
<p>
    <img src="@@PLUGINFILE@@/Venn%28ANotC%29.png" alt="" role="presentation" style="width:30%" class="img-fluid atto_image_button_text-bottom" width="450" height="639"></p>]]></text>
<file name="Bildschirmfoto 2017-10-07 um 12.21.13.png" path="/" encoding="base64"></file>
<file name="Venn(ANotC).png" path="/" encoding="base64"></file>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>false</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span>&nbsp;Alle Antworten sind richtig, gut gemacht!]]></text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-adjust"></i></span> Ihre Antwort ist teilweise korrekt, da es weitere richtige Lösungen gibt.]]></text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text></text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="33.33333" format="html">
      <text><![CDATA[<p>\(A \setminus C\)</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p dir="ltr" style="text-align: left;">Richtig, sehr gut!<br></p>]]></text>
      </feedback>
    </answer>
    <answer fraction="33.33333" format="html">
      <text><![CDATA[<p>\((A \setminus C) \cap (A \cup C)\)
</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p dir="ltr" style="text-align: left;">Richtig, sehr gut!<br></p>]]></text>
      </feedback>
    </answer>
    <answer fraction="-100" format="html">
      <text><![CDATA[<p>\((A \cup B) \setminus (C \setminus A)\)</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p dir="ltr" style="text-align: left;">Leider falsch, da es die folgende Menge ist.<br></p><p dir="ltr" style="text-align: left;"><img src="@@PLUGINFILE@@/Venn%28BNotA%29Cup%28ACapC%29_4.png" alt="" role="presentation" class="img-fluid atto_image_button_text-bottom" width="450" height="710"><br></p>]]></text>
<file name="Venn(BNotA)Cup(ACapC)_4.png" path="/" encoding="base64"></file>
      </feedback>
    </answer>
    <answer fraction="33.33333" format="html">
      <text><![CDATA[<p>\((A \setminus (B \cup C)) \cup ((A \cap B) \setminus C)\)</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p dir="ltr" style="text-align: left;">Richtig, sehr gut!<br></p>]]></text>
      </feedback>
    </answer>
  </question>

<!-- question: 800677  -->
  <question type="stack">
    <name>
      <text><![CDATA[1. Blatt 1. Teil zufällig [{"DOMAINUID":"5F4E202"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Geben Sie zu dem folgenden Paar von Mengen an, welche der vier Relationen gelten.</p>
<p>\(\left\{{@a1@},{@a2@},{@a3@},{@a3@},{@a4@}\right\}\) und \(\left\{{@a1@},{@a2@},{@a2@},{@a3@}\right\}\)&nbsp;</p><p></p><span style="font-size: 0.9375rem;">\( \subset \) [[input:ans1]][[validation:ans1]]&nbsp;</span><br><span style="font-size: 0.9375rem;">\( \supset \) [[input:ans2]][[validation:ans2]]&nbsp;</span><br><span style="font-size: 0.9375rem;">\( \in \) [[input:ans3]][[validation:ans3]]&nbsp;</span><br><span style="font-size: 0.9375rem;">\( = \) [[input:ans4]][[validation:ans4]]</span><br><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p><strong>Lösungsweg:</strong></p><p>\(\left\{{@a1@},{@a2@},{@a3@},{@a3@},{@a4@}\right\} \not\subset \left\{{@a1@},{@a2@},{@a2@},{@a3@}\right\}\), weil z.B. \({@a4@} \not\in&nbsp;\left\{{@a1@},{@a2@},{@a2@},{@a3@}\right\}\).</p><p></p><p>\(\left\{{@a1@},{@a2@},{@a3@},{@a3@},{@a4@}\right\} \supset&nbsp;\left\{{@a1@},{@a2@},{@a2@},{@a3@}\right\}\),&nbsp;<span style="font-size: 0.9375rem;">weil \({@a1@},&nbsp;{@a2@},&nbsp;{@a3@} \in \left\{{@a1@},{@a2@},{@a3@},{@a3@},{@a4@}\right\}\).</span></p><p>\(\left\{{@a1@},{@a2@},{@a3@},{@a3@},{@a4@}\right\} \not\in \left\{{@a1@},{@a2@},{@a2@},{@a3@}\right\}\), weil \(\left\{{@a1@},{@a2@},{@a2@},{@a3@}\right\}\) keine Menge \(\left\{{@a1@},{@a2@},{@a3@},{@a3@},{@a4@}\right\}\) als Element hat.</p>\(\left\{{@a1@},{@a2@},{@a3@},{@a3@},{@a4@}\right\} \not= \left\{{@a1@},{@a2@},{@a2@},{@a3@}\right\}\), weil z.B. \({@a4@} \not\in&nbsp;\left\{{@a1@},{@a2@},{@a2@},{@a3@}\right\}\).<br><p></p><p></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text>a1:rand_with_step(1,20,1);
a2:rand_with_prohib(-12,9,[a1]);
a3:rand_with_prohib(30,40,[a1,a2]);
a4:rand_with_prohib(120,4000,[a1,a2,a3]);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>{@a1@},{@a2@},{@a3@},{@a4@}</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>boolean</type>
      <tans>false</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>boolean</type>
      <tans>true</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>boolean</type>
      <tans>false</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>boolean</type>
      <tans>false</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>false</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.25</truescore>
        <truepenalty></truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.25</truescore>
        <truepenalty></truepenalty>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>false</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.25</truescore>
        <truepenalty></truepenalty>
        <truenextnode>3</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>3</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>false</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.25</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-4-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-4-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
    </tags>
  </question>

<!-- question: 800678  -->
  <question type="stack">
    <name>
      <text><![CDATA[1. Blatt 2. Teil zufällig [{"DOMAINUID":"5495BEC"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Geben Sie zu dem folgenden Paar von Mengen an, welche der vier Relationen gelten</p>
<p>\(\left\{{@a1@},{@a2@},{@a3@}\right\}\) und \(\left\{{@a1@},{@a3@},{@a2@},{@a2@}\right\}\)</p><p></p><span style="font-size: 0.9375rem;">\(\subset\) [[input:ans1]][[validation:ans1]]</span><br><span style="font-size: 0.9375rem;">\(\supset\) [[input:ans2]][[validation:ans2]]</span><br><span style="font-size: 0.9375rem;">\(\in\) [[input:ans3]][[validation:ans3]]</span><br><span style="font-size: 0.9375rem;">\(=\) [[input:ans4]][[validation:ans4]]</span><br><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p><strong>Lösungsweg:</strong></p><p>\(\left\{{@a1@},{@a2@},{@a3@}\right\} \not\subset \left\{{@a1@},{@a3@},{@a2@},{@a2@}\right\}\),&nbsp;weil jedes Element \({@a1@},&nbsp;{@a2@},&nbsp;{@a3@} \in \left\{{@a1@},{@a3@},{@a2@},{@a2@}\right\}\).</p><p>\(\left\{{@a1@},{@a2@},{@a3@}\right\} \not\supset \left\{{@a1@},{@a3@},{@a2@},{@a2@}\right\}\),&nbsp;weil jedes Element \({@a1@},&nbsp;{@a2@},&nbsp;{@a3@} \in \left\{{@a1@},{@a2@},{@a3@}\right\}\).<br></p><p>\(\left\{{@a1@},{@a2@},{@a3@}\right\} \not\in \left\{{@a1@},{@a3@},{@a2@},{@a2@}\right\}\), weil \(\left\{{@a1@},{@a3@},{@a2@},{@a2@}\right\}\) keine Menge \(\left\{{@a1@},{@a2@},{@a3@}\right\}\) als Element hat.<br></p><p>\(\left\{{@a1@},{@a2@},{@a3@}\right\} \subset \left\{{@a1@},{@a3@},{@a2@},{@a2@}\right\}\),&nbsp;weil jedes Element \({@a1@},&nbsp;{@a2@},&nbsp;{@a3@} \in \left\{{@a1@},{@a3@},{@a2@},{@a2@}\right\}\) und&nbsp;\({@a1@},&nbsp;{@a2@},&nbsp;{@a3@} \in \left\{{@a1@},{@a2@},{@a3@}\right\}\).<br></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text>a1:rand_with_step(-70,1000,1);
a2:rand_with_prohib(120,400,[a1]);
a3:rand_with_prohib(-140,-20,[a1,a2]);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>{@a1@},{@a2@},{@a3@}</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>boolean</type>
      <tans>false</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>boolean</type>
      <tans>false</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>boolean</type>
      <tans>false</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>boolean</type>
      <tans>true</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>false</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.2500000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>false</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.2500000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>false</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.2500000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>3</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>3</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.2500000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-4-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-4-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
    </tags>
  </question>

<!-- question: 800679  -->
  <question type="stack">
    <name>
      <text><![CDATA[1. Blatt 3. Teil [{"DOMAINUID":"EF93283"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Geben Sie zu dem folgenden Paar von Mengen an, welche der vier Relationen gelten&nbsp;</p><p><span style="font-size: 0.9375rem;">\(\emptyset\) und \(\left\{\emptyset\right\}\)</span></p><p></p><span style="font-size: 0.9375rem;">\(\subset\) [[input:ans1]]</span><span style="font-size: 0.9375rem;">[[validation:ans1]]</span><br><span style="font-size: 0.9375rem;">\(\supset\) [[input:ans2]]</span><span style="font-size: 0.9375rem;">[[validation:ans2]]</span><br><span style="font-size: 0.9375rem;">\(\in\) [[input:ans3]]</span><span style="font-size: 0.9375rem;">[[validation:ans3]]</span><br><span style="font-size: 0.9375rem;">\(=\) [[input:ans4]]</span><span style="font-size: 0.9375rem;">[[validation:ans4]]</span><br><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<pr><strong>Lösungsweg:<br></strong><br>\(\emptyset = \{\} \subset \left\{\emptyset\right\}\), weil leere Menge immer eine Teilmenge jeder Menge ist.<br><br>\(\emptyset = \{\} \not\supset \left\{\emptyset\right\}\), weil \(\emptyset \in \left\{\emptyset\right\}\).<br><br>\(\emptyset \in \left\{\emptyset\right\}\).<br><br>\(\emptyset&nbsp;= \{\} \not= \left\{\emptyset\right\}\), weil \(\emptyset \in \left\{\emptyset\right\}\).<br></pr>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text></text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text></text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>boolean</type>
      <tans>true</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>boolean</type>
      <tans>false</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>boolean</type>
      <tans>true</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>boolean</type>
      <tans>false</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.2500000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>false</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.2500000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.2500000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>3</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>3</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>false</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.2500000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-4-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-4-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
    </tags>
  </question>

<!-- question: 800680  -->
  <question type="stack">
    <name>
      <text><![CDATA[1. Blatt 4. Teil [{"DOMAINUID":"F856C02"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Geben Sie zu dem folgenden Paar von Mengen an, welche der vier Relationen gelten</p><p>\(\left\{{@a1@},{@a2@},{@a3@},\left\{\emptyset\right\}\right\}\) und \(\left\{{@a2@},{@a3@},\emptyset\right\}\)<br></p><p></p><span style="font-size: 0.9375rem;">\(\subset\) [[input:ans1]]</span><span style="font-size: 0.9375rem;">[[validation:ans1]]</span><br><span style="font-size: 0.9375rem;">\(\supset\) [[input:ans2]]</span><span style="font-size: 0.9375rem;">[[validation:ans2]]</span><br><span style="font-size: 0.9375rem;">\(\in\) [[input:ans3]]</span><span style="font-size: 0.9375rem;">[[validation:ans3]]</span><br><span style="font-size: 0.9375rem;">\(=\) [[input:ans4]]</span><span style="font-size: 0.9375rem;">[[validation:ans4]]</span><br><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p><strong>Lösungsweg:<br></strong></p><p>\(\left\{{@a1@},{@a2@},{@a3@},\left\{\emptyset\right\}\right\} \not\subset \left\{{@a2@},{@a3@},\emptyset\right\}\), weil \({@a1@} \not\in \left\{{@a2@},{@a3@},\emptyset\right\}\).</p><p>\(\left\{{@a1@},{@a2@},{@a3@},\left\{\emptyset\right\}\right\} \not\supset \left\{{@a2@},{@a3@},\emptyset\right\}\), weil \(\emptyset \not\in \left\{{@a1@},{@a2@},{@a3@},\left\{\emptyset\right\}\right\}\).<br></p><p></p><p>\(\left\{{@a1@},{@a2@},{@a3@},\left\{\emptyset\right\}\right\} \not\in \left\{{@a2@},{@a3@},\emptyset\right\}\), weil \(\left\{{@a2@},{@a3@},\emptyset\right\}\) keine Menge \(\left\{{@a1@},{@a2@},{@a3@},\left\{\emptyset\right\}\right\}\) als Element hat.<br></p><p>\(\left\{{@a1@},{@a2@},{@a3@},\left\{\emptyset\right\}\right\} \not= \left\{{@a2@},{@a3@},\emptyset\right\}\), weil \({@a1@} \not\in \left\{{@a2@},{@a3@},\emptyset\right\}\).</p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text>a1:rand_with_step(63,79,1);
a2:rand_with_prohib(-512,-95,[a1]);
a3:rand_with_prohib(41,65,[a1,a2]);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>{@a1@},{@a2@},{@a3@}</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>boolean</type>
      <tans>false</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>boolean</type>
      <tans>false</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>boolean</type>
      <tans>false</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>boolean</type>
      <tans>false</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>false</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.2500000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>false</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.2500000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>false</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.2500000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>3</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>3</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>false</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.2500000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-4-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-4-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
    </tags>
  </question>

<!-- question: 801071  -->
  <question type="stack">
    <name>
      <text><![CDATA[Aufzählende Form angeben [{"DOMAINUID":"BD1CD04"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[Stellen Sie die folgenden Mengen in aufzählender Form dar.
<p></p>
<p>a) \(M_1 = \left\{n^{@n5@}+{@n1@} \ \Big|\&nbsp; n\in\mathbb N, n &lt; {@n2@} \right\} = \) [[input:ans1]] [[validation:ans1]] [[feedback:prt1]]</p>
<p>b) \(M_2 = \left\{{@n3@} \cdot z \ \Big|\ z \in \mathbb Z, |z|\le {@n4@} \right\} = \) [[input:ans2]] [[validation:ans2]] [[feedback:prt2]]</p><p></p><p><strong>Hinweis:<br></strong></p><ul><li>Schreiben Sie die Menge mit geschweiften Klammern. Trennen Sie die Lösungen mit Komma, z.B. {1,3}.</li><li>Schreiben Sie die leere Menge als { }.</li></ul>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<strong>Lösungsweg:</strong>
<p></p>
<p>a) Für jede natürliche Zahl, die \(n &lt; {@n2@}\) ist, wird die Potenz \(n^{@n5@}\) gebildet und die Zahl \({@n1@}\) dazu addiert. So bekommt man die Menge \(M_1 = {@M1@}\).</p>
<p>b) Für jede ganze Zahl, die \({@-n4@} \le z \le {@n4@}\) ist, wird das \({@n3@}\)-fache dieser Zahl gebildet. So bekommt man die Menge \(M_2 = {@M2@}\).</p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text>/*Erstellt von Stephan Bach, OTH Amberg-Weiden*/

n1:rand(4)+1;
n2:rand(2)+3;
n3:rand_with_prohib(2,5,[n1]);
n4:rand_with_prohib(1,3,[n2])
n5:rand([2,3])

M1:makelist(i^n5+n1,i,1,n2-1);
M1:setify(M1);
M2:makelist(n3*i,i,-n4,n4);
M2:setify(M2);

/*mögliche Falschantwort für Fragetests*/
fa1:setify(makelist(i^n5+n1,i,0,n2-1));
fa2:setify(makelist(n3*i,i,0,n4));</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text><![CDATA[a) \(M_1=\{n^{@n5@}+{@n1@} \ |\  n\in\mathbb N, n<{@n2@}\}={@M1@}, \hspace{0.5cm}\)
b) \(M_2=\{{@n3@} z\ |\ z \in \mathbb Z, |z| \le {@n4@}\}={@M2@}\)]]></text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span> <strong>Richtige Antwort, gut gemacht!</strong>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-adjust"></i></span> <strong>Ihre Antwort ist teilweise korrekt.</strong>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa fa-times"></i></span> <strong>Falsche Antwort.</strong>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>M1</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>2</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>M2</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>2</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>M1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>fa1</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p></p><p>Beachten Sie, dass die Zahl \(0\) kein Element der natürlichen Zahlen ist und daher \(0^{@n5@}+{@n1@}={@0^n5+n1@}\notin M_1\).</p><p>Die korrekte Darstellung der Menge ist \(M_1={@M1@}\).<br></p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p></p><p>Die korrekte Darstellung der Menge ist \(M_1={@M1@}\).<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>M2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p></p>
<p>Die korrekte Darstellung der Menge ist \(M_2={@M2@}\).<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>439398470</deployedseed>
    <deployedseed>1518990853</deployedseed>
    <deployedseed>1663661717</deployedseed>
    <deployedseed>241964910</deployedseed>
    <deployedseed>128602194</deployedseed>
    <deployedseed>290659520</deployedseed>
    <deployedseed>1178953760</deployedseed>
    <deployedseed>541389342</deployedseed>
    <deployedseed>636801768</deployedseed>
    <deployedseed>2084640002</deployedseed>
    <deployedseed>1344897941</deployedseed>
    <deployedseed>1221120020</deployedseed>
    <deployedseed>1294565485</deployedseed>
    <deployedseed>1701133430</deployedseed>
    <deployedseed>439653355</deployedseed>
    <qtest>
      <testcase>1</testcase>
      <description></description>
      <testinput>
        <name>ans1</name>
        <value>M1</value>
      </testinput>
      <testinput>
        <name>ans2</name>
        <value>M2</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt1-1-T</expectedanswernote>
      </expected>
      <expected>
        <name>prt2</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt2-1-T</expectedanswernote>
      </expected>
    </qtest>
    <qtest>
      <testcase>2</testcase>
      <description></description>
      <testinput>
        <name>ans1</name>
        <value>fa1</value>
      </testinput>
      <testinput>
        <name>ans2</name>
        <value>fa2</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>0.0000000</expectedscore>
        <expectedpenalty>0.1000000</expectedpenalty>
        <expectedanswernote>prt1-2-T</expectedanswernote>
      </expected>
      <expected>
        <name>prt2</name>
        <expectedscore>0.0000000</expectedscore>
        <expectedpenalty>0.1000000</expectedpenalty>
        <expectedanswernote>prt2-1-F</expectedanswernote>
      </expected>
    </qtest>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
    </tags>
  </question>

<!-- question: 800682  -->
  <question type="stack">
    <name>
      <text>Aufzählende Form_Vorkurs</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Seien \(A = \{x | x \hbox{ ist eine ungerade ganze Zahl und } x \hbox{ ist größer als 0 und kleiner als } {@a@}\}\), und \( B = \{x | x \hbox{ ist eine gerade ganze Zahl und } x \hbox{ ist größer als } {@b@} \hbox{ und kleiner als } {@c@} \}\). Bestimmen Sie die folgenden Mengen \(A\) und \(B\).</p><p>
\(A = \) [[input:ans1]] [[validation:ans1]] [[feedback:prt1]]&nbsp;</p><p>\(B = \) [[input:ans2]] [[validation:ans2]] [[feedback:prt2]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p><strong>Lösüng:</strong><br></p><p>\(\begin{align*}A &amp; = \{x | x \hbox{ ist eine ungerade ganze Zahl und } x \hbox{ ist größer als 0 und kleiner als } {@a@}\}\\ &amp; = {@ta1@}. \end{align*}\)</p><p>\(\begin{align*}B &amp; = \{x | x \hbox{ ist eine gerade ganze Zahl und } x \hbox{ ist größer als } {@b@} \hbox{ und kleiner als } {@c@} \}\\ &amp; = {@ta2@}. \end{align*}\)</p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text>/*Erstellt von Gozel Judakova, OVGU Magdeburg*/

a:rand(5)+10;
b:rand(5)+15;
c:rand(5)+30;
L1:makelist(i,i,1,a-1);
L2:makelist(i,i,b+1,c-1);
A:setify(L1);
B:setify(L2);
ta1:subset(A,oddp);
ta2:subset(B,evenp);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\[A = \{x | x \hbox{ ist eine ungerade ganze Zahl und } x \hbox{ ist größer als 0 und kleiner als } {@a@}\}\]
\[ B = \{x | x \hbox{ ist eine gerade ganze Zahl und } x \hbox{ ist größer als } {@b@} \hbox{ und kleiner als } {@c@} \}\]
\( A = {@ta1@}, \quad B={@ta2@} \)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span> Richtige Antwort, gut gemacht!]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-check"></i></span> Deine Antwort ist teilweise korrekt.]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa fa-times"></i></span> Falsche Antwort.]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>ta1</tans>
      <boxsize>20</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint>{?, ?, ?, ...}</syntaxhint>
      <syntaxattribute>1</syntaxattribute>
      <forbidwords>subset</forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>3</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>ta2</tans>
      <boxsize>20</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint>{?, ?, ?, ...}</syntaxhint>
      <syntaxattribute>1</syntaxattribute>
      <forbidwords>subset</forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>3</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>ta1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>ta2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>439398470</deployedseed>
    <deployedseed>1518990853</deployedseed>
    <deployedseed>1663661717</deployedseed>
    <deployedseed>241964910</deployedseed>
    <deployedseed>128602194</deployedseed>
    <deployedseed>290659520</deployedseed>
    <deployedseed>1178953760</deployedseed>
    <deployedseed>541389342</deployedseed>
    <deployedseed>636801768</deployedseed>
    <deployedseed>2084640002</deployedseed>
    <deployedseed>1344897941</deployedseed>
    <deployedseed>1221120020</deployedseed>
    <deployedseed>1294565485</deployedseed>
    <deployedseed>1701133430</deployedseed>
    <deployedseed>439653355</deployedseed>
    <qtest>
      <testcase>1</testcase>
      <description></description>
      <testinput>
        <name>ans1</name>
        <value>M1</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt1-1-T</expectedanswernote>
      </expected>
    </qtest>
    <qtest>
      <testcase>2</testcase>
      <description></description>
      <testinput>
        <name>ans1</name>
        <value>fa1</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>0.0000000</expectedscore>
        <expectedpenalty>0.1000000</expectedpenalty>
        <expectedanswernote>prt1-2-T</expectedanswernote>
      </expected>
    </qtest>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
    </tags>
  </question>

<!-- question: 800732  -->
  <question type="stack">
    <name>
      <text><![CDATA[Beschreibende Form angeben  [{"DOMAINUID":"4368EDD"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[Stellen Sie die folgenden Mengen in beschreibender Form dar. <br>
Ergänzen Sie dafür jeweils noch die allgemeine Form der Elemente, d.h. füllen Sie die Lücken aus.<br><p></p>

<p>a) \(M_1=\{ {@l1[1]@},{@l1[2]@},{@l1[3]@},{@l1[4]@},{@l1[5]@},\ldots\} = \Bigg\{ \)[[input:ans1]] \(\Big|\ n \in \mathbb N_0 = \mathbb N \cup \{0\} \Bigg\} \)[[validation:ans1]] [[feedback:prt1]]</p>
<p></p>
<p>b) \(M_2=\{ {@l2[1]@},{@l2[2]@},{@l2[3]@},{@l2[4]@},{@l2[5]@},\ldots\} = \Bigg \{ \)[[input:ans2]] \(\Big|\ n \in \mathbb N \Bigg\} \)[[validation:ans2]] [[feedback:prt2]]</p>
<p>c) \(M_3=\left\{ \displaystyle {@l3[1]@},{@l3[2]@},{@l3[3]@},{@l3[4]@},{@l3[5]@},\ldots\right\} = \Bigg \{
    \)[[input:ans3]] \(\Big|\ n \in \mathbb N\Bigg\}\) [[validation:ans3]] [[feedback:prt3]]</p>

<p style="margin-top:2em;"><strong>Hinweis:</strong><em>&nbsp;</em><span style="font-size: 0.9375rem;">Beachten Sie, dass \(n\) bei Aufgabe a) Element der Menge \(\mathbb N_0=\mathbb N \cup \{0\}\) und bei den Aufgaben b) und c) Element der Menge \(\mathbb N\) ist.</span></p>
<p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p><b>Diese Aufgabe kann wie folgt gelöst werden:</b></p><p>Hier kann man die Lösung durch geschicktes Ausprobieren herausfinden. <br></p><p><u>Beispiel (Aufgabe a)):</u><br>Es ist ein Term \(t(x)\) gesucht mit \(t(0)={@l1[1]@}\), \(t(1)={@l1[2]@}\),&nbsp;\(t(2)={@l1[3]@}\) usw. <br>Geht man zunächst davon aus, dass der Term die Form \(t(x) = a \cdot x+b\) hat, folgt aus \(t(0)={@l1[1]@}\) sofort, dass \(b={@l1[1]@}\) gilt (also \(t(x)=ax+{@l1[1]@}\)).<br>Setzt man nun \(t({\color{Green}1})={\color{Red} {@l1[2]@} }\) ein, erhält man \({\color{Red}{@l1[2]@}}=a\cdot {\color{Green}1}+{@l1[1]@} \Leftrightarrow a={@n1@}\). Daraus folgt, dass der richtige Term \(t(x)={@ta1@}\) sein <i>könnte</i>. Jetzt müssen wir noch überprüfen, ob auch \(t(2)={@l1[3]@}\) usw. gilt. Dies ist hier der Fall, also sind wir fertig.</p><p>Die anderen Teilaufgaben b) und c) funktionieren analog durch geschicktes Ausprobieren und Überprüfen von Vermutungen.<br></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text>/*Erstellt von Stephan Bach, OTH Amberg-Weiden*/
/*Verändert von Jonas Lache, Ruhr-Universität Bochum (Allgemeines Feedback)*/

n1:rand_with_step(3,7,1);
r:rand_with_step(1,n1-1,1);
n2:rand_with_prohib(3,5,[n1]);
n0:rand_with_step(2,4,1);

ta1:n1*n+r;
l1:makelist(ev(ta1,n=i),i,0,4);
oa1:n1*n-(n1-r);

ta2:n2*(n+n0);
l2:makelist(ev(ta2,n=i),i,1,5);

ta3:rand([n/(n+1),(n+2)/(n+1)]);
l3:makelist(ev(ta3,n=i),i,1,5);</text>
    </questionvariables>
    <specificfeedback format="plain_text">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>a) \(M_1=\{{@l1[1]@},{@l1[2]@},{@l1[3]@},{@l1[4]@},...\} = \{{@ta1@} | n \in \mathbb N_0 \}, \hspace{0.5cm}\)
b) \(M_2=\{ {@l2[1]@},{@l2[2]@},{@l2[3]@},{@l2[4]@},...\} = \{ {@ta2@} |\ n \in \mathbb N\}, \hspace{0.5cm} \)
c)  \(M_3=\{ {@l3[1]@},{@l3[2]@},{@l3[3]@},{@l3[4]@},{@l3[5]@},...\} = \{ {@ta3@}|\ n \in \mathbb N\} \)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span> Richtige Antwort, gut gemacht!]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-adjust"></i></span> Ihre Antwort ist teilweise korrekt.]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa fa-times"></i></span> Falsche Antwort.]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>ta1</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>2</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>ta2</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>2</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>ta3</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>2</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>ta1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>oa1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.5</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Für \(n \in \mathbb N\) wäre Ihre Antwort richtig. Es gilt aber \(n \in \mathbb N_0\), und für \(n=0\) ist \({@ans1@}={@ev(ans1,n=0)@} \notin M_1\). <br></p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>ta2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt3</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>ta3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt3-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt3-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>1369694768</deployedseed>
    <deployedseed>1730328752</deployedseed>
    <deployedseed>4424115</deployedseed>
    <deployedseed>1144504690</deployedseed>
    <deployedseed>2065974215</deployedseed>
    <deployedseed>1054860652</deployedseed>
    <deployedseed>1624134075</deployedseed>
    <deployedseed>36945099</deployedseed>
    <deployedseed>588478007</deployedseed>
    <deployedseed>412881549</deployedseed>
    <deployedseed>1453916964</deployedseed>
    <deployedseed>48370691</deployedseed>
    <qtest>
      <testcase>1</testcase>
      <description></description>
      <testinput>
        <name>ans1</name>
        <value>ta1</value>
      </testinput>
      <testinput>
        <name>ans2</name>
        <value>ta2</value>
      </testinput>
      <testinput>
        <name>ans3</name>
        <value>ta3</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt1-1-T</expectedanswernote>
      </expected>
      <expected>
        <name>prt2</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt2-1-T</expectedanswernote>
      </expected>
      <expected>
        <name>prt3</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt3-1-T</expectedanswernote>
      </expected>
    </qtest>
    <qtest>
      <testcase>2</testcase>
      <description></description>
      <testinput>
        <name>ans1</name>
        <value>oa1</value>
      </testinput>
      <testinput>
        <name>ans2</name>
        <value></value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>0.5000000</expectedscore>
        <expectedpenalty>0.1000000</expectedpenalty>
        <expectedanswernote>prt1-2-T</expectedanswernote>
      </expected>
      <expected>
        <name>prt2</name>
        <expectedscore></expectedscore>
        <expectedpenalty></expectedpenalty>
        <expectedanswernote>NULL</expectedanswernote>
      </expected>
    </qtest>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
      <tag><text>Lösungsidee</text>
</tag>
    </tags>
  </question>

<!-- question: 800684  -->
  <question type="stack">
    <name>
      <text>Beschreibende Form_Vorkurs</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[Stellen Sie die folgende Menge in beschreibender Form dar.  Ergänzen Sie dafür jeweils noch die allgemeine Form der Elemente, d.h. füllen Sie die Lücken aus.<br><p></p>

<p> \(M=\{ {@l1[1]@},{@l1[2]@},{@l1[3]@},{@l1[4]@},{@l1[5]@},\ldots\} = \Bigg\{ \)[[input:ans1]] \(\Big|\ n \in \mathbb N_0 = \mathbb N \cup \{0\} \Bigg\} \)[[validation:ans1]] [[feedback:prt1]]</p>
<p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p><b>Diese Aufgabe kann wie folgt gelöst werden:</b></p><p>Hier kann man die Lösung durch geschicktes Ausprobieren herausfinden. <br></p><p><u>Beispiel:</u><br>Es ist ein Term \(t(x)\) gesucht mit \(t(0)={@l1[1]@}\), \(t(1)={@l1[2]@}\),&nbsp;\(t(2)={@l1[3]@}\) usw. <br>Geht man zunächst davon aus, dass der Term die Form \(t(x) = a \cdot x+b\) hat, folgt aus \(t(0)={@l1[1]@}\) sofort, dass \(b={@l1[1]@}\) gilt (also \(t(x)=ax+{@l1[1]@}\)).<br>Setzt man nun \(t({\color{Green}1})={\color{Red} {@l1[2]@} }\) ein, erhält man \({\color{Red}{@l1[2]@}}=a\cdot {\color{Green}1}+{@l1[1]@} \Leftrightarrow a={@n1@}\). Daraus folgt, dass der richtige Term \(t(x)={@ta1@}\) sein <i>könnte</i>. Jetzt müssen wir noch überprüfen, ob auch \(t(2)={@l1[3]@}\) usw. gilt. Dies ist hier der Fall, also sind wir fertig.</p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text>/*Erstellt von Stephan Bach, OTH Amberg-Weiden*/
/*Verändert von Jonas Lache, Ruhr-Universität Bochum (Allgemeines Feedback)*/

n1:rand_with_step(3,7,1);
r:rand_with_step(1,n1-1,1);
n2:rand_with_prohib(3,5,[n1]);
n0:rand_with_step(2,4,1);

ta1:n1*n+r;
l1:makelist(ev(ta1,n=i),i,0,4);
oa1:n1*n-(n1-r);

ta2:n2*(n+n0);
l2:makelist(ev(ta2,n=i),i,1,5);

ta3:rand([n/(n+1),(n+2)/(n+1)]);
l3:makelist(ev(ta3,n=i),i,1,5);</text>
    </questionvariables>
    <specificfeedback format="plain_text">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>a) \(M_1=\{{@l1[1]@},{@l1[2]@},{@l1[3]@},{@l1[4]@},...\} = \{{@ta1@} | n \in \mathbb N_0 \}, \hspace{0.5cm}\)
b) \(M_2=\{ {@l2[1]@},{@l2[2]@},{@l2[3]@},{@l2[4]@},...\} = \{ {@ta2@} |\ n \in \mathbb N\}, \hspace{0.5cm} \)
c)  \(M_3=\{ {@l3[1]@},{@l3[2]@},{@l3[3]@},{@l3[4]@},{@l3[5]@},...\} = \{ {@ta3@}|\ n \in \mathbb N\} \)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p><img alt="Richtig" title="Richtig" src="https://moodle.oth-aw.de/theme/image.php/clean/core/1554451383/i/grade_correct"> Richtige Antwort, gut gemacht!<br></p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p><span style="font-size:24px;color:grey;">! </span>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p><img alt="Falsch" title="Falsch" src="https://moodle.oth-aw.de/theme/image.php/clean/core/1554451383/i/grade_incorrect"> Falsche Antwort.<br></p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>ta1</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>2</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>ta1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>oa1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.5</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Für \(n \in \mathbb N\) wäre Ihre Antwort richtig. Es gilt aber \(n \in \mathbb N_0\), und für \(n=0\) ist \({@ans1@}={@ev(ans1,n=0)@} \notin M_1\). <br></p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>1369694768</deployedseed>
    <deployedseed>1730328752</deployedseed>
    <deployedseed>4424115</deployedseed>
    <deployedseed>1144504690</deployedseed>
    <deployedseed>2065974215</deployedseed>
    <deployedseed>1054860652</deployedseed>
    <deployedseed>1624134075</deployedseed>
    <deployedseed>36945099</deployedseed>
    <deployedseed>588478007</deployedseed>
    <deployedseed>412881549</deployedseed>
    <deployedseed>1453916964</deployedseed>
    <deployedseed>48370691</deployedseed>
    <qtest>
      <testcase>1</testcase>
      <description></description>
      <testinput>
        <name>ans1</name>
        <value>ta1</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt1-1-T</expectedanswernote>
      </expected>
    </qtest>
    <qtest>
      <testcase>2</testcase>
      <description></description>
      <testinput>
        <name>ans1</name>
        <value>oa1</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>0.5000000</expectedscore>
        <expectedpenalty>0.1000000</expectedpenalty>
        <expectedanswernote>prt1-2-T</expectedanswernote>
      </expected>
    </qtest>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
      <tag><text>Lösungsidee</text>
</tag>
    </tags>
  </question>

<!-- question: 800685  -->
  <question type="stack">
    <name>
      <text><![CDATA[Ist x ein Element/Teilmenge der Menge?  [{"DOMAINUID":"635F157"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Beantworten Sie folgende Fragen:</p>
<table>
    <tbody>
        <tr>
            <td>a)</td>
            <td>Ist \(0\) ein Element von \(\mathbb{Z}\)?
                <br>
            </td>
            <td>[[input:ans1]]</td>
        </tr>
        <tr>
            <td>&nbsp;</td>
            <td colspan="2">&nbsp;[[feedback:prt1]]</td>

        </tr>
        <tr>
            <td>b)</td>
            <td>Ist \(\emptyset\) ein Element von \(\mathbb{Z}\)?
                <br>
            </td>
            <td>[[input:ans2]]</td>
        </tr>
        <tr>
            <td>&nbsp;</td>
            <td colspan="2">&nbsp;[[feedback:prt2]]</td>

        </tr>
        <tr>
            <td>c)</td>
            <td>Ist \(\{\emptyset\}\) ein Element von \(\mathbb{Z}\)?
                <br>
            </td>
            <td>[[input:ans3]]</td>
        </tr>
        <tr>
            <td>&nbsp;</td>
            <td colspan="2">&nbsp;[[feedback:prt3]]</td>

        </tr>
        <tr>
            <td>d)</td>
            <td>Ist \(0\) eine Teilmenge von \(\mathbb{Z}\)?</td>
            <td>[[input:ans4]]</td>
        </tr>
        <tr>
            <td>&nbsp;</td>
            <td colspan="2">&nbsp;[[feedback:prt4]]</td>

        </tr>
        <tr>
            <td>e)</td>
            <td>Ist \(\emptyset\) eine Teilmenge von \(\mathbb{Z}\)?
                <br>
            </td>
            <td>[[input:ans5]]</td>
        </tr>
        <tr>
            <td>&nbsp;</td>
            <td colspan="2">&nbsp;[[feedback:prt5]]</td>

        </tr>
        <tr>
            <td>f)</td>
            <td>Ist \(\{\emptyset\}\) eine Teilmenge von \(\mathbb{Z}\)?
                <br>
            </td>
            <td>[[input:ans6]]</td>
        </tr>
        <tr>
            <td>&nbsp;</td>
            <td colspan="2">&nbsp;[[feedback:prt6]]</td>

        </tr>
        <tr>
            <td>g)</td>
            <td>Ist \(\emptyset\) ein Element von \(\emptyset\)?
                <br>
            </td>
            <td>[[input:ans7]]</td>
        </tr>
        <tr>
            <td>&nbsp;</td>
            <td colspan="2">&nbsp;[[feedback:prt7]]</td>

        </tr>
        <tr>
            <td>h)</td>
            <td>Ist \(\emptyset\) ein Element von \(\{\emptyset\}\)?
                <br>
            </td>
            <td>[[input:ans8]]</td>
        </tr>
        <tr>
            <td>&nbsp;</td>
            <td colspan="2">&nbsp;[[feedback:prt8]]</td>

        </tr>
        <tr>
            <td>i)</td>
            <td>Ist \(\emptyset\) ein Element von \(\{{@n1@},\ldots,{@n2@}\}\times\mathbb{Z}\)?
        <br>
      </td>
      <td>[[input:ans9]]
        <br>
      </td>
    </tr>
    <tr>
      <td>&nbsp;</td>
      <td colspan="2">&nbsp;[[feedback:prt9]]</td>
      
    </tr>
    <tr>
      <td>j)</td>
      <td>&nbsp;Ist \(\emptyset\) eine Teilmenge von \(\{{@n1@},\ldots,{@n2@}\}\times\mathbb{Z}\)?
        <br>
      </td>
      <td>&nbsp;[[input:ans10]]</td>
    </tr>
    <tr>
      <td>&nbsp;</td>
      <td colspan="2">&nbsp;[[feedback:prt10]]</td>
      
    </tr>
  </tbody>
</table>
<p></p>[[validation:ans1]] [[validation:ans2]] [[validation:ans3]] [[validation:ans4]] [[validation:ans5]] [[validation:ans6]] [[validation:ans7]] [[validation:ans8]] [[validation:ans9]] [[validation:ans10]]
<br>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text>n1:rand(10);
n2:15+rand(10);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>{@n1@},{@n2@}</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>boolean</type>
      <tans>true</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans10</name>
      <type>boolean</type>
      <tans>true</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>boolean</type>
      <tans>false</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>boolean</type>
      <tans>false</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>boolean</type>
      <tans>false</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans5</name>
      <type>boolean</type>
      <tans>true</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans6</name>
      <type>boolean</type>
      <tans>false</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans7</name>
      <type>boolean</type>
      <tans>false</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans8</name>
      <type>boolean</type>
      <tans>true</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans9</name>
      <type>boolean</type>
      <tans>false</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[Denn: Die Menge \(\mathbb{Z}\) umfasst alle Zahlen \(\{&nbsp; \ldots,-3,-2,-1,0,1,2,3,\ldots \}\).<br>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Denn: Die Menge&nbsp;\(\mathbb{Z}\) umfasst alle Zahlen \(\{&nbsp; \ldots,-3,-2,-1,0,1,2,3,\ldots \}\).<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt10</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans10</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt10-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p></p><p>Denn: Die leere Menge \(\emptyset\) ist eine Teilmenge von jeder Menge.<br></p><p></p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt10-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p></p><p>Denn: Die leere Menge \(\emptyset\) ist eine Teilmenge von jeder Menge.<br></p><p></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>false</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Denn: \(\emptyset\) ist eine Menge und \(\mathbb{Z}=\{&nbsp; \ldots,-3,-2,-1,0,1,2,3,\ldots \}\) hat nur Zahlen und nicht die
 Menge \(\emptyset\) als Elemente.<br></p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Denn: \(\emptyset\) ist eine Menge und \(\mathbb{Z}=\{&nbsp; \ldots,-3,-2,-1,0,1,2,3,\ldots \}\) hat nur Zahlen und nicht die
 Menge \(\emptyset\) als Elemente.<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt3</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>false</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt3-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Denn: \(\{\emptyset\}\) ist eine Menge, die als Element nur die leere Menge \(\emptyset\) als Element enthält. Diese Menge ist nicht als Element in \(\mathbb{Z}=\{&nbsp; 
\dots,-5,-4,-3,-2,-1,0,1,2,3,4,5,\dots \}\) enthalten.<br></p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt3-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Denn: \(\{\emptyset\}\) ist eine 
Menge, die als Element nur die leere Menge \(\emptyset\) als Element enthält. Diese 
Menge ist nicht als Element in \(\mathbb{Z}=\{&nbsp; 
\dots,-5,-4,-3,-2,-1,0,1,2,3,4,5,\dots \}\) enthalten.<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt4</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>false</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt4-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Denn: \(0\) ist eine Zahl und keine Menge und kann daher keine Teilmenge von \(\mathbb{Z}\) sein.<br></p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt4-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Denn: \(0\) ist eine Zahl und keine Menge und kann daher keine Teilmenge von \(\mathbb{Z}\) sein.</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt5</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans5</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt5-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Denn: Die leere Menge \(\emptyset\) ist eine Teilmenge von jeder Menge.<br></p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt5-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Denn: Die leere Menge \(\emptyset\) ist eine Teilmenge von jeder Menge.</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt6</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans6</sans>
        <tans>false</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt6-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Denn: \(\{\emptyset\}\) ist eine Menge, die nur die leere Menge \(\emptyset\) als Element enthält. Diese Menge ist keine Teilmenge von \(\mathbb{Z}\), denn \(\mathbb{Z}\) enthält \(\emptyset\) nicht als Element.<br></p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt6-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Denn: \(\{\emptyset\}\) ist eine
    Menge, die nur die leere Menge \(\emptyset\) als Element enthält. Diese
    Menge ist keine Teilmenge von \(\mathbb{Z}\), denn \(\mathbb{Z}\)
    enthält \(\emptyset\) nicht als Element.<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt7</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans7</sans>
        <tans>false</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt7-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p></p><p>Denn: \(\emptyset\) ist die leere Menge und enthält daher keine Elemente (auch nicht sich selbst).<br></p><p></p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt7-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Denn: \(\emptyset\) ist die leere Menge und enthält daher keine Elemente (auch nicht sich selbst).<br></p><p></p><p></p><br>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt8</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans8</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt8-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Denn: \(\{\emptyset\}\) ist die Menge, die die leere Menge \(\emptyset\) als Element enthält. Somit gilt \(\emptyset \in \{\emptyset\}\).<br></p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt8-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p></p><p>Denn: \(\{\emptyset\}\) ist die Menge, die die leere Menge \(\emptyset\) als Element enthält. Somit gilt \(\emptyset \in \{\emptyset\}\).<br></p><p></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt9</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans9</sans>
        <tans>false</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt9-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Denn: Die Menge \(\{{@n1@},\ldots,{@n2@}\}\times\mathbb{Z}\) besteht aus allen Tupeln \((x,y)\), mit \(x\in \{{@n1@},\ldots,{@n2@}\}\) und \(y \in \mathbb{Z}\). Daher ist die leere Menge \(\emptyset\) kein Element dieser Menge.<br></p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt9-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Denn: Die Menge \(\{{@n1@},\ldots,{@n2@}\}\times\mathbb{Z}\) besteht aus 
allen Tupeln \((x,y)\), mit \(x\in \{{@n1@},\ldots,{@n2@}\}\) und \(y \in
 \mathbb{Z}\). Daher ist die leere Menge \(\emptyset\) kein Element 
dieser Menge.<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>Rückmeldebaum</text>
</tag>
    </tags>
  </question>

<!-- question: 800686  -->
  <question type="stack">
    <name>
      <text><![CDATA[Mengen angeben um Ungleichung zu beweisen [{"DOMAINUID":"3D729C2"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Zeigen Sie, dass für drei Mengen \(A, B, C\) im Allgemeinen \[(A\cap B)\cup C \ne (A\cap C)\cup B\] gilt, indem Sie drei Mengen \(A, B, C\) angeben, bei denen diese Ungleichung erfüllt ist.
    <br>
</p>
<p>\(A=\) [[input:ans1]] [[validation:ans1]]</p>
<p>\(B=\) [[input:ans2]] [[validation:ans2]]</p>
<p>\(C=\) [[input:ans3]] [[validation:ans3]]</p>
<p><span><span style=""><strong style="">Hinweis:</strong><span style=""> Eine Menge \(\{a,b,c\}\) können Sie mit </span></span><code style="">{a,b,c}</code> eingeben.</span></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p><b>Lösungsidee:</b></p><p>Ein Beispiel für drei Mengen, an denen deutlich wird, dass im Allgemeinen \[(A\cap B)\cup C \ne (A\cap C)\cup B\] gilt, sind die Mengen \(A={@MusterA@}\), \( B={@MusterB@}\) und \(C={@MusterC@}\), denn:<br></p><ul><li>\((A\cap B)\cup C = {@intersection(MusterA,MusterB)@}\cup {@MusterC@} = {@union( intersection(MusterA, MusterB), MusterC )@}\)</li><li>\((A\cap C)\cup B = \emptyset\cup {@MusterB@} = {@union( intersection(MusterA, MusterC), MusterB )@}\)</li></ul><p>Und diese beiden Mengen sind unterschiedlich.<br></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text>/*Erstellt von Jonas Lache, Ruhr-Universität Bochum*/
MusterA: set(1,2);
MusterB: set(1,3);
MusterC: set(4);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text></text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>MusterA</tans>
      <boxsize>25</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>MusterB</tans>
      <boxsize>25</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>MusterC</tans>
      <boxsize>25</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>LHS: union( intersection(ans1, ans2), ans3 );
RHS: union( intersection(ans1, ans3), ans2 );</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>LHS</sans>
        <tans>RHS</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Für Ihre Eingabe gilt&nbsp;<span style="font-size: 0.9375rem;">\( (A\cap B)\cup C={@LHS@} \) und&nbsp;</span><span style="font-size: 0.9375rem;">\( (A\cap C)\cup B={@RHS@}\)&nbsp;</span><span style="font-size: 0.9375rem;">und somit \((A\cap B)\cup C = (A\cap C)\cup B\), wofür Sie eigentlich ein Gegenbeispiel finden sollten.</span></p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>1.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Für Ihre Eingabe gilt&nbsp;<span style="font-size: 0.9375rem;">\((A\cap B)\cup C={@LHS@}\) und&nbsp;</span><span style="font-size: 0.9375rem;">\((A\cap C)\cup B={@RHS@}\)&nbsp;</span><span style="font-size: 0.9375rem;">und somit \((A\cap B)\cup C \ne (A\cap C)\cup B\), sehr gut!</span></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>Rückmeldebaum</text>
</tag>
      <tag><text>Lösungsidee</text>
</tag>
    </tags>
  </question>

<!-- question: 800687  -->
  <question type="stack">
    <name>
      <text><![CDATA[Mengen: Symmetrische Differenz  [{"DOMAINUID":"266DCB3"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Die symmetrische Differenz zweier Mengen \(A\) und \(B\) ist definiert als \(A\,\triangle\, B=(A\setminus B)\cup(B\setminus A)\)<br></p>
<p>Seien \( A=\{{@a@},{@a*2@},{@a*3@},\ldots\} \) und \( B=\{{@b@},{@b*2@},{@b*3@},\ldots\} \) gegeben.&nbsp;</p><p>Bestimmen Sie eine mindestens \(3\)-elementige Menge \( C\subseteq A\cup B \), so dass&nbsp;</p><p>\( C = \) [[input:ans1]] \( \subseteq A\cap B \) [[validation:ans1]] [[feedback:prt1]]</p><p>Bestimmen Sie eine mindestens \(3\)-elementige Menge \( D\subseteq A\cup B \), so dass&nbsp;</p><p>\( D = \) [[input:ans2]] \( \subseteq A\,\triangle\, B \) [[validation:ans2]] [[feedback:prt2]]&nbsp;</p><p><strong>Hinweis:<br></strong></p><ul><li>Schreiben Sie die Menge mit geschweiften Klammern. Trennen Sie die Lösungen mit Komma, z.B. {1,3}.</li><li>Schreiben Sie die leere Menge als { }.</li></ul>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p><b>Lösungsweg:</b></p><p></p><ul><li>\( C \subseteq A\cap B \) bedeutet, dass die Elemente von \(C\) in den Mengen \(A\) <u>und</u> \(B\) enthalten sein müssen. Da \(A\) offenbar alle Vielfachen von {@a@} und \(B\) alle Vielfachen von {@b@} enthält, gilt: Für alle \(k\in \mathbb{N}\) liegt \(k\cdot {@a@} \cdot {@b@}\) im Schnitt von \(A\) und \(B\). Ein Beispiel dafür ist die Menge \(&nbsp; \{ 1\cdot {@a@} \cdot {@b@},2\cdot {@a@} \cdot {@b@}, 3\cdot {@a@} \cdot {@b@} \} ={@set(a*b,a*b*2,a*b*3)@}\).</li></ul><p></p><p></p><ul><li>Zeichnet man für die Menge \(A\,\triangle\, B =(A\setminus B)\cup(B\setminus A)\) ein Venn-Diagramm, sieht man schnell, dass \(A\,\triangle\, B = (A\cup B)\setminus (A\cap B)\) gilt. Dies bedeutet, dass man hier einfach nur Elemente der Vereinigung \(A\cup B\) angeben muss, die nicht im Durchschnitt \(A\cap B\) liegen. Ein Beispiel dafür ist die Menge \({@set(a,b,13*b)@}\).</li></ul><p></p>]]></text>
    </generalfeedback>
    <defaultgrade>2.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text>liste:[2,2,3,5,7];
a1:rand(liste);liste:delete(a1,liste);
a2:rand(liste);liste:delete(a2,liste);
a3:rand(liste);liste:delete(a3,liste);
a:a1*a2*a3;
b1:a1;
liste:append(liste,[11]);
b2:rand(liste);
b:b1*b2;</text>
    </questionvariables>
    <specificfeedback format="html">
      <text><![CDATA[<br><br>]]></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>{@a1@}</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>{a*b,a*b*2,a*b*3}</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>{a,b,13*b}</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text><![CDATA[liste1:listify(ans1);
rest_a:sum(map(lambda([x],mod(x,a)),liste1)[i],i,1,length(liste1));
falsche_a:setify(sublist(liste1,lambda([x],mod(x,a)>0)));
rest_b:sum(map(lambda([x],mod(x,b)),liste1)[i],i,1,length(liste1));
falsche_b:setify(sublist(liste1,lambda([x],mod(x,b)>0)));]]></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>rest_a</sans>
        <tans>0</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.5000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Die Zahlen aus der Menge \({@falsche_a@}\) sind keine Elemente von \(A\) und daher auch keine Elemente von \(A\cap B\).<br></p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>rest_b</sans>
        <tans>0</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.5000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Die Zahlen aus der Menge \({@falsche_b@}\) sind keine Elemente von \(B\) und daher auch keine Elemente von \(A\cap B\).</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text><![CDATA[liste2:listify(ans2);
nicht_in_A_oder_B:setify(sublist(liste2,lambda([x],mod(x,a)>0 and mod(x,b)>0)));
reste_A_und_B:sum(map(lambda([x],mod(x,a)*mod(x,b)),liste2)[i],i,1,length(liste2));

in_A_und_B:setify(sublist(liste2,lambda([x],mod(x,a)=0 and mod(x,b)=0)));
p_in_A_und_B:emptyp(in_A_und_B);
reste_A_oder_B:sum(map(lambda([x],mod(x,a)+mod(x,b)),liste2)[i],i,1,length(liste2));]]></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>reste_A_und_B</sans>
        <tans>0</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.5000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Die Zahlen aus der Menge \({@nicht_in_A_oder_B@}\) sind weder Elemente von A noch von B und daher auch keine Elemente von \(A\, \triangle\, B\).<br></p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>p_in_A_und_B</sans>
        <tans>false</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-2-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Die Zahlen aus der Menge \({@in_A_und_B@}\) sind Elemente von \( A \cap B \) und daher keine Elemente von \(A\,\triangle\, B\).<br></p>]]></text>
        </truefeedback>
        <falsescoremode>+</falsescoremode>
        <falsescore>0.5000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
      <tag><text>Rückmeldebaum</text>
</tag>
    </tags>
  </question>

<!-- question: 800688  -->
  <question type="stack">
    <name>
      <text><![CDATA[Mengenoperationen durchführen [{"DOMAINUID":"1E7DF00"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben sind die Mengen \(A={@MA@}\), \(B={@MB@}\) und \(C={@MC@}\).<br>Geben Sie die folgenden Mengen an.<br></p><p></p><p><strong>Hinweis:</strong></p><ul><li>Schreiben Sie die Menge mit geschweiften Klammern. Trennen Sie die Lösungen mit Komma, z.B. {1,3}.</li><li>Schreiben Sie die leere Menge als { }.</li></ul><p>a) \( A \setminus (B\cup C) =\) [[input:ans1]] [[validation:ans1]]</p>
<p>b) \( (B\cup C) \setminus A =\) [[input:ans2]] [[validation:ans2]]</p>
<p>c) \( (B\cup C) \cap A =\) [[input:ans3]] [[validation:ans3]]</p>
<p>d) \( (A\cap B) \setminus C =\) [[input:ans4]] [[validation:ans4]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p><b>Die Aufgabe kann wie folgt gelöst werden:</b></p><p>Bei allen Aufgaben ist es sinnvoll, Schritt für Schritt vorzugehen.</p><p>a) Zunächst bestimmen wir \(B\cup C\). Es gilt \(B\cup C={@union(MB, MC)@}\). <br>Jetzt bestimmen wir noch \( A \setminus (B\cup C) = {@MA@} \setminus {@union(MB, MC)@} = {@TA1@}\)</p><p>b) \(B\cup C\) haben wir schon in Aufgabe a) bestimmt. <br>Jetzt bestimmen wir noch \( (B\cup C) \setminus A ={@union(MB, MC)@} \setminus&nbsp;{@MA@}\). <br>Hier kommt die Menge \({@TA2@}\) heraus.</p><p>c) Auch hier können wir wieder \(B\cup C\) aus a) verwenden. <br>Jetzt bestimmen wir noch \( (B\cup C) \cap A = {@union(MB, MC)@} \cap {@MA@}\). <br>Heraus kommt die Menge \({@TA3@}\).</p><p>d) Hier bestimmen wir zunächst \( A\cap B \), das Ergebnis ist {@es(intersection(MA, MB))@}. <br>Vereinigt man diese Menge nun noch mit&nbsp; \(C={@MC@}\), kommt als Ergebnis \( (A\cap B) \setminus C = {@TA4@}\) heraus.<br></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[/*Erstellt von Jonas Lache, Ruhr-Universität Bochum*/

a: rand([3,5,7]);

MA: setify(makelist(a*[1,2,3,4,5][k],k,1,5));
MB: setify(makelist(2*a*[1,2,3,4][k],k,1,4));
MC: setify(makelist(6*a*[1,2,3,4][k],k,1,4));

TA1: setdifference(MA, union(MB, MC) );
TA2: setdifference( union(MB, MC), MA);
TA3: intersection( union(MB, MC), MA);
TA4: setdifference( intersection(MA, MB), MC);

/*Funktion, die wenn eine Menge leer ist, nicht {}, sondern \emptyset zurück gibt*/
es(M):= if M=setify([]) then "\(\emptyset\)" else M;]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(A={@MA@}\), \(B={@MB@}\) und \(C={@MC@}\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>TA1</tans>
      <boxsize>25</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>TA2</tans>
      <boxsize>25</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>TA3</tans>
      <boxsize>25</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>algebraic</type>
      <tans>TA4</tans>
      <boxsize>25</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>TA1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.2500000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>TA2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.2500000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>TA3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.2500000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>3</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>3</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>TA4</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.2500000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-4-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-4-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
    </tags>
  </question>

<!-- question: 800689  -->
  <question type="stack">
    <name>
      <text>Mengenoperationen durchführen_Vorkurs</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben sind die Mengen \(A={@MA@}\), \(B={@MB@}\) und \(C={@MC@}\).<br>Geben Sie die folgenden Mengen an.<br><p>a) \( A \setminus (B\cup C) =\) [[input:ans1]] [[validation:ans1]]</p>
<p>b) \( (B\cup C) \setminus A =\) [[input:ans2]] [[validation:ans2]]</p> </p><p></p><p><strong>Hinweis:</strong></p><ul><li>Schreiben Sie die Menge mit geschweiften Klammern. Trennen Sie die Lösungen mit Komma, z.B. {1,3}.</li><li>Schreiben Sie die leere Menge als { }.</li></ul>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p><b>Die Aufgabe kann wie folgt gelöst werden:</b></p><p>Bei allen Aufgaben ist es sinnvoll, Schritt für Schritt vorzugehen.</p><p>a) Zunächst bestimmen wir \(B\cup C\). Es gilt \(B\cup C={@union(MB, MC)@}\). <br>Jetzt bestimmen wir noch \( A \setminus (B\cup C) = {@MA@} \setminus {@union(MB, MC)@} = {@TA1@}\)</p><p>b) \(B\cup C\) haben wir schon in Aufgabe a) bestimmt. <br>Jetzt bestimmen wir noch \( (B\cup C) \setminus A ={@union(MB, MC)@} \setminus&nbsp;{@MA@}\). <br>Hier kommt die Menge \({@TA2@}\) heraus.</p><p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[/*Erstellt von Jonas Lache, Ruhr-Universität Bochum*/

a: rand([3,5,7]);

MA: setify(makelist(a*[1,2,3,4,5][k],k,1,5));
MB: setify(makelist(2*a*[1,2,3,4][k],k,1,4));
MC: setify(makelist(6*a*[1,2,3,4][k],k,1,4));

TA1: setdifference(MA, union(MB, MC) );
TA2: setdifference( union(MB, MC), MA);
TA3: intersection( union(MB, MC), MA);
TA4: setdifference( intersection(MA, MB), MC);

/*Funktion, die wenn eine Menge leer ist, nicht {}, sondern \emptyset zurück gibt*/
es(M):= if M=setify([]) then "\(\emptyset\)" else M;]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(A={@MA@}\), \(B={@MB@}\) und \(C={@MC@}\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>TA1</tans>
      <boxsize>25</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>TA2</tans>
      <boxsize>25</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>TA1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.25</truescore>
        <truepenalty></truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>TA2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.25</truescore>
        <truepenalty></truepenalty>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>TA3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.25</truescore>
        <truepenalty></truepenalty>
        <truenextnode>3</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>3</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>TA4</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.25</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-4-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-4-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
    </tags>
  </question>

<!-- question: 800690  -->
  <question type="stack">
    <name>
      <text><![CDATA[Teilmengen angeben [{"DOMAINUID":"EE99FC3"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Geben Sie sechs unterschiedliche Teilmengen der Menge \(M={@MA@}\) an.</p>
<p>\(M_1=\) [[input:ans1]] [[validation:ans1]] [[feedback:prt1]]</p>
<p>\(M_2=\) [[input:ans2]] [[validation:ans2]] [[feedback:prt2]]</p>
<p>\(M_3=\) [[input:ans3]] [[validation:ans3]] [[feedback:prt3]]</p>
<p>\(M_4=\) [[input:ans4]] [[validation:ans4]] [[feedback:prt4]]</p>
<p>\(M_5=\) [[input:ans5]] [[validation:ans5]] [[feedback:prt5]]</p>
<p>\(M_6=\) [[input:ans6]] [[validation:ans6]] [[feedback:prt6]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p><b>Lösungsweg:</b></p><p>Für jede endliche Menge \(M\) mit \(| M|=m\) (Anzahl der Elemente der Menge \(M\)) gilt, dass sie genau \(2^m\) Teilmengen hat.<br>Dazu gehört immer die leere Menge \(\emptyset=\{\}\) sowie \(M\) selbst. Dazu kommen dann alle Teilmengen mit \(k\) Elementen \(\left(k\in \{1,\ldots,m-1\}\right)\).</p><p>In diesem Beispiel ist \(M={@MA@}\) gegeben. Da \(|M|=3\) gilt, folgt, dass \(M\) genau \(2^3=8\) unterschiedliche Teilmengen hat, nämlich die Folgenden:</p><ul><li>\(0\)-elementige Teilmengen: \(\emptyset=\{\}\);</li><li>\(1\)-elementige Teilmengen: \( \{ {@a1@} \} \), \( \{ {@a2@} \} \) und \( \{ {@a3@} \} \);</li><li>\(2\)-elementige Teilmengen: \( \{ {@a1@},{@a2@} \} \), \( \{ {@a1@},{@a3@} \} \) und \( \{ {@a2@},{@a3@} \} \);</li><li>\(3\)-elementige Teilmengen: \(M={@MA@}\).</li></ul><p>Die Menge, die alle Teilmengen einer Menge \(M\) enthält, heißt übrigens Potenzmenge von \(M\) und man bezeichnet sie mit \(\mathcal{P}(M)\).<br></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text>/*Erstellt von Jonas Lache, Ruhr-Universität Bochum*/

a1: rand_with_step(11,99,1);
a2: rand_with_prohib(11,99,[a1]);
a3: rand_with_prohib(11,99,[a1,a2]);

MA: set(a1,a2,a3);
leereMenge:setify([]);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(M={@M1@}\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span> Richtige Antwort, gut gemacht!]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-check"></i></span> Deine Antwort ist teilweise korrekt.]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa fa-times"></i></span> Falsche Antwort.]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>leereMenge</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint>{?, ?, ?, ...}</syntaxhint>
      <syntaxattribute>1</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>3</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>set(a1)</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint>{?, ?, ?, ...}</syntaxhint>
      <syntaxattribute>1</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>3</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>set(a2)</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint>{?, ?, ?, ...}</syntaxhint>
      <syntaxattribute>1</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>3</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>algebraic</type>
      <tans>set(a3)</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint>{?, ?, ?, ...}</syntaxhint>
      <syntaxattribute>1</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>3</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans5</name>
      <type>algebraic</type>
      <tans>set(a1,a2)</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint>{?, ?, ?, ...}</syntaxhint>
      <syntaxattribute>1</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>3</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans6</name>
      <type>algebraic</type>
      <tans>set(a1,a3)</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint>{?, ?, ?, ...}</syntaxhint>
      <syntaxattribute>1</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>3</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>subsetp(ans1,MA)</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[Ihre Menge \(M_1={@ans1@}\) ist leider keine Teilmenge von \(M\).<br>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>is(ans1=ans2)</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Diese Menge haben Sie bereits zuvor genannt!<br></p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>subsetp(ans2,MA)</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Ihre Menge \(M_2={@ans2@}\) ist leider keine Teilmenge von \(M\).<br><br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt3</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>bisherige3: set(ans1,ans2);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>member(ans3,bisherige3)</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt3-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Diese Menge haben Sie bereits zuvor genannt!<br></p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt3-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>subsetp(ans3,MA)</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt3-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt3-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Ihre Menge \(M_3={@ans3@}\) ist leider keine Teilmenge von \(M\).<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt4</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>bisherige4: set(ans1,ans2,ans3);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>member(ans4,bisherige4)</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt4-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[Diese Menge haben Sie bereits zuvor genannt!<br>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt4-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>subsetp(ans4,MA)</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt4-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt4-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Ihre Menge \(M_4={@ans4@}\) ist leider keine Teilmenge von \(M\).<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt5</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>bisherige5: set(ans1,ans2,ans3,ans4);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>member(ans5,bisherige5)</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt5-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Diese Menge haben Sie bereits zuvor genannt!<br></p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt5-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>subsetp(ans5,MA)</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt5-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt5-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[Ihre Menge \(M_5={@ans5@}\) ist leider keine Teilmenge von \(M\).<br>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt6</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>bisherige6: set(ans1,ans2,ans3,ans4,ans5);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>member(ans6,bisherige6)</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt6-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p></p><p>Diese Menge haben Sie bereits zuvor genannt!<br></p><br><p></p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt6-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>subsetp(ans6,MA)</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt6-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt6-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Ihre Menge \(M_6={@ans6@}\) ist leider keine Teilmenge von \(M\).<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
      <tag><text>Rückmeldebaum</text>
</tag>
    </tags>
  </question>

<!-- question: 0  -->
  <question type="category">
    <category>
      <text>$course$/top/Abbildung</text>
    </category>
    <info format="html">
      <text></text>
    </info>
    <idnumber></idnumber>
  </question>

<!-- question: 801062  -->
  <question type="multichoice">
    <name>
      <text>Umkehrfunktion</text>
    </name>
    <questiontext format="html">
      <text>Die Gleichung der Umkehrfunktion zu $$f(x)=\dfrac{1}{x}$$ ist:</text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p><strong>Lösungsweg:</strong></p>
<p>Löse die Gleichung \(y=\dfrac{1}{x}\) nach \(x\) auf:</p>
<p>\(y=\dfrac{1}{x} \quad \Longleftrightarrow \quad x=\dfrac{1}{y}\)&nbsp; &nbsp; (für \(y \neq 0\))<br></p>
<p>Daraus folgt \(f^{-1}(x)=\dfrac{1}{x}\).&nbsp;</p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text></text>
    </correctfeedback>
    <partiallycorrectfeedback format="moodle_auto_format">
      <text>1</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text></text>
    </incorrectfeedback>
    <answer fraction="100" format="moodle_auto_format">
      <text>\(f^{-1}(x)=\dfrac{1}{x}\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>\(f^{-1}(x)=x\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>\(f^{-1}(x)=-x\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>\(f^{-1}(x)=x-1\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>praxiserprobt</text>
</tag>
      <tag><text>Musterlösung</text>
</tag>
      <tag><text>TE:1:Elementare Funktionen</text>
</tag>
      <tag><text>TE:2:Umkehrfunktionen</text>
</tag>
      <tag><text>TE:3:Gleichung</text>
</tag>
      <tag><text>src:F07-INT</text>
</tag>
      <tag><text>Bloom:3</text>
</tag>
      <tag><text>Maier:1:2</text>
</tag>
      <tag><text>Maier:2:2</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:TaggingGeprueft</text>
</tag>
      <tag><text>qs:importIliasGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 801061  -->
  <question type="multichoice">
    <name>
      <text>Umkehrfunktion (3)</text>
    </name>
    <questiontext format="html">
      <text>Die Gleichung der Umkehrfunktion zu \(f(x)= \sqrt{3 \cdot x +1}\) lautet:</text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p><strong>Lösungsweg:</strong></p><p>Löse \(y= \sqrt{3 \cdot x +1}\) nach \(x\) auf:<br></p>
<p><span style="font-size: 0.9375rem;">\(y= \sqrt{3\cdot x +1}\)&nbsp; \(| \big(\ldots\big)^2\)</span><br></p>
<p>\(\Rightarrow\)&nbsp; \(y^2=3 \cdot x+1\)&nbsp; \(| -1\)</p>
<p>\(\Leftrightarrow\)&nbsp; \(y^2-1=3 \cdot x\)&nbsp; \(| :3\)<br></p>
<p>\(\Leftrightarrow\)&nbsp; \(\dfrac{y^2-1}{3}=x\)&nbsp; &nbsp; &nbsp;</p>
<p>Das heißt \(f^{-1}(x)=\dfrac{x^2-1}{3}\).</p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text></text>
    </correctfeedback>
    <partiallycorrectfeedback format="moodle_auto_format">
      <text>1</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text></text>
    </incorrectfeedback>
    <answer fraction="100" format="moodle_auto_format">
      <text>\(f^{-1}(x)=\dfrac{1}{3} \cdot (x^2-1)\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>\(f^{-1}(x)=\left(\dfrac{x}{3} +1\right)^2\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>\(f^{-1}(x)=3 \cdot x+1\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>\(f^{-1}(x)=-\sqrt{3 \cdot x +1}\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>praxiserprobt</text>
</tag>
      <tag><text>Musterlösung</text>
</tag>
      <tag><text>TE:1:Elementare Funktionen</text>
</tag>
      <tag><text>TE:2:Umkehrfunktionen</text>
</tag>
      <tag><text>TE:3:Potenzen Wurzeln</text>
</tag>
      <tag><text>src:F07-INT</text>
</tag>
      <tag><text>Bloom:3</text>
</tag>
      <tag><text>Maier:1:2</text>
</tag>
      <tag><text>Maier:2:2</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:TaggingGeprueft</text>
</tag>
      <tag><text>qs:importIliasGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 801060  -->
  <question type="stack">
    <name>
      <text><![CDATA[2.07 Umkehrfunktion einer gebrochenrationalen Funktion [{"DOMAINUID":"FAE87CE"}] [{"DOMAINUID":"FAE87CE"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben sei die Funktion&nbsp;<span style="font-size: 0.9375rem;">\(f(x)=\dfrac{{@z@}}{{@n@}}\) mit dem Parameter \(a \in \mathbb{R}\).</span></p>
<p>Bilden Sie die Umkehrfunktion von \(f\) und bestimmen Sie anschließend \(a\) so, dass beide Funktionen \(f\) und \(f^{-1}\) durch den Koordinatenursprung verlaufen.</p>
<p>\(f^{-1}(x)\,=\,\) [[input:ans1]][[validation:ans1]] [[feedback:prt1]]</p>
<p>\(a\,=\,\) [[input:ans2]][[validation:ans2]] [[feedback:prt2]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;"><strong>Lösungsweg:</strong></p>
<p dir="ltr">Wir setzen \(y=\dfrac{{@z@}}{{@n@}}\) und versuchen diese Gleichung nach \(x\) umzustellen.</p>
<p dir="ltr">\(\quad \Longleftrightarrow \quad {@y*(f*x+c*a*x-a*d+e)=a1*x-a*x+a*b+c@}\)&nbsp;</p>
<p dir="ltr">\(\quad \Longleftrightarrow \quad {@f*x*y+c*a*x*y-a*d*y+e*y=a1*x-a*x+a*b+c@}\)&nbsp;</p>
<p dir="ltr">\(\quad \Longleftrightarrow \quad {@f*x*y+c*a*x*y=a1*x-a*x+a*b+c+a*d*y-e*y@}\)&nbsp;</p>
<p dir="ltr">\(\quad \Longleftrightarrow \quad {@f*x*y+c*a*x*y-a1*x+a*x=a*b+c+a*d*y-e*y@}\)&nbsp;</p>
<p dir="ltr">\(\quad \Longleftrightarrow \quad {@x*(f*y+c*a*y-a1+a)=a*b+c+a*d*y-e*y@}\)&nbsp;</p>
<p dir="ltr">\(\quad \Longleftrightarrow \quad \displaystyle {@x=(a*b+c+a*d*y-e*y)/(f*y+c*a*y-a1+a)@}\)</p>
<p dir="ltr">Somit ist die Umkehrfunktion&nbsp;\(\displaystyle f^{-1}(x) = {@loes1@}\). (Ersetzung von \(y\) durch \(x\) und umgekehrt.)</p>
<p dir="ltr">Ferner&nbsp;verlaufen die beiden Funktionen \(f\) und \(f^{-1}\) durch den Koordinatenursprung, wenn es gilt:&nbsp;<span style="font-size: 0.9375rem;">\(f(0) = f^{-1}(0) = 0\).</span></p>
<p dir="ltr"></p>
<p dir="ltr">\(\displaystyle f(0) = {@(a*b+c)/(-a*d+e)@} = 0\) und&nbsp;\(\displaystyle f^{-1}(0) = {@(a*b+c)/(-a1+a)@} = 0\).</p>
<p dir="ltr">Somit gilt: \(\displaystyle {@a*b+c=0@}\) mit \({@-a*d+e@}\not=0\) und \({@-a1+a@} \not=0\).</p>
<p dir="ltr">Also ist&nbsp;\(\displaystyle a=&nbsp;{@-c/b@}\) mit \(\displaystyle a \not= {@e/d@}\) und \(a \not= {@a1@}\).</p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text>b:rand_with_prohib(-3,3,[0]);
c0:rand_with_prohib(-5,5,[0]);
c:b*c0;
d:rand_with_prohib(-5,5,[0]);
e:rand_with_prohib(-5,5,[0,-c*d/b]);
f:rand_with_prohib(-5,5,[0]);
a1:rand_with_prohib(-5,5,[0,-c/b]);

z:a1*x-a*x+a*b+c;
n:f*x+c*a*x-a*d+e;
 
loes1: (d*a*x+a*b-e*x+c)/(x*f+x*c*a-a1+a);
loes2:-c0;</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text><![CDATA[\(f(x)=\dfrac{{@z@}}{{@n@}}\) -> \(f^{-1}(x)={@loes1@}\), \(a={@loes2@}\)]]></text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtig. Gut gemacht.</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Die Antwort ist teilweise richtig.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Die Antwort ist nicht richtig.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>loes1</tans>
      <boxsize>40</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>2</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>loes2</tans>
      <boxsize>20</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>loes1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>loes2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
    </tags>
  </question>

<!-- question: 801070  -->
  <question type="stack">
    <name>
      <text><![CDATA[Entscheiden, ob Funktionen injektiv/surjektiv (2)  [{"DOMAINUID":"5781F12"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Entscheiden Sie bei folgenden Funktionen, ob sie injektiv oder surjektiv sind, indem Sie den Wahrheitsgehalt folgender Aussagen beurteilen.<br></p>

[[validation:ans1]]

[[validation:ans2]]
<table>
<tbody><tr>
     <td>Die Funktion \(f:\mathbb{R}\to\mathbb{R}\) mit \(f(x)={@f(x)@}\) ist injektiv.</td>
     <td>[[input:ans1]]</td>
</tr><tr>
     <td>Die Funktion \(g:\mathbb{R}\to\mathbb{R}\) mit \(g(x)={@g(x)@}\) ist surjektiv.&nbsp;&nbsp;&nbsp; <br></td>
     <td>[[input:ans2]]</td>
</tr></tbody></table>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p></p><p><b>Hinweis:</b></p><p>Eine Funktion \(f\colon A\to B, \; \; x\mapsto f(x)\) heißt...<br></p><ul><li>&nbsp;...<u>surjektiv</u>, falls es für alle \(b\in B\) ein \(a\in A\) gibt, sodass \(f(a)=b\) gilt.<br></li><li>...<u>injektiv</u>, falls für alle \(a_1,a_2\in A\) mit \(f(a_1)=f(a_2)\) gilt, dass \(a_1=a_2\) ist.<br></li></ul><br><p></p>]]></text>
    </generalfeedback>
    <defaultgrade>2.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[nf:5+rand(4);
ng:5+rand(4);
c:-5+rand(10);
f(x):=x^nf-c;
g(x):=x^ng+x^2;
f_injective:is(mod(nf,2)=1);
f_text:["nicht injektiv","injektiv"][1+mod(nf,2)];
g_surjective:is(mod(ng,2)=1);
g_text:["nicht surjektiv","surjektiv"][1+mod(ng,2)];]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(f(x)={@f(x)@}\)
\(g(x)={@g(x)@}\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span>&nbsp;&nbsp;<strong>Richtige Antwort, gut gemacht!</strong>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-adjust"></i></span>&nbsp;&nbsp;<strong>Ihre Antwort ist teilweise korrekt.</strong>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa fa-times"></i></span>&nbsp;&nbsp;<strong>Falsche Antwort.</strong>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>boolean</type>
      <tans>f_injective</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>boolean</type>
      <tans>g_surjective</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>2.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>f_injective</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.5</truescore>
        <truepenalty></truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Die Funktion \(f(x)={@f(x)@}\) ist {@f_text@}. Das haben Sie richtig gemacht.<br></p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Die Funktion \(f(x)={@f(x)@}\) ist {@f_text@}. Das haben Sie leider falsch gemacht.<br></p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>g_surjective</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.5</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Die Funktion \(g(x)={@g(x)@}\) ist {@g_text@}. Das haben Sie richtig gemacht.<br></p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Die Funktion \(g(x)={@g(x)@}\) ist {@g_text@}. Das haben Sie leider falsch gemacht.<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 801056  -->
  <question type="stack">
    <name>
      <text><![CDATA[Entscheiden, ob Funktionen injektiv/surjektiv (2) [{"DOMAINUID":"D4A8030"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Entscheiden Sie bei folgenden Funktionen, ob sie injektiv oder surjektiv sind, indem Sie den Wahrheitsgehalt folgender Aussagen beurteilen.<br></p>

[[validation:ans1]]

[[validation:ans2]]
<table>
<tbody><tr>
     <td>Die Funktion \(f:\mathbb{R}\to\mathbb{R}\) mit \(f(x)={@f(x)@}\) ist injektiv.</td>
     <td>[[input:ans1]]</td>
</tr><tr>
     <td>Die Funktion \(g:\mathbb{R}\to\mathbb{R}\) mit \(g(x)={@g(x)@}\) ist surjektiv.&nbsp;&nbsp;&nbsp; <br></td>
     <td>[[input:ans2]]</td>
</tr></tbody></table>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>2.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[nf:5+rand(4);
ng:5+rand(4);
c:-5+rand(10);
f(x):=x^nf-c;
g(x):=x^ng+x^2;
f_injective:is(mod(nf,2)=1);
f_text:["nicht injektiv","injektiv"][1+mod(nf,2)];
g_surjective:is(mod(ng,2)=1);
g_text:["nicht surjektiv","surjektiv"][1+mod(ng,2)];]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(f(x)={@f(x)@}\)
\(g(x)={@g(x)@}\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>boolean</type>
      <tans>f_injective</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>boolean</type>
      <tans>g_surjective</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>2.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>f_injective</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.5000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Die Funktion \(f(x)={@f(x)@}\) ist {@f_text@}. Das haben Sie richtig gemacht.<br></p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Die Funktion \(f(x)={@f(x)@}\) ist {@f_text@}. Das haben Sie leider falsch gemacht.<br></p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>g_surjective</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.5000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Die Funktion \(g(x)={@g(x)@}\) ist {@g_text@}. Das haben Sie richtig gemacht.<br></p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Die Funktion \(g(x)={@g(x)@}\) ist {@g_text@}. Das haben Sie leider falsch gemacht.<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 801059  -->
  <question type="stack">
    <name>
      <text><![CDATA[Funktionen: Umkehrfunktionen von y=x^d+a und y=bx+c [{"DOMAINUID":"1758CD0"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Bestimmen Sie die Umkehrfunktion von&nbsp;<span style="font-size: 0.9375rem;">\(f(x)={@f@}\) und \(g(x)={@g@}\).</span></p>
<p>a) \(f^{-1}(x)\,=\,\) [[input:ans1]]&nbsp; [[validation:ans1]] [[feedback:prt1]]</p>
<p>b) \(g^{-1}(x)\,=\,\) [[input:ans2]]&nbsp; [[validation:ans2]] [[feedback:prt2]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p dir="ltr"><strong>Lösungsweg:</strong></p>
<p dir="ltr"></p>
<p dir="ltr">a) Wir setzen \(y={@f@}\) und versuchen diese Gleichung nach \(x\) umzustellen.</p>
<p dir="ltr">\(\quad \Longleftrightarrow \quad {@0=a*x+b-y@}\)&nbsp;</p>
<p dir="ltr">\(\quad \Longleftrightarrow \quad {@-a*x=b-y@}\)&nbsp;</p>
<p dir="ltr">\(\quad \Longleftrightarrow \quad \displaystyle {@x=(y-b)/(a)@}\)</p>
<p dir="ltr"></p>
<p dir="ltr">Somit ist die Umkehrfunktion&nbsp;\(\displaystyle f^{-1}(x) = {@fu@}\). (Ersetzung von \(y\) durch \(x\) und umgekehrt.)</p>
<p dir="ltr">b) Wir setzen \(z={@g@}\) und versuchen diese Gleichung nach \(x\) umzustellen.</p>
<p dir="ltr">\(\quad \Longleftrightarrow \quad {@0=b*x^d+c-z@}\)&nbsp;</p>
<p dir="ltr">\(\quad \Longleftrightarrow \quad {@-b*x^d=c-z@}\)&nbsp;</p>
<p dir="ltr">\(\quad \Longleftrightarrow \quad \displaystyle {@x^d=(z-c)/b@}\)</p>
<p dir="ltr"></p>
<p dir="ltr">\(\quad \Longleftrightarrow \quad \displaystyle {@x=((z-c)/b)^(1/d)@}\)</p>
<p dir="ltr"></p>Somit ist die Umkehrfunktion&nbsp;\(\displaystyle f^{-1}(x) = {@gu@}\). (Ersetzung von \(z\) durch \(x\) und umgekehrt.)]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text>a: rand_with_step(1,10,1);
b: rand_with_step(1,10,1);
c: rand_with_step(1,10,1);
d: rand([3,5,7]);
f: a*x+b;
g: b*x^d+c;
fu: (1/a)*(x-b);
gu: ((x-c)/b)^(1/d);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(f(x)={@f@}\)  und  \(g(x)={@g@}\)
\(f^{-1}\,=\,{@fu@}\) und \(g^{-1}\,=\,{@gu@}\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Die Antwort ist nicht richtig.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>fu</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>gu</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>fu</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>gu</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>1807906738</deployedseed>
    <deployedseed>777131464</deployedseed>
    <deployedseed>1638192468</deployedseed>
    <deployedseed>1086285218</deployedseed>
    <deployedseed>1474267696</deployedseed>
    <deployedseed>1139157673</deployedseed>
    <deployedseed>1406773819</deployedseed>
    <deployedseed>1742500332</deployedseed>
    <deployedseed>1369029722</deployedseed>
    <deployedseed>650228877</deployedseed>
    <deployedseed>228078155</deployedseed>
    <deployedseed>142727748</deployedseed>
    <deployedseed>1111854395</deployedseed>
    <deployedseed>1308823414</deployedseed>
    <deployedseed>818711145</deployedseed>
    <deployedseed>1893992635</deployedseed>
    <deployedseed>1177155220</deployedseed>
    <deployedseed>1243410469</deployedseed>
    <deployedseed>1979696465</deployedseed>
    <deployedseed>459055370</deployedseed>
    <deployedseed>899403087</deployedseed>
    <deployedseed>2015450096</deployedseed>
    <deployedseed>137517235</deployedseed>
    <deployedseed>1399142551</deployedseed>
    <deployedseed>23005391</deployedseed>
    <deployedseed>1466211249</deployedseed>
    <deployedseed>379312837</deployedseed>
    <deployedseed>256947918</deployedseed>
    <deployedseed>1001575059</deployedseed>
    <deployedseed>46973913</deployedseed>
    <deployedseed>1158294441</deployedseed>
    <deployedseed>680061473</deployedseed>
    <deployedseed>626047758</deployedseed>
    <deployedseed>2006068091</deployedseed>
    <deployedseed>656827189</deployedseed>
    <deployedseed>1905730321</deployedseed>
    <deployedseed>2040681907</deployedseed>
    <deployedseed>208513538</deployedseed>
    <deployedseed>1692835783</deployedseed>
    <deployedseed>1013582786</deployedseed>
    <deployedseed>587253199</deployedseed>
    <deployedseed>1551841383</deployedseed>
    <deployedseed>1423276401</deployedseed>
    <deployedseed>956437247</deployedseed>
    <deployedseed>1605050829</deployedseed>
    <deployedseed>892162976</deployedseed>
    <deployedseed>1896497617</deployedseed>
    <deployedseed>992165593</deployedseed>
    <deployedseed>123953995</deployedseed>
    <deployedseed>2007171460</deployedseed>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
    </tags>
  </question>

<!-- question: 801068  -->
  <question type="stack">
    <name>
      <text><![CDATA[Inverse lineare Funktion [{"DOMAINUID":"4BFAC29"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<div><span style="font-size: 0.9375rem;">Bestimmen Sie die Umkehrfunktion&nbsp; </span><span style="font-size: 0.9375rem;">\(f^{-1}\) der Funktion \(\displaystyle f(x) = {@v1@} \cdot x + {@v2@}\).</span><br></div>
<p>\(f^{-1}(x) = \) [[input:ans1]] [[validation:ans1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p><strong>Lösungsweg:</strong></p>
<p>Gesucht wird die Umkehrfunktion der Funktion \(\displaystyle f(x)={@v1@}\cdot x + {@v2@}\).&nbsp;</p><p>Dazu lösen wir die Gleichung&nbsp;<span style="font-size: 0.9375rem;">\(\displaystyle y={@v1@}\cdot x + {@v2@}\)&nbsp;nach \(x\) auf.</span></p>
<p>Wir erhalten&nbsp;<span style="font-size: 0.9375rem;">\(\displaystyle x={@1/v1@}\cdot ( {@y-v2@})\).</span></p>
<p>Jetzt benennen wir die Variablen um und erhalten&nbsp;<span style="font-size: 0.9375rem;">\(\qquad \displaystyle f^{-1}(x) = {@tans1@}\).</span></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text>a:rand([1, 8]);
b: rand([2,12]);
v2: rand ([1,9]);
v1:a/b;
tans1: (x-v2)/v1;</text>
    </questionvariables>
    <specificfeedback format="html">
      <text><![CDATA[<p>[[feedback:prt1]]</p>]]></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\({@v1@} \cdot x + {@v2@}\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span>&nbsp;&nbsp;<strong>Richtige Antwort, gut gemacht!</strong>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-adjust"></i></span>&nbsp;&nbsp;<strong>Ihre Antwort ist teilweise korrekt.</strong>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa fa-times"></i></span>&nbsp;&nbsp;<strong>Falsche Antwort.</strong>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>arccos</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>tans1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>tans1</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-0-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-0-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
    </tags>
  </question>

<!-- question: 801069  -->
  <question type="stack">
    <name>
      <text><![CDATA[Verletzung der Injektivitätsbedingung   [{"DOMAINUID":"B613986"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Betrachten Sie die Funktion \(f:\mathbb{R}\to\mathbb{R}\) mit \(f(x)={@f(x)@}\).<br></p>
<p>Geben Sie zwei Stellen an, an denen die Injektivitätsbedingung für \(f\) verletzt ist.<br></p>
<p>\(x_1 = \) [[input:ans1]] [[validation:ans1]]</p>
<p>\(x_2 = \) [[input:ans2]] [[validation:ans2]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p></p><p><b>Hinweis:</b></p><p>Eine Funktion \(f\colon A\to B, \; \; x\mapsto f(x)\) heißt injektiv, falls für alle \(a_1,a_2\in A\) mit \(f(a_1)=f(a_2)\) gilt, dass \(a_1=a_2\) ist.</p><p>In dieser Aufgabe sollen zwei Stellen angegeben werden, die diese Bedingung verletzen, also zwei Stellen \(a_1,a_2\in A\) mit \(f(a_1)=f(a_2)\), aber \(a_1\ne a_2\).</p><p>Ein Beispiel dafür ist \(a_1={@sol1@}\) und \(a_2={@sol2@}\), denn es gilt \(f(a_1)={@f(sol1)@}=f(a_2)\), aber \({@sol1@}\ne {@sol2@}\).<br></p><br><p></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text>n1:2+rand(3);
n2:rand([-5,-4,-3,-2,-1,1,2,3,4,5]);
f(x):=x^2+n1*x+n2;

sol1:1;
sol2:-sol1-n1;</text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(f(x)={@f(x)@}\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span>&nbsp;&nbsp;<strong>Richtige Antwort, gut gemacht!</strong>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-adjust"></i></span>&nbsp;&nbsp;<strong>Ihre Antwort ist teilweise korrekt.</strong>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa fa-times"></i></span>&nbsp;&nbsp;<strong>Falsche Antwort.</strong>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>sol1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>3</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>sol2</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>3</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>f1:f(ans1);
f2:f(ans2);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>ans2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[Sie haben zweimal die gleiche \(x\)-Stelle angegeben.<br>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>f1</sans>
        <tans>f2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Es gilt nämlich: \(f({@ans1@})={@f1@}=f({@ans2@})\).<br></p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Es gilt nämlich: \(f({@ans1@})={@f1@}\neq{@f2@}=f({@ans2@})\).<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 801054  -->
  <question type="stack">
    <name>
      <text><![CDATA[Verletzung der Injektivitätsbedingung  [{"DOMAINUID":"FA0038E"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Betrachten Sie die Funktion \(f:\mathbb{R}\to\mathbb{R}\) mit \(f(x)={@f(x)@}\).<br></p>
<p>Geben Sie zwei Stellen an, an denen die Injektivitätsbedingung für \(f\) verletzt ist.<br></p>
<p>\(x_1 = \) [[input:ans1]] [[validation:ans1]]</p><p>\(x_2 = \) [[input:ans2]] [[validation:ans2]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text>n1:2+rand(3);
n2:rand([-5,-4,-3,-2,-1,1,2,3,4,5]);
f(x):=x^2+n1*x+n2;

sol1:1;
sol2:-sol1-n1;</text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(f(x)={@f(x)@}\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>sol1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>sol2</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>f1:f(ans1);
f2:f(ans2);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>f1</sans>
        <tans>f2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Es gilt nämlich: \(f({@ans1@})={@f1@}\neq{@f2@}=f({@ans2@})\).<br></p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>ans2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>-</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Es gilt nämlich: \(f({@ans1@})={@f1@}={@f2@}=f({@ans2@})\).<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 801053  -->
  <question type="stack">
    <name>
      <text><![CDATA[Verletzung der Injektivitätsbedingung [{"DOMAINUID":"0B52CC1"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Betrachten Sie die Funktion \(f:\mathbb{R}\to\mathbb{R}\) mit \(f(x)={@f(x)@}\).<br></p>
<p>Geben Sie zwei Stellen an, an denen die Injektivitätsbedingung für \(f\) verletzt ist.<br></p>
<p>\(x_1 = \) [[input:ans1]] [[validation:ans1]]</p><p>\(x_2 = \) [[input:ans2]] [[validation:ans2]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text>n1:2+rand(3);
n2:rand([-5,-4,-3,-2,-1,1,2,3,4,5]);
f(x):=x^2+n1*x+n2;

sol1:1;
sol2:-sol1-n1;</text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(f(x)={@f(x)@}\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>sol1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>sol2</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>f1:f(ans1);
f2:f(ans2);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>f1</sans>
        <tans>f2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Es gilt nämlich: \(f({@ans1@})={@f1@}={@f2@}=f({@ans2@})\).<br></p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Es gilt nämlich: \(f({@ans1@})={@f1@}\neq{@f2@}=f({@ans2@})\).<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 0  -->
  <question type="category">
    <category>
      <text>$course$/top/Relationen</text>
    </category>
    <info format="html">
      <text></text>
    </info>
    <idnumber></idnumber>
  </question>

<!-- question: 802297  -->
  <question type="stack">
    <name>
      <text><![CDATA[Anzahl der Äquivalenzrelationen auf Menge angeben [{"DOMAINUID":"452670D"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Wie viel Äquivalenzrelationen gibt es auf der Menge \(Y={@setify(Y)@}\)?&nbsp;</p><p>[[input:ans1]]&nbsp;<span style="font-size: 0.9375rem;">[[validation:ans1]]</span></p><p><span style="font-size: 0.9375rem;"><br></span></p><p><span><em><strong>Hinweis:</strong></em>&nbsp;Jede Äquivalenzrelation unterteilt die Menge in Äquivalenzklassen. &nbsp;Wie viele Äquivalenzklassen welcher Größe kann es geben?</span></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;"><strong>Hinweis zur Lösung:</strong></p><p dir="ltr" style="text-align: left;">Es gibt insgesamt 15 verschiedene Äquivalenzrelationen auf der Menge \(Y={@setify(Y)@}\). Eine Äquivalenzrelation ist eine Teilmenge des kartesischen Produkts der Menge mit sich selbst, die bestimmten Eigenschaften erfüllt. In diesem Fall gibt es 15 verschiedene Möglichkeiten, diese Eigenschaften zu erfüllen. Die sind:<br></p><p dir="ltr" style="text-align: left;"></p><ul><li>1 triviale Äquivalenzrelation, bei der jedes Element mit sich selbst äquivalent ist.</li><li>1 Äquivalenzrelation, bei der alle Elemente in einer einzigen Äquivalenzklasse sind.</li><li><span style="font-size: 0.9375rem;">3 Äquivalenzrelation, bei der zwei Elemente in einer Äquivalenzklasse sind, und die anderen zwei in einer anderen.</span><br></li><li><span style="font-size: 0.9375rem;">6 Äquivalenzrelation, bei der zwei Elemente in einer Äquivalenzklasse sind, und weitere zwei Elementen einzelne in separaten Äquivalenzklassen.</span><br></li><li><span style="font-size: 0.9375rem;">4 Äquivalenzrelation, bei der ein Element in einer Äquivalenzklasse ist, und weitere drei Elementen in einer gemeinsamen Äquivalenzklasse.</span></li></ul><br><p></p>]]></text>
    </generalfeedback>
    <defaultgrade>2.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text>range9:makelist(i,i,1,9);
liste2:random_permutation(range9);
Y:rest(liste2,-length(liste2)+4);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>{@Y@}</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>15</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>2</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>2.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>15</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 802299  -->
  <question type="stack">
    <name>
      <text>Aufgabe3</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Auf&nbsp; die Menge \( M= \{a,b,c\} \) ist die Relation \( R= \{&nbsp; (a,b), (a,c), (a,a), (b,b), (c,c) \} \) gegeben. Fügen Sie möglichst wenige weitere Paare hinzu, sodass eine totale Ordnung entsteht.</p><p><span style="font-size: 0.9375rem;">&nbsp;Gesuchte Element: [[input:ans1]][[validation:ans1]]</span></p><p><span style="font-size: 0.9375rem;"><br></span></p><p><span style="font-size: 0.9375rem;"><em><strong>Hinweis zur Eingabe:</strong>&nbsp; Z.B.&nbsp; [1,2]&nbsp; wird als <code>cc(1,2)</code>&nbsp;eingegeben.</em><br></span></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;">Antwortmöglichkeiten sind:&nbsp;</p><p dir="ltr" style="text-align: left;">Der gesuchte Element ist: \( [b,c]\) oder eben &nbsp;\(&nbsp;[c,b]\). &nbsp;Man kann sich oben noch aussuchen, wie \(b\) und \(c\) in Relation stehen.<br></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text>range9:makelist(i,i,1,9);
liste:random_permutation(range9);
n1:3+rand(3);
X:rest(liste,-length(liste)+n1);
R:cc(b,c);
R1:cc(c,b);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>{@X@}</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>R</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>R</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>R1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 802300  -->
  <question type="stack">
    <name>
      <text><![CDATA[Symmetrische Relation auf Menge X angeben [{"DOMAINUID":"BE87316"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Geben Sie eine symmetrische Relation \(R\) auf \(X={@setify(X)@}\) mit \(|R|\ge 2\) an.<br></p><p>\(R = \) [[input:ans1]][[validation:ans1]]<br></p><div><em><strong>Hinweis zur Eingabe:</strong>&nbsp; Z.B. \(R=\{(1,1),(1,2)\}\) wird als <code>{[1,1],[1,2]}</code> eingegeben.</em></div>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text>range9:makelist(i,i,1,9);
liste:random_permutation(range9);
n1:3+rand(3);
X:rest(liste,-length(liste)+n1);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>{@X@}</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>{[X[1],X[1]],[X[2],X[2]]}</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>lans1:listify(ans1);
nums_ans1:setify(flatten(lans1));
p:makelist(member(reverse(lans1[i]),lans1),i,1,length(lans1));
false_i:sublist_indices(p,lambda([x],x=false));
len_i:length(false_i);
nicht_in_X:setdifference(nums_ans1,setify(X));</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>len_i</sans>
        <tans>0</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[Ihre Relation ist symmetrisch.<br>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Ihre Relation ist nicht symmetrisch. So ist zwar \({@lans1[false_i[1]]@}\in R\), aber \({@reverse(lans1[false_i[1]])@}\not\in R\)<br></p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>GTE</answertest>
        <sans>length(lans1)</sans>
        <tans>2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0</truescore>
        <truepenalty></truepenalty>
        <truenextnode>3</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>1</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>3</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Ihre Relation enthält nur ein Paar! Es soll aber \(|R|\ge 2\) sein.<br></p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>length(nicht_in_X)</sans>
        <tans>0</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-4-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.25</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-4-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Sie haben Zahlen in Ihre Relation aufgenommen, die keine Elemente von \(X\) sind: \( {@nicht_in_X@} \).<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 0  -->
  <question type="category">
    <category>
      <text>$course$/top/Votierungen</text>
    </category>
    <info format="html">
      <text></text>
    </info>
    <idnumber></idnumber>
  </question>

<!-- question: 802304  -->
  <question type="truefalse">
    <name>
      <text>Aufgabe_1</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;">Ich habe die erste Aufgabe gelöst und kann auch die Aufgabe vorstellen.&nbsp;</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="100" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text><![CDATA[<p dir="ltr" style="text-align: left;">Du bekommst 1 Punkt</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text><![CDATA[<p dir="ltr" style="text-align: left;">Leider bekommst du keine Punkte</p>]]></text>
      </feedback>
    </answer>
  </question>

<!-- question: 802305  -->
  <question type="truefalse">
    <name>
      <text>Aufgabe_2</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;">Ich habe die zweite Aufgabe gelöst und kann auch die Aufgabe vorstellen.&nbsp;</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="100" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text><![CDATA[<p dir="ltr" style="text-align: left;">Du bekommst 1 Punkt</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text><![CDATA[<p dir="ltr" style="text-align: left;">Leider bekommst du keine Punkte</p>]]></text>
      </feedback>
    </answer>
  </question>

<!-- question: 802306  -->
  <question type="truefalse">
    <name>
      <text>Aufgabe_3</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;">Ich habe die dritte Aufgabe gelöst und kann auch die Aufgabe vorstellen.&nbsp;</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="100" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text><![CDATA[<p dir="ltr" style="text-align: left;">Du bekommst 1 Punkt</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text><![CDATA[<p dir="ltr" style="text-align: left;">Leider bekommst du keine Punkte</p>]]></text>
      </feedback>
    </answer>
  </question>

<!-- question: 802307  -->
  <question type="truefalse">
    <name>
      <text>Aufgabe_4</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;">Ich habe die vierte Aufgabe gelöst und kann auch die Aufgabe vorstellen.&nbsp;</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="100" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text><![CDATA[<p dir="ltr" style="text-align: left;">Du bekommst 1 Punkt</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text><![CDATA[<p dir="ltr" style="text-align: left;">Leider bekommst du keine Punkte</p>]]></text>
      </feedback>
    </answer>
  </question>

<!-- question: 802308  -->
  <question type="truefalse">
    <name>
      <text>Aufgabe_5</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;">Ich habe die fünfte Aufgabe gelöst und kann auch die Aufgabe vorstellen.&nbsp;</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="100" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text><![CDATA[<p dir="ltr" style="text-align: left;">Du bekommst 1 Punkt</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text><![CDATA[<p dir="ltr" style="text-align: left;">Leider bekommst du keine Punkte</p>]]></text>
      </feedback>
    </answer>
  </question>

<!-- question: 0  -->
  <question type="category">
    <category>
      <text>$course$/top/Gruppen</text>
    </category>
    <info format="html">
      <text></text>
    </info>
    <idnumber></idnumber>
  </question>

<!-- question: 802364  -->
  <question type="stack">
    <name>
      <text><![CDATA[Entscheiden ob \phi Gruppenhomomorphismus ist [{"DOMAINUID":"871B2B9"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Untersuchen Sie, welche der folgenden Abbildungen Gruppenhomomorphismen sind.<br>(Hinweis: \( + \) und \( * \) meint die komponentenweise Addition und Multiplikation.)</p>
<table>
    <tbody>
    <tr>
        <td> a)  </td>
        <td>\(\varphi_1: (\mathbb{R}^2,+)\to(\mathbb{R}^2,+) \)</td>
    </tr>
    <tr>
        <td></td>    
        <td>\(\varphi_1(x,y)=({@p11@},{@p12@}) \)</td>
    </tr>
    <tr>
        <td></td>
        <td style="text-align: right;">\( \varphi_1 \) ist Gruppenhomomorphismus:</td>
        <td> [[input:ans1]]</td>
        <td>[[validation:ans1]]</td>
    </tr>
<tr></tr>
    <tr>
        <td> b)  </td>
        <td>\(\varphi_2: (\mathbb{Q}^2,+)\to(\mathbb{Q}^2,+) \)</td>
    </tr>
    <tr>
        <td></td>    
        <td>\(\varphi_2(x,y)=({@p21@},{@p22@}) \)</td>
    </tr>
    <tr>
        <td></td>
        <td style="text-align: right;">\( \varphi_2 \) ist Gruppenhomomorphismus:</td>
        <td> [[input:ans2]]</td>
        <td>[[validation:ans2]]</td>
    </tr>
<tr></tr>
    <tr>
        <td> c)  </td>
        <td>\(\varphi_3: (\mathbb{Z}^2,+)\to(\mathbb{Z}^2,+) \)</td>
    </tr>
    <tr>
        <td></td>    
        <td>\(\varphi_3(x,y)=({@p31@},{@p32@}) \)</td>
    </tr>
    <tr>
        <td></td>
        <td style="text-align: right;">\( \varphi_3 \) ist Gruppenhomomorphismus:</td>
        <td> [[input:ans3]]</td>
        <td>[[validation:ans3]]</td>
    </tr>
<tr></tr>
    <tr>
        <td> d)  </td>
        <td>\(\varphi_4: ((\mathbb{Q}\setminus\{0\})^2,*)\to((\mathbb{R}\setminus\{0\})^2,*) \)</td>
    </tr>
    <tr>
        <td></td>    
        <td>\(\varphi_4(x,y)=({@p41@},{@p42@}) \)</td>
    </tr>
    <tr>
        <td></td>
        <td style="text-align: right;">\( \varphi_4 \) ist Gruppenhomomorphismus:</td>
        <td> [[input:ans4]]</td>
        <td>[[validation:ans4]]</td>
    </tr>
</tbody></table>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>2.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[p11:apply("+",makelist(rand_with_prohib(-5,5,[0])*x^(k-1),k,2))+apply("+",makelist(rand_with_prohib(-5,5,[0])*y^(k-1),k,3));
p12:apply("+",makelist(rand_with_prohib(-5,5,[0])*x^(k-1),k,2))+apply("+",makelist(rand(6)*y^(k-1),k,3));
psol1:false;

p21:rand_with_prohib(-5,5,[0])*x;
p22:rand_with_prohib(-5,5,[0])*y;
psol2:true;

t1:rand_with_prohib(-5,5,[0])*x+rand_with_prohib(-5,5,[0])*y;
t2:rand_with_prohib(-5,5,[0])*x+rand_with_prohib(-5,5,[0])*y;
p31:rand([t1,t2]);
p32:delete(p31,[t1,t2])[1]+rand_with_prohib(-5,5,[0]);
psol3:false;

e1:1+rand(4);
e2:1+rand(4);
s:rand(2);
sc:rand_with_prohib(-5,5,[0]);
i1:rand([1,2]);
i2:delete(i1,[1,2])[1];
sx:[s*sc,0][i1];
sy:[s*sc,0][i2];
p41:(x+sx)^e1*(y+sy)^e2;
p42:rand([x,y]);
psol4:is(s=0);]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>{@p11@},{@p12@}
{@p21@},{@p22@}
{@p31@},{@p32@}
{@p41@},{@p42@}</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>boolean</type>
      <tans>psol1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>boolean</type>
      <tans>psol2</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>boolean</type>
      <tans>psol3</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>boolean</type>
      <tans>psol4</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>2.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>psol1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.2500000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p></p><p>\( \varphi_1\) ist kein Gruppenhomomorphismus, denn es existieren \( v=(v_1,v_2)^T,\ w=(w_1,\ w_2)^T&nbsp; \in \mathbb{R}^2\) mit</p><p>\(\begin{align}\varphi_1(v+w) &amp;= ({@subst((v1+w1),x,subst((v2+w2),y,p11))@},\;\ {@subst((v1+w1),x,subst((v2+w2),y,p12))@}) \\ &amp;\neq({@subst(v1,x,subst(v2,y,p11))@},\;\ {@subst(v1,x,subst(v2,y,p12))@})+({@subst(w1,x,subst(w2,y,p11))@},\;\ {@subst(w1,x,subst(w2,y,p12))@}) \\ &amp;= \varphi_1(v)+\varphi_1(w) \end{align} \)</p><br><p></p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>psol2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.2500000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p></p><p><br></p><p></p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p></p><p></p><p>\( \varphi_2\) ist ein Gruppenhomomorphismus, denn es gilt</p><p>\(\begin{align}\varphi_2(v+w) &amp;= ({@subst((v1+w1),x,subst((v2+w2),y,p21))@},\;\ {@subst((v1+w1),x,subst((v2+w2),y,p22))@}) \\ &amp;=({@subst(v1,x,subst(v2,y,p21))@},\;\ {@subst(v1,x,subst(v2,y,p22))@})+({@subst(w1,x,subst(w2,y,p21))@},\;\ {@subst(w1,x,subst(w2,y,p22))@}) \\ &amp;= \varphi_2(v)+\varphi_2(w) \end{align}&nbsp;\\ \forall\ v=(v_1,v_2)^T,\ w=(w_1,\ w_2)^T&nbsp; \in \mathbb{Q}^2&nbsp; \)</p><br><p></p><p></p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>psol3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.2500000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>3</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>3</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p></p><p>\( \varphi_3\) ist kein Gruppenhomomorphismus, denn es existieren \( v=(v_1,v_2)^T,\ w=(w_1,\ w_2)^T&nbsp; \in \mathbb{Z}^2\) mit</p><p>\(\begin{align}\varphi_3(v+w) &amp;= ({@subst((v1+w1),x,subst((v2+w2),y,p31))@},\;\ {@subst((v1+w1),x,subst((v2+w2),y,p32))@}) \\ &amp;\neq({@subst(v1,x,subst(v2,y,p31))@},\;\ {@subst(v1,x,subst(v2,y,p32))@})+({@subst(w1,x,subst(w2,y,p31))@},\;\ {@subst(w1,x,subst(w2,y,p32))@}) \\ &amp;= \varphi_3(v)+\varphi_3(w) \end{align} \)</p><br><p></p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>psol4</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.2500000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-4-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>4</falsenextnode>
        <falseanswernote>prt1-4-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>4</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>psol4</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-5-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p></p><p>\( \varphi_4\) ist ein Gruppenhomomorphismus, denn es gilt</p><p>\(\begin{align}\varphi_4(v*w) &amp;= ({@subst((v1*w1),x,subst((v2*w2),y,p41))@},\;\ {@subst((v1*w1),x,subst((v2*w2),y,p42))@}) \\ &amp;=({@subst(v1,x,subst(v2,y,p41))@},\;\ {@subst(v1,x,subst(v2,y,p42))@})*({@subst(w1,x,subst(w2,y,p41))@},\;\ {@subst(w1,x,subst(w2,y,p42))@}) \\ &amp;= \varphi_4(v)*\varphi_4(w) \end{align}&nbsp;\\ \forall\ v=(v_1,v_2)^T,\ w=(w_1,\ w_2)^T&nbsp; \in (\mathbb{Q}\setminus\{0\})^2&nbsp; \)</p><br><br><p></p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-5-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p></p><p>\( \varphi_4\) ist kein Gruppenhomomorphismus, denn es existieren \( v=(v_1,v_2)^T,\ w=(w_1,\ w_2)^T&nbsp; \in (\mathbb{Q}\setminus\{0\})^2\) mit</p><p>\(\begin{align}\varphi_4(v*w) &amp;= ({@subst((v1*w1),x,subst((v2*w2),y,p41))@},\;\ {@subst((v1*w1),x,subst((v2*w2),y,p42))@}) \\ &amp;\neq({@subst(v1,x,subst(v2,y,p41))@},\;\ {@subst(v1,x,subst(v2,y,p42))@})*({@subst(w1,x,subst(w2,y,p41))@},\;\ {@subst(w1,x,subst(w2,y,p42))@}) \\ &amp;= \varphi_4(v)*\varphi_4(w) \end{align} \)</p><br><br><p></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 802365  -->
  <question type="stack">
    <name>
      <text><![CDATA[Gruppenhomomorphismus (R^2,+)->(R,+) angeben [{"DOMAINUID":"FE22FF2"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Geben Sie einen Gruppenhomomorphismus \(\varphi: (\mathbb{R}^2,+)\to(\mathbb{R},+)\) an.<br></p><p>\(\varphi(x; y) = \) [[input:ans1]]&nbsp;<span style="font-size: 0.9375rem;">[[validation:ans1]]</span></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text></text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text></text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>x*y</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>f1:subst([x=x1,y=y1],ans1);
f2:subst([x=x2,y=y2],ans1);
f12:subst([x=x1+x2,y=y1+y2],ans1);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>f1*f2</sans>
        <tans>f12</tans>
        <testoptions>0</testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[Es gilt: \( f(x_1+x_2,y_1+y_2) = {@f12@} = {@f1@}+{@f2@} = f(x_1,y_1)+f(x_2,y_2) \)<br>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Es gilt: \( f(x_1+x_2,y_1+y_2) = {@f12@} \neq {@f1+f2@} = f(x_1,y_1)+f(x_2,y_2) \)<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 802366  -->
  <question type="stack">
    <name>
      <text><![CDATA[Gruppenhomomorphismus (R,+)->(R,+) angeben [{"DOMAINUID":"45FE6B9"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Geben Sie einen Gruppenhomomorphismus \(\varphi: (\mathbb{R},+)\to(\mathbb{R},+)\) an.<br></p><p>\(\varphi(x) = \) [[input:ans1]]&nbsp;<span style="font-size: 0.9375rem;">[[validation:ans1]]</span></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text></text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text></text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>x</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>fx:ans1;
fy:subst(x=y,ans1);
fxy:subst(x=x+y,ans1);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>fx+fy</sans>
        <tans>fxy</tans>
        <testoptions>0</testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[Es gilt: \( f(x+y) = {@fxy@} = {@fx@}+{@fy@} = f(x)+f(y) \)<br>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Es gilt: \( f(x+y) = {@fxy@} \neq {@fx+fy@} = f(x)+f(y) \)<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 802367  -->
  <question type="stack">
    <name>
      <text><![CDATA[Gruppenhomomorphismus (R,+)->(R*,*) angeben [{"DOMAINUID":"A9D7393"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Geben Sie einen Gruppenhomomorphismus \(\varphi: (\mathbb{R},+)\to(\mathbb{R}\setminus\{0\},*)\) an.<br></p><p>\(\varphi(x) = \) [[input:ans1]]&nbsp;<span style="font-size: 0.9375rem;">[[validation:ans1]]</span></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>2.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text></text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text></text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>2^x</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>2</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>2.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>fx:ans1;
fy:subst(x=y,ans1);
fxy:subst(x=x+y,ans1);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>fx*fy</sans>
        <tans>fxy</tans>
        <testoptions>0</testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[Es gilt: \( f(x+y) = {@fxy@} = {@fx@} \cdot {@fy@} = f(x)\cdot f(y) \)<br>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Es gilt: \( f(x+y) = {@fxy@} \neq {@fx*fy@} = f(x)\cdot f(y) \)<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 0  -->
  <question type="category">
    <category>
      <text>$course$/top/Koerper</text>
    </category>
    <info format="html">
      <text></text>
    </info>
    <idnumber></idnumber>
  </question>

<!-- question: 802368  -->
  <question type="stack">
    <name>
      <text><![CDATA[Linearisierten Fehler [{"DOMAINUID":"265F185"}] [{"DOMAINUID":"265F185"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben sind die Volumen \(V\) und die Oberfläche \(O\) eines Körpers:<br><span style="font-size: 0.9375rem;">\( V = \displaystyle\frac{1}{3} \cdot \pi \cdot r^2 \cdot&nbsp;h\)</span><br></p>
<p>\(O = \pi \cdot&nbsp;r \cdot&nbsp;\sqrt{r^2+h^2} + \pi \cdot&nbsp;r^2 \)</p>
<p>Mit welchen absoluten linearisierten Fehlern muss man bei der Ermittlung des Volumens und der Oberfläche rechnen, wenn der Radius \( r = {@radius@}\,cm\) und die Höhe \(h = {@hoehe@}\,cm\) mit einer Genauigkeit von \( \pm{@fehler@}\,cm \) gemessen wurden?</p>
<p><strong>Hinweise:</strong> Benutzen Sie keine Dezimahlzahlen. Schreiben Sie pi für \(\pi\).</p>
<p>\( \Delta V = \) [[input:ans1]] [[validation:ans1]] [[feedback:prt1]]</p>
<p>\( \Delta O = \) [[input:ans2]] [[validation:ans2]] [[feedback:prt2]]</p>
<p>Relative Fehler von \(V =\) [[input:ans3]] [[validation:ans3]] [[feedback:prt3]]</p>
<p>Relative Fehler von \(O =\) [[input:ans4]] [[validation:ans4]] [[feedback:prt4]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text>radius : rand_with_step(90, 270, 30);
fehler : rand_with_step(1, 3, 1);
hoehe : radius/3*4;


V : 1/3 * %pi * radius^2 * hoehe;

O: %pi*radius*sqrt(radius^2+hoehe^2)+%pi*radius^2;

deltav : (2/3*radius*hoehe*fehler + 1/3*radius^2*fehler)*%pi;

deltao : ((sqrt(radius^2+hoehe^2) + radius^2/sqrt(radius^2+hoehe^2) + 2*radius)*fehler + radius*hoehe/sqrt(radius^2+hoehe^2)*fehler)*%pi;

relv : deltav / V;

relo : deltao / O;</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\[ V = \displaystyle\frac{1}{3} \pi r^2 h \quad,\quad  O = \pi r \sqrt{r^2+h^2} + \pi r^2 \]
\[{@deltav@}, {@deltao@}, {@relv@}, {@relo@} \]</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtig</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Teilweise richtig</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Die Antwort ist nicht richtig</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>deltav</tans>
      <boxsize>40</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>deltao</tans>
      <boxsize>40</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>relv</tans>
      <boxsize>40</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>algebraic</type>
      <tans>relo</tans>
      <boxsize>40</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>0</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>deltav</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>deltao</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-0-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-0-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt3</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>relv</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt3-0-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt3-0-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt4</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>relo</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt4-0-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt4-0-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 802369  -->
  <question type="stack">
    <name>
      <text><![CDATA[Verhältnis von Kreissektoren [{"DOMAINUID":"8D08A45"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><img height="249" src="@@PLUGINFILE@@/geo_kre_gen_5003.png?il_wac_token=57fd9b95df0968e512daa264ec36f8aab04be98b&amp;il_wac_ttl=3&amp;il_wac_ts=1614680532" width="775"></p>
<p><span style="font-size: 0.9375rem;"></span></p><p>Wir betrachten einen Kreissektor mit Radius \(r={@rad@}\, \operatorname{cm}\) und Winkel \(\alpha=\dfrac{\pi}{{@nen1@}}\).&nbsp;</p><p>Die Kreissehne zerlegt den Kreissektor in ein Dreieck und ein Kreissegment mit Flächeninhalt \(A_{1}\).</p>
<p>Zeichnen wir in diesen Kreissektor die Winkelhalbierende von \(\alpha\) ein, so erhalten wir zwei Kreissektoren zum Winkel \(\beta=\dfrac{\alpha}{2}=\dfrac{\pi}{{@nen2@}}\).&nbsp;</p><p>Durch das Einzeichnen der Kreissehnen bekommen wir nun zwei Kreissegmente, die gemeinsam den Flächeninhalt \(A_{2}\) haben.</p>
<p><strong>Berechnen Sie die Differenz der Flächeninhalte \(A_{1}\) und \(A_{2}\).</strong></p>
<p>Geben Sie die Antwort als Dezimalzahl an und runden Sie, falls nötig, auf zwei Dezimalstellen.</p>
<p>\(A_{1}-A_{2}\approx \)&nbsp;<span style="font-size: 0.9375rem;">[[input:ans1]] \(\operatorname{cm}^2\)&nbsp;</span><span style="font-size: 0.9375rem;">[[validation:ans1]]</span></p>]]></text>
<file name="geo_kre_gen_5003.png" path="/" encoding="base64"></file>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p><strong>Lösungsweg:&nbsp;<br></strong></p>
<p>Den Flächeninhalt eines Kreissegments mit Radius \(r\) und Winkel \(b\) (im Bogenmaß) können wir mit der Formel \(A=\dfrac{r^{2}}{2}\left(b-\sin(b)\right)\) berechnen.</p>
<p>Wegen \(r={@rad@}\, \operatorname{cm}\) und \(\alpha=\dfrac{\pi}{{@nen1@}}\) erhalten wir so für die Fläche \(A_{1}\):</p>
<p>\(\qquad A_{1}= \dfrac{{@rad@}^{2}}{2} \cdot \left(\dfrac{\pi}{{@nen1@}} - \sin\left(\dfrac{\pi}{{@nen1@}}\right)\right)\) \(={@radsquare@} \cdot \left(\dfrac{\pi}{{@nen2@}} - \dfrac{1}{2} \cdot \sin\left(\dfrac{\pi}{{@nen1@}}\right)\right)\)</p>
<p>\(A_{2}\) setzt sich aus zwei gleich großen Kreissegmenten zum Winkel \(\beta=\dfrac{\pi}{{@nen2@}}\)&nbsp;zusammen. Wir erhalten also für die Fläche \(A_{2}\):</p>
<p>\(\qquad A_{2} = 2 \cdot\dfrac{{@rad@}^{2}}{2} \cdot \left(\dfrac{\pi}{{@nen2@}} - \sin\left(\dfrac{\pi}{{@nen2@}}\right)\right)\) \(= {@radsquare@} \cdot \left(\dfrac{\pi}{{@nen2@}} - \sin\left(\dfrac{\pi}{{@nen2@}}\right)\right)\)</p>
<p>Insgesamt ergibt sich damit für die Differenz der beiden Flächeninhalte:</p>
<p>\(\qquad A_{1}-A_{2}={@radsquare@} \cdot \left(\dfrac{\pi}{{@nen2@}} - \dfrac{1}{2} \cdot \sin\left(\dfrac{\pi}{{@nen1@}}\right)\right) - {@radsquare@} \cdot \left(\dfrac{\pi}{{@nen2@}} - \sin\left(\dfrac{\pi}{{@nen2@}}\right)\right)\) \(= {@radsquare@} \cdot \left(\sin\left(\dfrac{\pi}{{@nen2@}}\right) - \dfrac{1}{2} \cdot \sin\left(\dfrac{\pi}{{@nen1@}}\right)\right)\approx {@tans1@}\)</p>
<p>Die Differenz der beiden Flächeninhalte beträgt also rund \({@tans1@}\operatorname{cm}^{2}\).</p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text>rad:rand_with_step(1,11,1);radsquare:rad^2;nen1:rand([2,3,4,5]);nen2:2*nen1;A1: rad^2/2*(%pi / nen1 - sin(%pi/nen1));A2: 2*rad^2/2*(%pi / nen2 - sin(%pi/nen2));tans1:float(round(ev (A1-A2, numer)*100)/100);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text><![CDATA[<p>[[feedback:prt1]]</p>]]></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>Radius: {@rad@}Nenner1: {@nen1@}A1: {@A1@}A2: {@A2@}Lsg: {@tans1@}</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p><em><strong>Ihre Antwort ist korrekt.</strong></em></p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p><em><strong>Ihre Antwort ist teilweise korrekt.</strong></em></p>
<p><strong>Lösung:</strong></p>
<p>Die Differenz der Flächeninhalte beträgt rund \({@tans1@}\,\operatorname{cm}^2\).</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p><strong><em>Ihre Antwort ist nicht korrekt.</em></strong></p>
<p><strong>Lösung:</strong></p>
<p>Die Differenz der Flächeninhalte beträgt rund \({@tans1@}\,\operatorname{cm}^2\).</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>arccos</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>tans1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>NumAbsolute</answertest>
        <sans>ans1</sans>
        <tans>tans1</tans>
        <testoptions>0.01</testoptions>
        <quiet>1</quiet>
        <truescoremode>+</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-0-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>+</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-0-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>4766014129</deployedseed>
    <deployedseed>5049583808</deployedseed>
    <deployedseed>6204576180</deployedseed>
    <deployedseed>8088130236</deployedseed>
    <qtest>
      <testcase>1</testcase>
      <description></description>
      <testinput>
        <name>ans1</name>
        <value>%pi/nen1</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>0.5000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt1-1-T</expectedanswernote>
      </expected>
    </qtest>
    <qtest>
      <testcase>2</testcase>
      <description></description>
      <testinput>
        <name>ans1</name>
        <value>tans1</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt1-0-T</expectedanswernote>
      </expected>
    </qtest>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
    </tags>
  </question>

<!-- question: 0  -->
  <question type="category">
    <category>
      <text>$course$/top/Kombinatorik</text>
    </category>
    <info format="html">
      <text></text>
    </info>
    <idnumber></idnumber>
  </question>

<!-- question: 802371  -->
  <question type="stack">
    <name>
      <text>Pincode</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<style>
    .buttonweiter {
        border: 1px solid black;
        background-color: #a9f5bc;
    }

    .buttonweiter:hover {
        background-color: #e0f8e6;
    }

    .buttonzurueck {
        border: 1px solid black;
        background-color: #dcb25e;
    }

    .buttonzurueck:hover {
        background-color: #e7d2a7;
    }

    .buttontipp {
        border: 1px solid black;
        background-color: #c9d3f6;
    }

    .buttontipp:hover {
        background-color: #dbe1f9;
    }

    .erinnerungsbox {
        border: 2px rgb(152, 202, 62) solid;
        padding: 5px;
        margin: 5px;
    }

    .que.stack .formulation details {
        border: 1px solid #aaa;
        border-radius: 4px;
        padding: .5em .5em 0;
    }

    .que.stack .formulation summary {
        font-weight: bold;
        margin: -.5em -.5em 0;
        padding: .5em;
    }

    .que.stack .formulation details[open] {
        padding: .5em;
    }
</style>

<div id="summarybox">
    <details>
        <summary>Inhalt und Umfang dieser Aufgabe</summary>
        <p>
            In dieser Aufgabe lernen Sie anhand zweier kurzer Beispiele, wie Sie einfache kombinatorische Formeln verwenden.
        </p>
    </details>
    <hr>
</div>

<p></p>
<p></p>
<div id="aufgabe" style="display:box;">
    <div title="Page 1"><span style="font-size: 0.9375rem;"><b>Ziffernfolge 2</b></span></div>
    <div title="Page 1"><span style="font-size: 0.9375rem;"><br></span></div>
    <div title="Page 1"><span style="font-size: 0.9375rem;"><b>(a)</b> Wie viele Möglichkeiten gibt es, aus den Ziffern „0“ bis „9“ unterschiedliche \({@n@}\)-stellige Zahlen zu bilden, wenn Ziffern mehrfach vorkommen dürfen?</span><br>
        <b>(b)</b> Aus technischen Gründen darf die Ziffer "0" nicht als erste Ziffer auftauchen. Wieviele Möglichkeiten gibt es, den \({@n@}\)-stelligen Pincode in Teilaufgabe (a) zu wählen, wenn die führende Ziffer nur aus den Ziffern „1“ bis „9“ gewählt
        werden darf?</div>
    <div title="Page 1"><span style="font-size: 0.9375rem;"><br></span></div>
    <div title="Page 1"><span style="font-size: 0.9375rem;">Widmen wir uns zunächst Teilaufgabe <b>(a)</b>. Bitte geben Sie hier Ihre Lösung ein und klicken anschließend auf Prüfen:</span></div>[[input:ans1]] [[validation:ans1]][[feedback:prt1]]
    <p></p>
</div>


<div id="teilaufgabe_b" style="display:none;">
    <span><br>
    <table style="border-width: 2px; border-style: solid; border-color: rgb(152, 202, 62);">

        <thead>
            <tr>
                <th scope="col"><span style="font-weight: normal;"><span><u>Ursprüngliche Fragestellung:</u>
    <div title="Page 1"><span style="font-size: 0.9375rem;"><b>Ziffernfolge 2</b></span></div>
<div title="Page 1"><span style="font-size: 0.9375rem;"><br></span></div>
<div title="Page 1"><span style="font-size: 0.9375rem;"><b>(a)</b> Wie viele Möglichkeiten gibt es, aus den Ziffern „0“ bis „9“ unterschiedliche \({@n@}\)-stellige Zahlen zu bilden, wenn Ziffern mehrfach vorkommen dürfen?</span><br>
    <b>(b)</b> Aus technischen Gründen darf die Ziffer "0" nicht als erste Ziffer auftauchen. Wieviele Möglichkeiten gibt es, den \({@n@}\)-stelligen Pincode in Teilaufgabe (a) zu wählen, wenn die führende Ziffer nur aus den Ziffern „1“ bis „9“ gewählt
    werden darf?</div>
<div title="Page 1"><span style="font-size: 0.9375rem;"><br></span></div>
</span>
</span>
</th>
</tr>
</thead>
</table>
</span>
<br> Widmen wir uns nun Teilaufgabe <b>(b)</b>.

<p></p>
<p>Die Anzahl der Möglichkeiten für Teilaufgabe <b>(b)</b> beträgt:&nbsp;[[input:teilaufgabe_b]] [[validation:teilaufgabe_b]]<br></p>
[[feedback:teilaufgabe_b]]
</div>



<div id="zwischen1" style="display:none;">
    <span><br>
    <table style="border-width: 2px; border-style: solid; border-color: rgb(152, 202, 62);">

        <thead>
            <tr>
                <th scope="col"><span style="font-weight: normal;"><span><u>Ursprüngliche Fragestellung:</u>
  <div>
  	<div>
    <div title="Page 1"><span style="font-size: 0.9375rem;"><b>Ziffernfolge 2</b></span></div>
<div title="Page 1"><span style="font-size: 0.9375rem;"><br></span></div>
<div title="Page 1"><span style="font-size: 0.9375rem;"><b>(a)</b> Wie viele Möglichkeiten gibt es, aus den Ziffern „0“ bis „9“ unterschiedliche \({@n@}\)-stellige Zahlen zu bilden, wenn Ziffern mehrfach vorkommen dürfen?</span><br>
    <b>(b)</b> Aus technischen Gründen darf die Ziffer "0" nicht als erste Ziffer auftauchen. Wieviele Möglichkeiten gibt es, den \({@n@}\)-stelligen Pincode in Teilaufgabe (a) zu wählen, wenn die führende Ziffer nur aus den Ziffern „1“ bis „9“ gewählt
    werden darf?</div>
<div title="Page 1"><span style="font-size: 0.9375rem;"><br></span></div>
</div>


</div>
</span>
</span>
</th>
</tr>
</thead>
</table>
</span>
<br> Wenn die Ziffern "0" bis "9" mehrfach vorkommen dürfen, bedeutet dies, dass wir für jede Stelle des \({@n@}\)-stelligen Pincodes wieviele Möglichkeiten haben, eine Ziffer zu wählen?

<p></p>
<p>Es ergeben sich damit:&nbsp;[[input:zwischen1]] [[validation:zwischen1]] Möglichkeiten für jede Stelle. <br></p>
[[feedback:zwischen1]]
</div>








<script src="https://www.rub.de/ak-mathe-digital/stackselbstlern.js"></script>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>2.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[/*
  Ziffernfolge 2

  wurde entwickelt von
  
    Riko Kelter <riko.kelter(at)uni-siegen.de>
    Alexander Schnurr <schnurr(at)mathematik.uni-siegen.de>
    Susanne Spies <spies(at)mathematik.uni-siegen.de>

  nach einer Idee von
  
   Riko Kelter <riko.kelter(at)uni-siegen.de>
   Alexander Schnurr <schnurr(at)mathematik.uni-siegen.de>
   Susanne Spies <spies(at)mathematik.uni-siegen.de>

  an der Universität Siegen.

  Dieses Werk ist lizenziert unter einer Creative Commons
  Namensnennung-Weitergabe unter gleichen Bedingungen 4.0 International
  Lizenz. Um eine Kopie der Lizenz zu erhalten, besuchen Sie
  http://creativecommons.org/licenses/by-sa/4.0/.

  SPDX-License-Identifier: CC-BY-SA-4.0

  Technische Informationen:

  Diese Aufgabe bindet das Skript ‘stackselbstlern.js’ von Michael
  Kallweit für die Aufgabennavigation ein.
*/

test01(x):= integerp(x) and is(x>0);
n: rand_with_step(3,6,1);
lsg: 10^n;
lsg_b: 9*10^(n-1);]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>Zahl der Ziffern \({@n@}\).</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>lsg</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>teilaufgabe_b</name>
      <type>algebraic</type>
      <tans>lsg_b</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>zwischen1</name>
      <type>algebraic</type>
      <tans>10</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>lsg</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa
fa-check"></i></span> Richtige Antwort, gut gemacht!
Sie haben Teilaufgabe <b>(a)</b> gelöst. Wir ziehen mit Zurücklegen unter Beachtung der Reihenfolge, womit sich \(10^{@n@}\) Möglichkeiten ergeben, einen \({@n@}\)-stelligen Pincode zu wählen.

<p>Klicken Sie zum Fortfahren bitte auf den folgenden Button:
    <button type="button" class="buttonweiter" onclick="hide('aufgabe');show('teilaufgabe_b');">Weiter</button>
    <br>
</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<div id="prtA-1">
Dass Sie die Aufgabe nicht auf Anhieb lösen konnten, ist kein Problem! Im Folgenden wird die Aufgabe in kleinere Teilaufgaben unterteilt.

<p>Klicken Sie zum Fortfahren bitte auf den folgenden Button:
    <button type="button" class="buttonweiter" onclick="hide('aufgabe');show('zwischen1');">Weiter</button>
    <br>
</p>
</div>

<div id="prtA-2" style="display:none;">
<span style="font-size: 1.5 em; color:red;"><i class="fa fa-times"></i></span> Falsche Antwort.
<p>
Versuchen Sie nun erneut Teilaufgabe <b>(a)</b>. Wenn für jede Stelle des Pincodes 10 Möglichkeiten existieren, und der Code \({@n@}\) Stellen hat, können Sie nun leicht die Anzahl aller Möglichkeiten ausrechnen, einen Pincode zu wählen.
</p>
</div>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>test01(ans1)</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>0</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Die angegebene Zahl muss eine natürliche Zahl sein. Bitte geben Sie eine natürliche Zahl ein.</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>teilaufgabe_b</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>test01(lsg_b)</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>teilaufgabe_b-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>teilaufgabe_b-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Die angegebene Zahl muss eine natürliche Zahl sein. Bitte geben Sie eine natürliche Zahl ein.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>teilaufgabe_b</sans>
        <tans>lsg_b</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>teilaufgabe_b-2-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa
fa-check"></i></span> Richtige Antwort, gut gemacht!
Sie haben Teilaufgabe <b>(b)</b> und damit die gesamte Aufgabe gelöst. Für die ersten beiden Stellen des Pincodes verbleiben noch 9 Möglichkeiten, eine Ziffer zu wählen. Für die dritte Stelle verbleiben weiterhin 10 Möglichkeiten, sodass sich insgesamt \(9\cdot 9\cdot 10 = 810\) Möglichkeiten ergeben.]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>teilaufgabe_b-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa
fa-times"></i></span> Falsche Antwort.

Überlegen Sie noch einmal, wieviele Möglichkeiten für die erste und zweite Ziffer existieren. Im Vergleich zu Teilaufgabe <b>(a)</b> müssen Sie nun die nun pro Stelle möglicherweise verschiedenen Möglichkeiten eine Ziffer zu wählen miteinander multiplizieren.]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>zwischen1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>0</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>test01(zwischen1)</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>zwischen1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>zwischen1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p dir="ltr" style="text-align: left;">Ihre Antwort muss eine natürliche Zahl sein. Bitte geben Sie eine natürliche Zahl ein.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>zwischen1</sans>
        <tans>10</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>zwischen1-2-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa
fa-check"></i></span> Richtige Antwort, gut gemacht!

<p>Sie können nun Teilaufgabe <b>(a)</b> erneut versuchen. Klicken Sie zum Fortfahren bitte auf den folgenden Button:
    <button type="button" class="buttonweiter" onclick="hide('zwischen1');show('aufgabe');hide('prtA-1');show('prtA-2');">Weiter</button>
    <br>
</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>zwischen1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa
fa-times"></i></span> Falsche Antwort.
<p dir="ltr" style="text-align: left;">Überlegen Sie noch einmal gründlich, wieviele Möglichkeiten es gibt.</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 802370  -->
  <question type="stack">
    <name>
      <text>Schulhefte</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<style>
    .buttonweiter {
        border: 1px solid black;
        background-color: #a9f5bc;
    }

    .buttonweiter:hover {
        background-color: #e0f8e6;
    }

    .buttonzurueck {
        border: 1px solid black;
        background-color: #dcb25e;
    }

    .buttonzurueck:hover {
        background-color: #e7d2a7;
    }

    .buttontipp {
        border: 1px solid black;
        background-color: #c9d3f6;
    }

    .buttontipp:hover {
        background-color: #dbe1f9;
    }

    .erinnerungsbox {
        border: 2px rgb(152, 202, 62) solid;
        padding: 5px;
        margin: 5px;
    }

    .que.stack .formulation details {
        border: 1px solid #aaa;
        border-radius: 4px;
        padding: .5em .5em 0;
    }

    .que.stack .formulation summary {
        font-weight: bold;
        margin: -.5em -.5em 0;
        padding: .5em;
    }

    .que.stack .formulation details[open] {
        padding: .5em;
    }
</style>

<div id="summarybox">
    <details>
        <summary>Inhalt und Umfang dieser Aufgabe</summary>
        <p>
            In dieser Aufgabe lernen Sie in Aufgabenteilen (a)-(c) anhand dreier Beispiele, wie Sie die kombinatorischen Grundformeln zur Lösung kombinatorischer Fragestellungen nutzen können.
        </p>
    </details>
    <hr>
</div>

<div id="aufgabe" style="display:box;">
    <div title="Page 2">
        <div>
            <div>
                <p><b><img src="@@PLUGINFILE@@/notebook-2478554_640.jpg" alt="" role="presentation" class="img-responsive atto_image_button_text-top" width="303" height="200"><br></b></p>
                <p><b>Schulhefte</b></p>
                <p>Die Eltern der Fünftklässler sollen die 6 Hefte der Hauptfächer (je ein Schul- und ein Hausheft für die Fächer Deutsch, Mathematik und Englisch) mit Umschlägen versehen. Es stehen 7 Farben zur Verfügung, wobei von jeder Farbe ausreichend
                    viele Umschläge vorhanden sind. Wie viele Möglichkeiten gibt es, wenn
                </p>
                <p><b> (a) </b> alle Hefte verschiedenfarbig eingebunden sein sollen?</p>
                <p><b> (b) </b> keine Einschränkung gilt?</p>
                <p><b> (c) </b> Schul- und Hausheft des gleichen Fachs die gleiche Farbe tragen sollen, die Fächer aber durch Farben unterschieden werden?</p>
            </div>
        </div>
    </div>
    Widmen wir uns zunächst Teilaufgabe (a). Die Anzahl der Möglichkeiten beträgt: [[input:ans1]] [[validation:ans1]]<br>[[feedback:prt1]]
</div>




<div id="teilaufgabe_b" style="display:none;">
    <span><br>
    <table style="border-width: 2px; border-style: solid; border-color: rgb(152, 202, 62);">

        <thead>
            <tr>
                <th scope="col"><span style="font-weight: normal;"><span><u>Ursprüngliche Fragestellung:</u>
    <div title="Page 2">
        <div>
            <div>
                <p><b><img src="@@PLUGINFILE@@/notebook-2478554_640.jpg" alt="" role="presentation" class="img-responsive atto_image_button_text-top" width="303" height="200"><br></b></p>
                <p><b>Schulhefte</b></p>
                <p>Die Eltern der Fünftklässler sollen die 6 Hefte der Hauptfächer (je ein Schul- und ein Hausheft für die Fächer Deutsch, Mathematik und Englisch) mit Umschlägen versehen. Es stehen 7 Farben zur Verfügung, wobei von jeder Farbe ausreichend viele Umschläge vorhanden sind. Wie viele Möglichkeiten gibt es,
                    wenn
                </p>
                <p><b> (a) </b> alle Hefte verschiedenfarbig eingebunden sein sollen?</p>
                <p><b> (b) </b> keine Einschränkung gilt?</p>
                <p><b> (c) </b> Schul- und Hausheft des gleichen Fachs die gleiche Farbe tragen sollen, die Fächer aber durch Farben unterschieden werden?</p>
            </div>
        </div>
    </div>
</span>
    </span>
    </th>
    </tr>
    </thead>
    </table>
    </span>
    <br> Widmen wir uns nun Teilaufgabe (b). Die Anzahl der Möglichkeiten beträgt: [[input:ans2]] [[validation:ans2]]
    <br> [[feedback:prt2]]
</div>




<div id="teilaufgabe_c" style="display:none;">
    <span><br>
    <table style="border-width: 2px; border-style: solid; border-color: rgb(152, 202, 62);">

        <thead>
            <tr>
                <th scope="col"><span style="font-weight: normal;"><span><u>Ursprüngliche Fragestellung:</u>
    <div title="Page 2">
        <div>
            <div>
                <p><b><img src="@@PLUGINFILE@@/notebook-2478554_640.jpg" alt="" role="presentation" class="img-responsive atto_image_button_text-top" width="303" height="200"><br></b></p>
                <p><b>Schulhefte</b></p>
                <p>Die Eltern der Fünftklässler sollen die 6 Hefte der Hauptfächer (je ein Schul- und ein Hausheft für die Fächer Deutsch, Mathematik und Englisch) mit Umschlägen versehen. Es stehen 7 Farben zur Verfügung, wobei von jeder Farbe ausreichend viele Umschläge vorhanden sind. Wie viele Möglichkeiten gibt es,
                    wenn
                </p>
                <p><b> (a) </b> alle Hefte verschiedenfarbig eingebunden sein sollen?</p>
                <p><b> (b) </b> keine Einschränkung gilt?</p>
                <p><b> (c) </b> Schul- und Hausheft des gleichen Fachs die gleiche Farbe tragen sollen, die Fächer aber durch Farben unterschieden werden?</p>
            </div>
        </div>
    </div>
</span>
    </span>
    </th>
    </tr>
    </thead>
    </table>
    </span>
    <br> Widmen wir uns nun Teilaufgabe (c). Die Anzahl der Möglichkeiten beträgt: [[input:ans3]] [[validation:ans3]]
    <br> [[feedback:prt3]]
</div>



<div id="zwischen1" style="display:none;">
    <span><br>
    <table style="border-width: 2px; border-style: solid; border-color: rgb(152, 202, 62);">

        <thead>
            <tr>
                <th scope="col"><span style="font-weight: normal;"><span><u>Ursprüngliche Fragestellung:</u>
    <div title="Page 2">
        <div>
            <div>
                <p><b><img src="@@PLUGINFILE@@/notebook-2478554_640.jpg" alt="" role="presentation" class="img-responsive atto_image_button_text-top" width="303" height="200"><br></b></p>
                <p><b>Schulhefte</b></p>
                <p>Die Eltern der Fünftklässler sollen die 6 Hefte der Hauptfächer (je ein Schul- und ein Hausheft für die Fächer Deutsch, Mathematik und Englisch) mit Umschlägen versehen. Es stehen 7 Farben zur Verfügung, wobei von jeder Farbe ausreichend viele Umschläge vorhanden sind. Wie viele Möglichkeiten gibt es,
                    wenn
                </p>
                <p><b> (a) </b> alle Hefte verschiedenfarbig eingebunden sein sollen?</p>
                <p><b> (b) </b> keine Einschränkung gilt?</p>
                <p><b> (c) </b> Schul- und Hausheft des gleichen Fachs die gleiche Farbe tragen sollen, die Fächer aber durch Farben unterschieden werden?</p>
            </div>
        </div>
    </div>
</span>
    </span>
    </th>
    </tr>
    </thead>
    </table>
    </span>
    <br> Widmen wir uns zunächst Teilaufgabe (a). Offensichtlich ziehen wir für die 6 Heftumschläge aus den 7 Farben ohne Zurücklegen. Wir müssen uns also noch die Frage stellen, ob beim Ziehen die Reihenfolge eine Rolle spielt oder nicht: [[input:zwischen1]]
    [[validation:zwischen1]]
    <br> [[feedback:zwischen1]]
</div>



<div id="zwischen3" style="display:none;">
    <span><br>
    <table style="border-width: 2px; border-style: solid; border-color: rgb(152, 202, 62);">

        <thead>
            <tr>
                <th scope="col"><span style="font-weight: normal;"><span><u>Ursprüngliche Fragestellung:</u>
 <div title="Page 2">
    <div>
        <div>
            <p><b><img src="@@PLUGINFILE@@/notebook-2478554_640.jpg" alt="" role="presentation" class="img-responsive atto_image_button_text-top" width="303" height="200"><br></b></p>
            <p><b>Schulhefte</b></p>
            <p>Die Eltern der Fünftklässler sollen die 6 Hefte der Hauptfächer (je ein Schul- und ein Hausheft für die Fächer Deutsch, Mathematik und Englisch) mit Umschlägen versehen. Es stehen 7 Farben zur Verfügung, wobei von jeder Farbe ausreichend viele Umschläge vorhanden sind. Wie viele Möglichkeiten gibt es, wenn</p>
            <p><b> (a) </b> alle Hefte verschiedenfarbig eingebunden sein sollen?</p>
            <p><b> (b) </b> keine Einschränkung gilt?</p>
            <p><b> (c) </b> Schul- und Hausheft des gleichen Fachs die gleiche Farbe tragen sollen, die Fächer aber durch Farben unterschieden werden?</p>
        </div>
    </div>
</div>
</span>
    </span>
    </th>
    </tr>
    </thead>
    </table>
    </span>
    <br> Kommen wir nun zu Teilaufgabe (b). Im Gegensatz zu Teilaufgabe (a) müssen die Hefte nun nicht mehr verschiedenfarbig eingebunden sein. Ziehen wir nun mit Zurücklegen oder ohne Zurücklegen? [[input:zwischen3]] [[validation:zwischen3]]

    <br> [[feedback:zwischen3]]
</div>






<div id="zwischen4" style="display:none;">
    <span><br>
    <table style="border-width: 2px; border-style: solid; border-color: rgb(152, 202, 62);">

        <thead>
            <tr>
                <th scope="col"><span style="font-weight: normal;"><span><u>Ursprüngliche Fragestellung:</u>
 <div title="Page 2">
    <div>
        <div>
            <p><b><img src="@@PLUGINFILE@@/notebook-2478554_640.jpg" alt="" role="presentation" class="img-responsive atto_image_button_text-top" width="303" height="200"><br></b></p>
            <p><b>Schulhefte</b></p>
            <p>Die Eltern der Fünftklässler sollen die 6 Hefte der Hauptfächer (je ein Schul- und ein Hausheft für die Fächer Deutsch, Mathematik und Englisch) mit Umschlägen versehen. Es stehen 7 Farben zur Verfügung, wobei von jeder Farbe ausreichend viele Umschläge vorhanden sind. Wie viele Möglichkeiten gibt es, wenn</p>
            <p><b> (a) </b> alle Hefte verschiedenfarbig eingebunden sein sollen?</p>
            <p><b> (b) </b> keine Einschränkung gilt?</p>
            <p><b> (c) </b> Schul- und Hausheft des gleichen Fachs die gleiche Farbe tragen sollen, die Fächer aber durch Farben unterschieden werden?</p>
        </div>
    </div>
</div>
</span>
    </span>
    </th>
    </tr>
    </thead>
    </table>
    </span>
    <br> Wir ziehen nun also mit Zurücklegen und mit Beachtung der Reihenfolge. Da wir keine Einschränkung machen, ziehen wir mit Zurücklegen. Wir unterscheiden in welcher Reihenfolge die Hefte eingebunden werden, da es einen Unterschied macht ob das
    erste Heft (z.B. das Mathe-Schulheft) einen blauen oder grünen Umschlag erhält. Wie lautet die hierfür korrekte kombinatorische Grundfigur für das Ziehen mit Zurücklegen und mit Beachtung der Reihenfolge? [[input:zwischen4]] [[validation:zwischen4]]

    <br> [[feedback:zwischen4]]
</div>






<div id="zwischen6" style="display:none;">
    <span><br>
    <table style="border-width: 2px; border-style: solid; border-color: rgb(152, 202, 62);">

        <thead>
            <tr>
                <th scope="col"><span style="font-weight: normal;"><span><u>Ursprüngliche Fragestellung:</u>
 <div title="Page 2">
    <div>
        <div>
            <p><b><img src="@@PLUGINFILE@@/notebook-2478554_640.jpg" alt="" role="presentation" class="img-responsive atto_image_button_text-top" width="303" height="200"><br></b></p>
            <p><b>Schulhefte</b></p>
            <p>Die Eltern der Fünftklässler sollen die 6 Hefte der Hauptfächer (je ein Schul- und ein Hausheft für die Fächer Deutsch, Mathematik und Englisch) mit Umschlägen versehen. Es stehen 7 Farben zur Verfügung, wobei von jeder Farbe ausreichend viele Umschläge vorhanden sind. Wie viele Möglichkeiten gibt es, wenn</p>
            <p><b> (a) </b> alle Hefte verschiedenfarbig eingebunden sein sollen?</p>
            <p><b> (b) </b> keine Einschränkung gilt?</p>
            <p><b> (c) </b> Schul- und Hausheft des gleichen Fachs die gleiche Farbe tragen sollen, die Fächer aber durch Farben unterschieden werden?</p>
        </div>
    </div>
</div>
</span>
    </span>
    </th>
    </tr>
    </thead>
    </table>
    </span>
    <br> Kommen wir nun zu Teilaufgabe (c). Wie wir die Anzahl der Möglichkeiten berechnen wenn die Hefte verschiedenfarbig eingebunden sein sollen, haben wir bereits in Teilaufgabe (a) gesehen. Wenn wir nun jedoch nur noch pro Fach eine Farbe wählen,
    wieviele Ziehungen \(k\) machen wir dann noch?
    <br> Wir ziehen nur noch [[input:zwischen6]] [[validation:zwischen6]] mal.

    <br> [[feedback:zwischen6]]
</div>


<script src="https://www.rub.de/ak-mathe-digital/stackselbstlern.js"></script>]]></text>
<file name="notebook-2478554_640.jpg" path="/" encoding="base64"></file>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[/*
  Schulhefte

  wurde entwickelt von
  
    Riko Kelter <riko.kelter(at)uni-siegen.de>
    Alexander Schnurr <schnurr(at)mathematik.uni-siegen.de>
    Susanne Spies <spies(at)mathematik.uni-siegen.de>

  nach einer Idee von
  
   Riko Kelter <riko.kelter(at)uni-siegen.de>
   Alexander Schnurr <schnurr(at)mathematik.uni-siegen.de>
   Susanne Spies <spies(at)mathematik.uni-siegen.de>

  an der Universität Siegen.

  Dieses Werk ist lizensiert unter einer Creative Commons
  Namensnennung-Weitergabe unter gleichen Bedingungen 4.0 International
  Lizenz. Um eine Kopie der Lizenz zu erhalten, besuchen Sie
  http://creativecommons.org/licenses/by-sa/4.0/.

  SPDX-License-Identifier: CC-BY-SA-4.0

  Technische Informationen:

  Diese Aufgabe bindet das Skript ‘stackselbstlern.js’ von Michael
  Kallweit für die Aufgabennavigation ein.
*/

test01(x):= is(x>0) and integerp(x);
test02(x):= is(x>=1 and x<=2) and integerp(x);
test03(x):= is(x>=0 and x<=4) and integerp(x);
ListeZwischen1: [[1, true, "Ziehen mit Beachtung der Reihenfolge"], [2, false, "Ziehen ohne Beachtung der Reihenfolge"] ];
ListeZwischen3: [[1, true, "Ziehen mit Zurücklegen"], [2, false, "Ziehen ohne Zurücklegen"] ];
ListeZwischen4: [[1, false, " \\({n\\choose k}\\)"], [2, true, "\\(n^k\\)"], [3, false, "\\(\\frac{n!}{(n-k)!}\\)"], [4, false, "\\({n+k-1\\choose k}\\)"] ];
lsg1: 7!;
lsg2: 7^6;
lsg3: 7*6*5;
lsgZwischen1: 1;
lsgZwischen2: 7!;
lsgZwischen3: 1;
lsgZwischen4: 2;
lsgZwischen5: 7^6;
lsgZwischen6: 3;
lsgZwischen7: 7*6*5;]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text></text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>lsg1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>lsg2</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>lsg3</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>zwischen1</name>
      <type>radio</type>
      <tans>ListeZwischen1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options>nonotanswered</options>
    </input>
    <input>
      <name>zwischen3</name>
      <type>radio</type>
      <tans>ListeZwischen3</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options>nonotanswered</options>
    </input>
    <input>
      <name>zwischen4</name>
      <type>radio</type>
      <tans>ListeZwischen4</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options>nonotanswered</options>
    </input>
    <input>
      <name>zwischen6</name>
      <type>algebraic</type>
      <tans>lsgZwischen6</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>lsg1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<span style="font-size: 1.5 em; color:green;"><i class=" fa fa-check"></i></span> Richtige Antwort, gut gemacht!

<p>Sie haben Teilaufgabe (a) gelöst. Es ergeben sich somit \(7!=5040\) Möglichkeiten, die Hefte einzubinden.</p>

<p>Klicken Sie zum Fortfahren mit Teilaufgabe (b) bitte auf den folgenden Button:
    <button type="button" class="buttonweiter" onclick="hide('aufgabe');show('teilaufgabe_b');">Weiter</button>
    <br>
</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<div id="prtA-1">
<span style="font-size: 1.5 em; color:red;"><i class="fa fa-times"></i></span> Falsche Antwort.

Dass Sie die Aufgabe nicht auf Anhieb lösen konnten, ist kein Problem! Im Folgenden wird die Aufgabe in kleinere Teilaufgaben unterteilt.

<p>Klicken Sie zum Fortfahren bitte auf den folgenden Button:
    <button type="button" class="buttonweiter" onclick="hide('aufgabe');show('zwischen1');">Weiter</button>
    <br>
</p>
</div>

<div id="prtA-2" style="display:none">
<span style="font-size: 1.5 em; color:red;"><i class="fa fa-times"></i></span> Falsche Antwort.
Wir wissen nun also, dass wir \(k\) Farben (für \(k\) Hefte) ohne Zurücklegen und mit Beachtung der Reihenfolge (es ist wichtig, in welcher Reihenfolge wir die Hefte mit den Umschlägen versehen) aus \(n=7\) Farben ziehen. Die kombinatorische
    Grundfigur hierfür ist \(\frac{n!}{(n-k)!}\). Wieviele Möglichkeiten ergeben sich also damit? Versuchen Sie aufgabe (a) erneut!
</div>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>test01(ans1)</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>0</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Die in Aufgabenteil (a) angegebene Zahl ist negativ. Sie kann daher nicht als Anzahl der Möglichkeiten interpretiert werden. Bitte korrigieren Sie Ihre Lösung.</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>117649</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<span style="font-size: 1.5 em; color:green;"><i class=" fa fa-check"></i></span> Richtige Antwort, gut gemacht!

<p>Dies sind bereits \(7^6=117649\) Möglichkeiten. In Teilaufgabe (a) waren es lediglich \(5040\) Möglichkeiten.</p>

<p>Klicken Sie zum Fortfahren mit Teilaufgabe (c) bitte auf den folgenden Button:
    <button type="button" class="buttonweiter" onclick="hide('teilaufgabe_b');show('teilaufgabe_c');">Weiter</button>
    <br>
</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<div id="prtB-1">
<span style="font-size: 1.5 em; color:red;"><i class="fa fa-times"></i></span> Falsche Antwort.

Dass Sie die Aufgabe nicht auf Anhieb lösen konnten, ist kein Problem! Im Folgenden wird die Aufgabe in kleinere Teilaufgaben unterteilt.

<p>Klicken Sie zum Fortfahren bitte auf den folgenden Button:
    <button type="button" class="buttonweiter" onclick="hide('teilaufgabe_b');show('zwischen3');">Weiter</button>
    <br>
</p>
</div>

<div id="prtB-2" style="display:none">
<span style="font-size: 1.5 em; color:red;"><i class="fa fa-times"></i></span> Falsche Antwort.

Wir müssen also die Anzahl der Möglichkeiten mittels der Formel \(n^k\) berechnen. Wieviele Möglichkeiten ergeben sich damit, die Hefte ohne Einschränkung mit Umschlägen zu versehen? Versuchen Sie Teil (b) erneut!
</div>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>test01(ans2)</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>0</truenextnode>
        <trueanswernote>prt2-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Bitte geben Sie eine Zahl zwischen 0 und 1 ein!<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt3</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>210</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt3-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<span style="font-size: 1.5 em; color:green;"><i class=" fa fa-check"></i></span> Richtige Antwort, gut gemacht!

<p>Sie haben Teilaufgabe (c) und damit die gesamte Aufgabe gelöst. Es gibt somit in Teilaufgabe (c) nur noch \(\frac{7!}{(7-3)!}=7\cdot 6\cdot 5=210\) Möglichkeiten, die Hefte einzubinden.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt3-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<div id="prtC-1">
<span style="font-size: 1.5 em; color:red;"><i class="fa fa-times"></i></span> Falsche Antwort.

Dass Sie die Aufgabe nicht auf Anhieb lösen konnten, ist kein Problem! Im Folgenden wird die Aufgabe in kleinere Teilaufgaben unterteilt.

<p>Klicken Sie zum Fortfahren bitte auf den folgenden Button:
    <button type="button" class="buttonweiter" onclick="hide('teilaufgabe_c');show('zwischen6');">Weiter</button>
    <br>
</p>
</div>

<div id="prtC-2" style="display:none">
<span style="font-size: 1.5 em; color:red;"><i class="fa fa-times"></i></span> Falsche Antwort.

Nun sind wir fast am Ziel. Wir ziehen also nun nur noch \(k=3\) Farben für die Fächer Deutsch, Mathematik und Englisch aus den \(n=7\) Farben. Ob wir ohne oder mit Zurücklegen und ohne oder mit Beachtung der Reihenfolge ziehen, wissen wir bereits aus Teilaufgabe (a). Wieviele Möglichkeiten ergeben sich damit insgesamt? Versuchen Sie Teil (c) erneut!
</div>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>test01(ans3)</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>0</truenextnode>
        <trueanswernote>prt3-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt3-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Die in Aufgabenteil (c) angegebene Zahl ist negativ. Sie kann daher nicht als Anzahl der Möglichkeiten interpretiert werden. Bitte korrigieren Sie Ihre Lösung.<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>zwischen1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>0</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>zwischen1</sans>
        <tans>lsgZwischen1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>zwischen1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<span style="font-size: 1.5 em; color:green;"><i class=" fa fa-check"></i></span> Richtige Antwort, gut gemacht!

<p>Klicken Sie zum Fortfahren bitte auf den folgenden Button:
    <button type="button" class="buttonweiter" onclick="hide('zwischen1');show('aufgabe');hide('prtA-1');show('prtA-2');">Weiter</button>
    <br>
</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>zwischen1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<span style="font-size: 1.5 em; color:red;"><i class="fa fa-times"></i></span> Falsche Antwort.

<p dir="ltr" style="text-align: left;">Überlegen Sie noch einmal, ob wir mit oder ohne Beachtung der Reihenfolge ziehen. Stellen Sie sich dazu vor, die 6 Hefte liegen vor Ihnen auf dem Tisch. Spielt es nun eine Rolle, ob Sie erst grün und dann blau, oder erst blau und dann grün für das erste und zweite Heft ziehen?</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>test02(zwischen1)</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>0</truenextnode>
        <trueanswernote>zwischen1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>zwischen1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p dir="ltr" style="text-align: left;">Bitte geben Sie eine 1 oder 2 ein!<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>zwischen3</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>0</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>zwischen3</sans>
        <tans>lsgZwischen3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>zwischen3-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<span style="font-size: 1.5 em; color:green;"><i class=" fa fa-check"></i></span> Richtige Antwort, gut gemacht!

<p>Klicken Sie zum Fortfahren bitte auf den folgenden Button:
    <button type="button" class="buttonweiter" onclick="hide('zwischen3');show('zwischen4');">Weiter</button>
    <br>
</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>zwischen3-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<span style="font-size: 1.5 em; color:red;"><i class="fa fa-times"></i></span> Falsche Antwort.

<p dir="ltr" style="text-align: left;"><em>Tipp:</em> Wenn keine Einschränkung gilt, dürfen wir Farben mehrfach für verschiedene Hefte verwenden.</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>zwischen4</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>0</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>zwischen4</sans>
        <tans>lsgZwischen4</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>zwischen4-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<span style="font-size: 1.5 em; color:green;"><i class=" fa fa-check"></i></span> Richtige Antwort, gut gemacht!

<p>Klicken Sie zum Fortfahren bitte auf den folgenden Button:
    <button type="button" class="buttonweiter" onclick="hide('zwischen4');show('teilaufgabe_b');hide('prtB-1');show('prtB-2');">Weiter</button>
    <br>
</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>zwischen4-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<span style="font-size: 1.5 em; color:red;"><i class="fa fa-times"></i></span> Falsche Antwort.

<p dir="ltr" style="text-align: left;"><em>Tipp:</em> Formeln 3 und 4 sind falsch.</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>zwischen6</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>0</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>zwischen6</sans>
        <tans>lsgZwischen6</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>zwischen6-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<span style="font-size: 1.5 em; color:green;"><i class=" fa fa-check"></i></span> Richtige Antwort, gut gemacht!

<p>Klicken Sie zum Fortfahren bitte auf den folgenden Button:
    <button type="button" class="buttonweiter" onclick="hide('zwischen6');show('teilaufgabe_c');hide('prtC-1');show('prtC-2');">Weiter</button>
    <br>
</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>zwischen6-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<span style="font-size: 1.5 em; color:red;"><i class="fa fa-times"></i></span> Falsche Antwort.

<p dir="ltr" style="text-align: left;">Überlegen Sie noch einmal, wieviele Umschläge wir nur noch ziehen, wenn die Fächer jeweils dieselbe Farbe haben.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>test01(zwischen6)</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>0</truenextnode>
        <trueanswernote>zwischen6-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>zwischen6-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p dir="ltr" style="text-align: left;">Bitte geben Sie eine natürliche Zahl ein, da Ihre Antwort sonst nicht als Anzahl der Möglichkeiten interpretiert werden kann.</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 802377  -->
  <question type="stack">
    <name>
      <text>Ziffernfolge</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<div id="summarybox">
    <details>
        <summary>Inhalt und Umfang dieser Aufgabe</summary>
        <p>
            In dieser Aufgabe lernen Sie, wie Sie mittels kombinatorischer Grundformeln ein Anwendungsproblem lösen können.</p>
    </details>
    <hr>
</div>

<div id="aufgabenstellung" style="display:box;">
    <div title="Page 1"><span style="font-size: 0.9375rem;"><b><img src="@@PLUGINFILE@@/pay-1036469_640.jpg" alt="" role="presentation" class="img-responsive atto_image_button_text-top" width="251" height="177"><br></b></span></div>
    <div title="Page 1"><span style="font-size: 0.9375rem;"><b><br></b></span></div>
    <div title="Page 1"><span style="font-size: 0.9375rem;"><b>Ziffernfolge</b></span></div>
    <div title="Page 1"><span style="font-size: 0.9375rem;"><br></span></div>
</div>

<div id="urspruenglicheaufgabe" style="display:none;">
    <span><br>
    <table style="border-width: 2px; border-style: solid; border-color: rgb(152, 202, 62);">

        <thead>
            <tr>
                <th scope="col"><span style="font-weight: normal;"><span><u>Ursprüngliche Fragestellung:</u>
<div title="Page 1"><span style="font-size: 0.9375rem;"><b><img src="@@PLUGINFILE@@/pay-1036469_640.jpg" alt="" role="presentation" class="img-responsive atto_image_button_text-top" width="251" height="177"><br></b></span></div>
<div title="Page 1"><span style="font-size: 0.9375rem;"><b><br></b></span></div>
<div title="Page 1"><span style="font-size: 0.9375rem;"><b>Ziffernfolge</b></span></div>
<div title="Page 1"><span style="font-size: 0.9375rem;"><br></span></div>
<div title="Page 1"><span style="font-size: 0.9375rem;">Wie viele Möglichkeiten gibt es, aus den Ziffern \(0\) bis \({@n@}\) unterschiedliche dreistellige Zahlen zu bilden&nbsp;</span><span style="font-size: 0.9375rem;">in denen keine Ziffer mehrfach vorkommt?</span></div><br>
<p></p>
<p><br></p>
</span>
</span>
</th>
</tr>
</thead>
</table>
</span>
</div>


<div id="aufgabe1" style="display:box;">
    <div title="Page 1"><span style="font-size: 0.9375rem;">Wie viele Möglichkeiten gibt es, aus den Ziffern \(0\) bis \({@n@}\) unterschiedliche dreistellige Zahlen zu bilden&nbsp;</span><span style="font-size: 0.9375rem;">in denen keine Ziffer mehrfach vorkommt:&nbsp;[[input:ans1]] [[validation:ans1]]</span></div><br>[[feedback:prt1]]
    <p></p>
    <p><br></p>
</div>


<div id="zwischen1" style="display:none;">
    <br> Wenn die Ziffern \(0\) bis \({@n@}\) nicht mehrfach vorkommen dürfen, bedeutet dies das wir für die erste Stelle des dreistelligen Pincodes wieviele Möglichkeiten haben, eine Ziffer zu wählen?

    <p></p>
    <p>Es ergeben sich damit&nbsp;[[input:zwischen1]] [[validation:zwischen1]] Möglichkeiten für die erste Stelle. <br></p>
    [[feedback:zwischen1]]
</div>






<div id="zwischen2" style="display:none;">
    <br> Für die erste Stelle existieren also \({@n+1@}\) Möglichkeiten, eine Ziffer zu wählen. Wenn die Ziffern \(0\) bis \({@n@}\) nicht mehrfach vorkommen dürfen, bedeutet dies das wir für die zweite Stelle des dreistelligen Pincodes noch wieviele
    Möglichkeiten haben, eine Ziffer zu wählen?

    <p></p>
    <p>Es ergeben sich damit&nbsp;[[input:zwischen2]] [[validation:zwischen2]] Möglichkeiten für die zweite Stelle. <br></p>
    [[feedback:zwischen2]]
</div>



<div id="zwischen3" style="display:none;">
    <br> Für die erste Stelle existieren also \({@n+1@}\) Möglichkeiten, eine Ziffer zu wählen und für die zweite Stelle noch \({@n@}\) Möglichkeiten. Wenn die Ziffern \(0\) bis \({@n@}\) nicht mehrfach vorkommen dürfen, bedeutet dies das wir für die
    dritte Stelle des dreistelligen Pincodes noch wieviele Möglichkeiten haben, eine Ziffer zu wählen?

    <p></p>
    <p>Es ergeben sich damit&nbsp;[[input:zwischen3]] [[validation:zwischen3]] Möglichkeiten für die dritte Stelle. <br></p>
    [[feedback:zwischen3]]
</div>





<script src="https://www.rub.de/ak-mathe-digital/stackselbstlern.js"></script>]]></text>
<file name="pay-1036469_640.jpg" path="/" encoding="base64"></file>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;"><strong>Hinweis zur Lösung:</strong></p><p dir="ltr" style="text-align: left;"><span>Es gibt die Möglichkeiten:&nbsp; \((n+1)\cdot n \cdot (n-1) \), dass aus den Ziffern \(0\) bis \(n\) unterschiedliche dreistellige Zahlen zu bilden&nbsp;</span><span>in denen keine Ziffer mehrfach vorkommt.</span><br></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[/*
  Ziffernfolge

  wurde entwickelt von
  
    Riko Kelter <riko.kelter(at)uni-siegen.de>
    Alexander Schnurr <schnurr(at)mathematik.uni-siegen.de>
    Susanne Spies <spies(at)mathematik.uni-siegen.de>

  nach einer Idee von
  
   Riko Kelter <riko.kelter(at)uni-siegen.de>
   Alexander Schnurr <schnurr(at)mathematik.uni-siegen.de>
   Susanne Spies <spies(at)mathematik.uni-siegen.de>

  an der Universität Siegen.

  Dieses Werk ist lizenziert unter einer Creative Commons
  Namensnennung-Weitergabe unter gleichen Bedingungen 4.0 International
  Lizenz. Um eine Kopie der Lizenz zu erhalten, besuchen Sie
  http://creativecommons.org/licenses/by-sa/4.0/.

  SPDX-License-Identifier: CC-BY-SA-4.0

  Technische Informationen:

  Diese Aufgabe bindet das Skript ‘stackselbstlern.js’ von Michael
  Kallweit für die Aufgabennavigation ein.
*/

test01(x):= is(x>=0);
n: rand_with_step(5,9,1);
lsg: (n+1)*n*(n-1);
]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>Wie viele Möglichkeiten gibt es, aus den Ziffern \(0\) bis \({@n@}\) unterschiedliche dreistellige Zahlen zu bilden
in denen keine Ziffer mehrfach vorkommt:</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5 em; color:green;"><i class=" fa fa-check"></i></span> Richtige Antwort, gut gemacht!]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;">Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>lsg</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>zwischen1</name>
      <type>algebraic</type>
      <tans>lsg</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>zwischen2</name>
      <type>algebraic</type>
      <tans>lsg</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>zwischen3</name>
      <type>algebraic</type>
      <tans>lsg</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>lsg</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[Sie haben diese Aufgabe damit erfolgreich abgeschlossen.<br>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>test01(ans1)</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0</truescore>
        <truepenalty></truepenalty>
        <truenextnode>0</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text>Die angegebene Lösung ist negativ, sie kann also nicht die Anzahl der Möglichkeiten sein. Bitte korrigieren Sie Ihre Lösung.</text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>zwischen1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>0</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>lsg</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>zwischen1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>zwischen1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p dir="ltr" style="text-align: left;">Ihre Zahl ist negativ. Bitte geben Sie eine natürliche Zahl ein.<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>zwischen2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>0</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>lsg</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>zwischen2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>zwischen2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p dir="ltr" style="text-align: left;">Ihre Zahl ist negativ. Bitte geben Sie eine natürliche Zahl ein.</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>zwischen3</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>0</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>lsg</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>zwischen3-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>zwischen3-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p dir="ltr" style="text-align: left;">Ihre Zahl ist negativ. Bitte geben Sie eine natürliche Zahl ein.<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 0  -->
  <question type="category">
    <category>
      <text>$course$/top/Rekursive</text>
    </category>
    <info format="html">
      <text></text>
    </info>
    <idnumber></idnumber>
  </question>

<!-- question: 802436  -->
  <question type="stack">
    <name>
      <text><![CDATA[2.09 Rekursive Folge - erste Glieder und Formel (2n-1)^2 [{"DOMAINUID":"1F81DEA"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[Eine Zahlenfolge \(a_1,a_2,a_3, \ldots \) ist durch die folgende Vorschrift gegeben:
\[ a_1 = 1, \quad a_{n+1} = a_n + 8n \mbox{ für } n \ge 1. \]
Berechnen Sie die Folgenglieder \(a_2\),  \(a_3\),  \(a_4\) und \(a_5\). <br> <br>

\(a_2 = \) [[input:ans1]] [[validation:ans1]][[feedback:prt1]]
 <br>
\(a_3 = \) [[input:ans2]] [[validation:ans2]] [[feedback:prt2]]
 <br>
\(a_4 = \) [[input:ans3]] [[validation:ans3]] [[feedback:prt3]]
 <br>
\(a_5 = \) [[input:ans4]] [[validation:ans4]] [[feedback:prt4]] 
 <br><br>

Welche Vermutung über die Gestalt der Zahlenfolge könnte man an den ersten fünf Folgengliedern ablesen? (Geben Sie also einen Ausdruck an, der \( a_n\) allein in Abhängigkeit von \( n\) beschreibt, also einen sogenannten geschlossenen Ausdruck.)<br><br>

\(a_n = \)[[input:ans5]] [[validation:ans5]] [[feedback:prt5]]]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>2.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2020120600</text>
    </stackversion>
    <questionvariables>
      <text>/* authors: Frauke Sprengel, Hs Hannover, Peter Riegler, Ostfalia */
lcmdlvar0: 9;
lcmdlvar1: 25;
lcmdlvar2: 49;
lcmdlvar3: 81;
lcmdlvar4: ((2*n-1)^2);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>lc2mdl-converter_2020-01-20_15-20-44, This question is based on the LON-CAPA problem /res/fhwf/riegler/MapleTA/LineareAlgebra/eingangstest2_4.problem</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span> Richtige Antwort, gut gemacht!]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-adjust"></i></span> Ihre Antwort ist teilweise korrekt.]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa fa-times"></i></span> Falsche Antwort.]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>arccos</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>(</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>lcmdlvar0</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>lcmdlvar1</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>lcmdlvar2</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>algebraic</type>
      <tans>lcmdlvar3</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans5</name>
      <type>algebraic</type>
      <tans>lcmdlvar4</tans>
      <boxsize>20</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>0.2500000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>lcmdlvar0</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text>Überprüfen Sie \( a_2. \)</text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>0.2500000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>lcmdlvar1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text>Überprüfen Sie \( a_3. \)</text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt3</name>
      <value>0.2500000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>lcmdlvar2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt3-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt3-1-F</falseanswernote>
        <falsefeedback format="html">
          <text>Überprüfen Sie \( a_4. \)</text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt4</name>
      <value>0.2500000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>lcmdlvar3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt4-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt4-1-F</falseanswernote>
        <falsefeedback format="html">
          <text>Überprüfen Sie \( a_5. \)</text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt5</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans5</sans>
        <tans>lcmdlvar4</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt5-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt5-1-F</falseanswernote>
        <falsefeedback format="html">
          <text>Überprüfen Sie die geschlossene Formel.</text>
        </falsefeedback>
      </node>
    </prt>
    <qtest>
      <testcase>1</testcase>
      <description></description>
      <testinput>
        <name>ans1</name>
        <value>lcmdlvar0</value>
      </testinput>
      <testinput>
        <name>ans2</name>
        <value>lcmdlvar1</value>
      </testinput>
      <testinput>
        <name>ans3</name>
        <value>lcmdlvar2</value>
      </testinput>
      <testinput>
        <name>ans4</name>
        <value>lcmdlvar3</value>
      </testinput>
      <testinput>
        <name>ans5</name>
        <value>lcmdlvar4</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt1-1-T</expectedanswernote>
      </expected>
      <expected>
        <name>prt2</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt2-1-T</expectedanswernote>
      </expected>
      <expected>
        <name>prt3</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt3-1-T</expectedanswernote>
      </expected>
      <expected>
        <name>prt4</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt4-1-T</expectedanswernote>
      </expected>
      <expected>
        <name>prt5</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt5-1-T</expectedanswernote>
      </expected>
    </qtest>
    <tags>
      <tag><text>lc2mdl</text>
</tag>
      <tag><text>Folgen</text>
</tag>
      <tag><text>Mathematik</text>
</tag>
    </tags>
  </question>

<!-- question: 802438  -->
  <question type="stack">
    <name>
      <text><![CDATA[2.09 Rekursive Folge - erste Glieder und Formel (2n-1)^2 [{"DOMAINUID":"1F81DEA"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[Eine Zahlenfolge \(a_1,a_2,a_3, \ldots \) ist durch die folgende Vorschrift gegeben:
\[ a_1 = 1, \quad a_{n+1} = a_n + 8n \mbox{ für } n \ge 1. \]
Berechnen Sie die Folgenglieder \(a_2\),  \(a_3\),  \(a_4\) und \(a_5\). <br> <br>

\(a_2 = \) [[input:ans1]] [[validation:ans1]][[feedback:prt1]]
 <br>
\(a_3 = \) [[input:ans2]] [[validation:ans2]] [[feedback:prt2]]
 <br>
\(a_4 = \) [[input:ans3]] [[validation:ans3]] [[feedback:prt3]]
 <br>
\(a_5 = \) [[input:ans4]] [[validation:ans4]] [[feedback:prt4]] 
 <br><br>

Welche Vermutung über die Gestalt der Zahlenfolge könnte man an den ersten fünf Folgengliedern ablesen? (Geben Sie also einen Ausdruck an, der \( a_n\) allein in Abhängigkeit von \( n\) beschreibt, also einen sogenannten geschlossenen Ausdruck.)<br><br>

\(a_n = \)[[input:ans5]] [[validation:ans5]] [[feedback:prt5]]]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>2.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2020120600</text>
    </stackversion>
    <questionvariables>
      <text>/* authors: Frauke Sprengel, Hs Hannover, Peter Riegler, Ostfalia */
lcmdlvar0: 9;
lcmdlvar1: 25;
lcmdlvar2: 49;
lcmdlvar3: 81;
lcmdlvar4: ((2*n-1)^2);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>lc2mdl-converter_2020-01-20_15-20-44, This question is based on the LON-CAPA problem /res/fhwf/riegler/MapleTA/LineareAlgebra/eingangstest2_4.problem</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span> Richtige Antwort, gut gemacht!]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-adjust"></i></span> Ihre Antwort ist teilweise korrekt.]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa fa-times"></i></span> Falsche Antwort.]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>arccos</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>(</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>lcmdlvar0</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>lcmdlvar1</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>lcmdlvar2</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>algebraic</type>
      <tans>lcmdlvar3</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans5</name>
      <type>algebraic</type>
      <tans>lcmdlvar4</tans>
      <boxsize>20</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>0.2500000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>lcmdlvar0</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text>Überprüfen Sie \( a_2. \)</text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>0.2500000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>lcmdlvar1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text>Überprüfen Sie \( a_3. \)</text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt3</name>
      <value>0.2500000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>lcmdlvar2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt3-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt3-1-F</falseanswernote>
        <falsefeedback format="html">
          <text>Überprüfen Sie \( a_4. \)</text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt4</name>
      <value>0.2500000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>lcmdlvar3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt4-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt4-1-F</falseanswernote>
        <falsefeedback format="html">
          <text>Überprüfen Sie \( a_5. \)</text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt5</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans5</sans>
        <tans>lcmdlvar4</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt5-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt5-1-F</falseanswernote>
        <falsefeedback format="html">
          <text>Überprüfen Sie die geschlossene Formel.</text>
        </falsefeedback>
      </node>
    </prt>
    <qtest>
      <testcase>1</testcase>
      <description></description>
      <testinput>
        <name>ans1</name>
        <value>lcmdlvar0</value>
      </testinput>
      <testinput>
        <name>ans2</name>
        <value>lcmdlvar1</value>
      </testinput>
      <testinput>
        <name>ans3</name>
        <value>lcmdlvar2</value>
      </testinput>
      <testinput>
        <name>ans4</name>
        <value>lcmdlvar3</value>
      </testinput>
      <testinput>
        <name>ans5</name>
        <value>lcmdlvar4</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt1-1-T</expectedanswernote>
      </expected>
      <expected>
        <name>prt2</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt2-1-T</expectedanswernote>
      </expected>
      <expected>
        <name>prt3</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt3-1-T</expectedanswernote>
      </expected>
      <expected>
        <name>prt4</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt4-1-T</expectedanswernote>
      </expected>
      <expected>
        <name>prt5</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt5-1-T</expectedanswernote>
      </expected>
    </qtest>
    <tags>
      <tag><text>lc2mdl</text>
</tag>
      <tag><text>Folgen</text>
</tag>
      <tag><text>Mathematik</text>
</tag>
    </tags>
  </question>

<!-- question: 802435  -->
  <question type="stack">
    <name>
      <text><![CDATA[2.10 Rekursive Folge - erste Glieder und Formel n^2 [{"DOMAINUID":"20495A5"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Eine Zahlenfolge \( a_1, a_2, a_3, \ldots \) ist durch folgende Vorschrift gegeben:</p>
<p>\[ a_1 = 1, \qquad a_n = a_{n-1} +2n -1 \ \mbox{ für } n \ge 2. \]</p>
<p>Berechnen Sie die Folgenglieder \( a_2, a_3, a_4, a_5 \) !</p>
<p>\( a_2 = \)&nbsp;[[input:ans1]]&nbsp;[[validation:ans1]]</p>
<p>\( a_3 = \)&nbsp;[[input:ans2]] [[validation:ans2]]</p>
<p>\( a_4 = \)&nbsp;[[input:ans3]] [[validation:ans3]]</p>
<p>\( a_5 = \)&nbsp;[[input:ans4]] [[validation:ans4]]<span style="font-size: 1rem;">[[feedback:prt1]]</span></p>
<p>Die Werte der ersten Folgenglieder lassen vermuten, dass folgende - nur von \( n \) abhängende Formel für das \(n\)-te Folgenglied \( a_n \) gilt:</p>
<p>\( a_n = \) [[input:ans5]] [[validation:ans5]]<span style="font-size: 1rem;">[[feedback:prt2]]</span></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>2.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2020120600</text>
    </stackversion>
    <questionvariables>
      <text>/* author: Frauke Sprengel, Hs Hannover */
a : n^2;
a2 : subst(2,n,a);
a3 : subst(3,n,a);
a4 : subst(4,n,a);
a5 : subst(5,n,a);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text></text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span>Richtige Antwort, gut gemacht!]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-adjust"></i></span>Ihre Antwort ist teilweise korrekt.]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa fa-times"></i></span>Falsche Antwort.]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>(</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>a2</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>a3</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>a4</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>algebraic</type>
      <tans>a5</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans5</name>
      <type>algebraic</type>
      <tans>a</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>a2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.2500000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Überprüfen Sie \( a_2 \).<br></p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>a3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.2500000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Überprüfen Sie \( a_3 \).<br></p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>a4</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.2500000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>3</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>3</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Überprüfen Sie \( a_4 \).</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>a5</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.2500000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-4-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-4-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Überprüfen Sie \( a_5 \).<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans5</sans>
        <tans>a</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Hier gilt leider nicht allgemein \( a_n = {@ans5@} \)</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <qtest>
      <testcase>1</testcase>
      <description></description>
      <testinput>
        <name>ans1</name>
        <value>a2</value>
      </testinput>
      <testinput>
        <name>ans2</name>
        <value>a3</value>
      </testinput>
      <testinput>
        <name>ans3</name>
        <value>a4</value>
      </testinput>
      <testinput>
        <name>ans4</name>
        <value>a5</value>
      </testinput>
      <testinput>
        <name>ans5</name>
        <value>a</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt1-4-T</expectedanswernote>
      </expected>
      <expected>
        <name>prt2</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt2-1-T</expectedanswernote>
      </expected>
    </qtest>
    <tags>
      <tag><text>Folgen</text>
</tag>
      <tag><text>Mathematik</text>
</tag>
    </tags>
  </question>

<!-- question: 802437  -->
  <question type="stack">
    <name>
      <text><![CDATA[2.10 Rekursive Folge - erste Glieder und Formel n^2 [{"DOMAINUID":"20495A5"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Eine Zahlenfolge \( a_1, a_2, a_3, \ldots \) ist durch folgende Vorschrift gegeben:</p>
<p>\[ a_1 = 1, \qquad a_n = a_{n-1} +2n -1 \ \mbox{ für } n \ge 2. \]</p>
<p>Berechnen Sie die Folgenglieder \( a_2, a_3, a_4, a_5 \) !</p>
<p>\( a_2 = \)&nbsp;[[input:ans1]]&nbsp;[[validation:ans1]]</p>
<p>\( a_3 = \)&nbsp;[[input:ans2]] [[validation:ans2]]</p>
<p>\( a_4 = \)&nbsp;[[input:ans3]] [[validation:ans3]]</p>
<p>\( a_5 = \)&nbsp;[[input:ans4]] [[validation:ans4]]<span style="font-size: 1rem;">[[feedback:prt1]]</span></p>
<p>Die Werte der ersten Folgenglieder lassen vermuten, dass folgende - nur von \( n \) abhängende Formel für das \(n\)-te Folgenglied \( a_n \) gilt:</p>
<p>\( a_n = \) [[input:ans5]] [[validation:ans5]]<span style="font-size: 1rem;">[[feedback:prt2]]</span></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>2.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2020120600</text>
    </stackversion>
    <questionvariables>
      <text>/* author: Frauke Sprengel, Hs Hannover */
a : n^2;
a2 : subst(2,n,a);
a3 : subst(3,n,a);
a4 : subst(4,n,a);
a5 : subst(5,n,a);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text></text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span>Richtige Antwort, gut gemacht!]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-adjust"></i></span>Ihre Antwort ist teilweise korrekt.]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa fa-times"></i></span>Falsche Antwort.]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>(</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>a2</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>a3</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>a4</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>algebraic</type>
      <tans>a5</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans5</name>
      <type>algebraic</type>
      <tans>a</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>a2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.2500000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Überprüfen Sie \( a_2 \).<br></p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>a3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.2500000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Überprüfen Sie \( a_3 \).<br></p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>a4</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.2500000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>3</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>3</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Überprüfen Sie \( a_4 \).</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>a5</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.2500000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-4-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-4-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Überprüfen Sie \( a_5 \).<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans5</sans>
        <tans>a</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Hier gilt leider nicht allgemein \( a_n = {@ans5@} \)</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <qtest>
      <testcase>1</testcase>
      <description></description>
      <testinput>
        <name>ans1</name>
        <value>a2</value>
      </testinput>
      <testinput>
        <name>ans2</name>
        <value>a3</value>
      </testinput>
      <testinput>
        <name>ans3</name>
        <value>a4</value>
      </testinput>
      <testinput>
        <name>ans4</name>
        <value>a5</value>
      </testinput>
      <testinput>
        <name>ans5</name>
        <value>a</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt1-4-T</expectedanswernote>
      </expected>
      <expected>
        <name>prt2</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt2-1-T</expectedanswernote>
      </expected>
    </qtest>
    <tags>
      <tag><text>Folgen</text>
</tag>
      <tag><text>Mathematik</text>
</tag>
    </tags>
  </question>

<!-- question: 802439  -->
  <question type="stack">
    <name>
      <text><![CDATA[4.4 LGS: Schwimmbecken [{"DOMAINUID":"706A04A"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Ein Schwimmbecken kann durch \(3\) Leitungen gefüllt werden. Um das Schwimmbecken zu füllen, benötigen die beiden ersten Leitungen zusammen @v1@ Minuten. Die erste und die dritte Leitung brauchen zusammen @v2@ Minuten. Die zweite und die dritte Leitung schaffen es zusammen in @v3@ Minuten.</p>
<p>Wie lange braucht jede Leitung um den Schwimmbecken alleine zum Füllen?</p>
<p>1. Leitung braucht: [[input:ans1]]&nbsp;\(min\) [[validation:ans1]]</p>
<p>2. Leitung braucht: [[input:ans2]]&nbsp;\(min\) [[validation:ans2]]</p>
<p>3. Leitung braucht: [[input:ans3]]&nbsp;\(min\) [[validation:ans3]]</p>
<p>[[feedback:prt1]]</p>
<p>Nach wieviel Minuten ist das Becken gefüllt, wenn alle drei Leitungen zusammen benutzt werden?</p>
<p>Nach [[input:ans4]]&nbsp;\(min\) [[validation:ans4]]</p>
<p>[[feedback:prt2]]</p>
<p><strong>Hinweis:</strong> Runden Sie die Antworten bei Bedarf auf die ganze Minute.</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text>v1: rand([15,30,45,60,75,90]);
v2: 4/3*v1;
v3: 2*v1;

gl1: v1*x+v1*y=M;
gl2: v2*x+v2*z=M;
gl3: v3*y+v3*z=M;

loesung: solve([gl1,gl2,gl3],[x,y,z]);

loes1: M/rhs(loesung[1][1]);
loes2: M/rhs(loesung[1][2]);
loes3: M/rhs(loesung[1][3]);

loes4: M/(rhs(loesung[1][1])+rhs(loesung[1][2])+rhs(loesung[1][3]));</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\[{@gl1@}\] \[{@gl2@}\] \[{@gl3@}\] \[Lösung: {@loesung@}\]</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtig!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Die Antwort ist teilweise richtig.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Die Antwort ist leider falsch.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>loes1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>loes2</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>loes3</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>algebraic</type>
      <tans>loes4</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>0</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>{ans1,ans2,ans3}</sans>
        <tans>{loes1,loes2,loes3}</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-0-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-0-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>0</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>NumAbsolute</answertest>
        <sans>ans4</sans>
        <tans>loes4</tans>
        <testoptions>1</testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-0-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-0-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>8937606592</deployedseed>
    <deployedseed>3091188516</deployedseed>
    <deployedseed>1586949795</deployedseed>
    <deployedseed>3094650980</deployedseed>
    <deployedseed>8857929480</deployedseed>
    <deployedseed>8976542548</deployedseed>
    <deployedseed>5098088034</deployedseed>
    <deployedseed>8554085978</deployedseed>
    <deployedseed>4197089601</deployedseed>
    <deployedseed>8782782313</deployedseed>
    <deployedseed>3739597477</deployedseed>
    <deployedseed>7453842458</deployedseed>
    <deployedseed>6202245478</deployedseed>
    <deployedseed>6263335601</deployedseed>
    <deployedseed>5223227952</deployedseed>
    <deployedseed>5577250265</deployedseed>
    <deployedseed>6858865541</deployedseed>
    <deployedseed>6743675385</deployedseed>
  </question>

<!-- question: 802440  -->
  <question type="stack">
    <name>
      <text><![CDATA[Darstellungsmatrix einer Permutation (verschiedene Basen) [{"DOMAINUID":"5F87846"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Sei \(K\) ein Körper und sei \(B=\{b_1,b_2,b_3\}\) eine Basis für \(K^3\).<br>Betrachten Sie die Basis \(C:=\{c_1,c_2,c_3\}\) mit \(c_1:={@vzs11@} b_1\), \(c_2:={@vzs21@} b_1&nbsp; {@vzs22@} b_2\) und \(c_3:={@vzs31@} b_1&nbsp; {@vzs32@} b_2&nbsp; {@vzs33@} b_3\).<br>Weiter sei \(f:K^3\to K^3\) die Identitätsabbildung, d.h. es ist \(f(v)=v\ \forall v \in K^3\).<br></p><p><br></p><p>a) Geben Sie die Darstellungsmatrix von \(f\) bezüglich der Basis \(B\) im Quellraum und der Basis \(C\) im Zielraum an.</p><p>\(A_B^C(f) = \) [[input:ans1]] [[validation:ans1]]</p><p>[[feedback:prt1]]</p><p><br></p><p>b) Geben Sie die Darstellungsmatrix von \(f\) bezüglich der Basis \(C\) im Quellraum und der Basis \(B\) im Zielraum an.<br></p><p>\(A_C^B(f) = \) [[input:ans2]] [[validation:ans2]]<br></p><p>[[feedback:prt2]]<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>3.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[vzi11:rand([1,2]); vzs11:["-"," "][vzi11]; vz11:[-1,1][vzi11];
vzi21:rand([1,2]); vzs21:["-"," "][vzi21]; vz21:[-1,1][vzi21];
vzi22:rand([1,2]); vzs22:["-","+"][vzi22]; vz22:[-1,1][vzi22];
vzi31:rand([1,2]); vzs31:["-"," "][vzi31]; vz31:[-1,1][vzi31];
vzi32:rand([1,2]); vzs32:["-","+"][vzi32]; vz32:[-1,1][vzi32];
vzi33:rand([1,2]); vzs33:["-","+"][vzi33]; vz33:[-1,1][vzi33];
M2:transpose(matrix([vz11,0,0],[vz21,vz22,0],[vz31,vz32,vz33]));
M1:invert(M2);]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text><![CDATA[<br><br>]]></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>{@vz11@},{@vz21@},{@vz22@},{@vz31@},{@vz32@},{@vz33@}</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>matrix</type>
      <tans>M1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords>a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z</forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>2</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>matrix</type>
      <tans>M2</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords>a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z</forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>2</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.5000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>M1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>M2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.5000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Sie haben in Aufgabenteil a) leider die Darstellungsmatrix \(A_C^B(f)\) angegeben.<br></p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.5000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>M2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>M1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.5000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-2-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Sie haben in Aufgabenteil b) leider die Darstellungsmatrix \(A_B^C(f)\) angegeben.<br></p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 802447  -->
  <question type="stack">
    <name>
      <text>Kombinatorik 1</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Am Ende einer Konferenz (... noch vor Corona ...) schüttelten sich \({@n@}\) Teilnehmer pressegerecht die Hände.</p>
<p>Wie viele Schüttelvorgänge gab es?</p>
<p>[[input:ans1]] [[validation:ans1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;"><strong>Lösungsweg:</strong></p><p dir="ltr" style="text-align: left;">\(&nbsp; &nbsp;\dfrac{{@n@}!}{2! \cdot ({@n@}-2)!}=&nbsp;&nbsp;\dfrac{{@n@}!}{2! \cdot {@t@}!}&nbsp; =&nbsp;\dfrac{{@t@}! \cdot {@n1@}\cdot {@n@}}{2! \cdot {@t@}!}&nbsp; =&nbsp; {@ta1@}\)</p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text>n:rand_with_step(10,20,1);
ta1:binomial(n,2);
t:n-2;
n1:n-1;</text>
    </questionvariables>
    <specificfeedback format="html">
      <text><![CDATA[<p>[[feedback:prt1]]</p>]]></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>{@n@}</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span>&nbsp;&nbsp;<strong>Richtige Antwort, gut gemacht!</strong>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-adjust"></i></span>&nbsp;&nbsp;<strong>Ihre Antwort ist teilweise korrekt.</strong>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa fa-times"></i></span>&nbsp;&nbsp;<strong>Falsche Antwort.</strong>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>numerical</type>
      <tans>ta1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>NumAbsolute</answertest>
        <sans>ans1</sans>
        <tans>ta1</tans>
        <testoptions>.01</testoptions>
        <quiet>1</quiet>
        <truescoremode>+</truescoremode>
        <truescore>1</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-0-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>+</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-0-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>praxiserprobt</text>
</tag>
      <tag><text>TE:1:Wahrscheinlichkeitsrechnung</text>
</tag>
      <tag><text>TE:2:Kombinatorik</text>
</tag>
      <tag><text>TE:3:Summen Produkte</text>
</tag>
      <tag><text>src:F04-IVW</text>
</tag>
      <tag><text>Bloom:3</text>
</tag>
      <tag><text>Maier:1:3</text>
</tag>
      <tag><text>Maier:2:2</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:2</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:importIliasGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 802442  -->
  <question type="stack">
    <name>
      <text>Kombinatorik 2</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Wie wahrscheinlich ist es, beim Zahlenlotto "6 aus 49" genau {@n@} Richtige zu haben?</p>
<p>Bitte runden Sie Ihr Ergebnis kaufmännisch auf sechs Dezimalstellen und verwenden Sie einen Punkt als Dezimaltrennzeichen.</p>
<p>[[input:ans1]] [[validation:ans1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2022071300</text>
    </stackversion>
    <questionvariables>
      <text>n:rand_with_step(2,4,1);
ta1:decimalplaces((binomial(6,n)*binomial(43,6-n))/binomial(49,6),6);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text><![CDATA[<p>[[feedback:prt1]]</p>]]></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>{@n@}</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>numerical</type>
      <tans>ta1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>NumAbsolute</answertest>
        <sans>ans1</sans>
        <tans>ta1</tans>
        <testoptions>.000005</testoptions>
        <quiet>1</quiet>
        <truescoremode>+</truescoremode>
        <truescore>1</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-0-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>+</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-0-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>TE:1:Wahrscheinlichkeitsrechnung</text>
</tag>
      <tag><text>TE:2:Kombinatorik</text>
</tag>
      <tag><text>TE:3:Wahrscheinlichkeiten</text>
</tag>
      <tag><text>src:F04-IVW</text>
</tag>
      <tag><text>Bloom:3</text>
</tag>
      <tag><text>Maier:1:3</text>
</tag>
      <tag><text>Maier:2:2</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:2</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>praxiserprobt</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:importIliasGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 0  -->
  <question type="category">
    <category>
      <text>$course$/top/Komplexe zahlen</text>
    </category>
    <info format="html">
      <text></text>
    </info>
    <idnumber></idnumber>
  </question>

<!-- question: 807428  -->
  <question type="multichoice">
    <name>
      <text>Komplexe Zahlen: Polarform, Hauptwert</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<h4><span style="font-size: 14px; font-weight: normal;">Sei $$z^5=1+i.$$</span><br></h4><p>Geben Sie den Hauptwert von \(z\) an.</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<h4 style="text-align: left;"><strong>Lösung</strong></h4><p><br></p><p>\(z^5=1+i\)</p><p>Für die komplexe Zahl \(1+i\) gilt</p><p>\(r=\sqrt{1^2+1^2}=\sqrt{2}\)&nbsp; &nbsp;und&nbsp; &nbsp;\(\varphi=\arctan\left(\frac{1}{1}\right)=\frac{\pi}{4}\).</p><p><br></p><p>Der Hauptwert von \(z\) ist gegeben durch&nbsp; &nbsp;\(z_0=\sqrt[n]{r}e^{i\frac{\varphi}{n}}\)</p><p>Hier ist \(n=5\), also</p><p>\(z_0=\sqrt[5]{\sqrt{2}}e^{\frac{i\frac{\pi}{4}}{5}}=\sqrt[10]{2}e^{i\frac{\pi}{20}}\)<br></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;">Die Antwort ist richtig.</p>]]></text>
    </correctfeedback>
    <partiallycorrectfeedback format="moodle_auto_format">
      <text>1</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;">Die Antwort ist falsch.</p>]]></text>
    </incorrectfeedback>
    <answer fraction="100" format="moodle_auto_format">
      <text>\(\sqrt[10]{2}e^{i\frac{\pi}{20}}\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>\(\sqrt[10]{2}e^{-i\frac{\pi}{20}}\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>\(\sqrt[5]{2}e^{i\frac{\pi}{20}}\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>\(\sqrt[5]{2}e^{-i\frac{\pi}{20}}\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>TE:1:Komplexe Zahlen</text>
</tag>
      <tag><text>TE:2:Gleichungen</text>
</tag>
      <tag><text>te:3:Lösungsmenge</text>
</tag>
      <tag><text>te:3:polarform</text>
</tag>
      <tag><text>src:F07-INT</text>
</tag>
      <tag><text>Bloom:3</text>
</tag>
      <tag><text>Maier:1:2</text>
</tag>
      <tag><text>Maier:2:2</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>praxiserprobt</text>
</tag>
      <tag><text>ILIAS-Import-Error</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:TaggingGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 806963  -->
  <question type="stack">
    <name>
      <text><![CDATA[5.1b  LGS 3x3, Eine Nullzeile [{"DOMAINUID":"21EADBF"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Bestimmen Sie alle Lösungen des Gleichungssystems:</p>
<p>\[ \begin{matrix}  @A[1][1]*x1@ &amp; @pm12@@A[1][2]*x2@ &amp; @pm13@@A[1][3]*x3@ &amp; = &amp; @A[1][4]@ \\  @A[2][1]*x1@ &amp; @pm22@@A[2][2]*x2@ &amp; @pm23@@A[2][3]*x3@ &amp; = &amp; @A[2][4]@ \\  @A[3][1]*x1@ &amp; @pm32@@A[3][2]*x2@ &amp; @pm33@@A[3][3]*x3@ &amp; = &amp; @A[3][4]@ \\ \end{matrix} \]</p>
<p> </p>
<p><strong>Hinweise: </strong></p>
<ul>
<li>Geben Sie die Lösungen in der Form \([x_1, x_2, x_3]\) ein. Bitte die eckigen Klammern nicht vergessen.</li>
<li>Wenn es keine Lösung gibt, dann geben Sie bitte [ ] ein.</li>
</ul>
<p> </p>
<p>\(L=\) [[input:ans1]] [[validation:ans1]] [[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[a11: rand_with_prohib(-5,5,[0]);
a12: rand_with_prohib(-5,5,[0]);
a13: rand_with_prohib(-5,5,[0]);

a21: 0;
a22: rand_with_prohib(-5,5,[0]);
a23: rand_with_prohib(-5,5,[0]);

a31: 0;
a32: 0;
a33: 0;


b1: rand_with_prohib(-5,5,[0]);
b2: rand_with_prohib(-5,5,[0]);
b3: 0;

A1: matrix([a11,a12,a13,b1],[a21,a22,a23,b2],[a31,a32,a33,b3]);

s1: rand_with_prohib(-2,2,[0]);
A2: rowop(A1,3,1,s1);

s2: rand_with_prohib(-2,2,[0]);
A3: rowop(A2,3,2,s2);

s3: rand_with_prohib(-2,2,[0]);
A: rowop(A3,2,1,s3);

matA: submatrix(A,4);
vektorB: col(A,4);

pm12: if A[1][2]>0 then "+" else " ";
pm13: if A[1][3]>0 then "+" else " ";
pm22: if A[2][2]>0 then "+" else " ";
pm23: if A[2][3]>0 then "+" else " ";
pm32: if A[3][2]>0 then "+" else " ";
pm33: if A[3][3]>0 then "+" else " ";

gl1: A[1][1]*x1+A[1][2]*x2+A[1][3]*x3=A[1][4];
gl2: A[2][1]*x1+A[2][2]*x2+A[2][3]*x3=A[2][4];
gl3: A[3][1]*x1+A[3][2]*x2+A[3][3]*x3=A[3][4];
ls: solve([gl1,gl2,gl3],[x1,x2,x3]);

loes: expand( [ rhs(ls[1][1]) , rhs(ls[1][2]), rhs(ls[1][3]) ] );]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\[@A@\]
Lösung: \(@loes@\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>loes</tans>
      <boxsize>40</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>ansm: if length(ans1)=3 then matrix([ans1[1]],[ans1[2]],[ans1[3]]);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>matA.ansm</sans>
        <tans>vektorB</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>length(listofvars(ans1))</sans>
        <tans>0</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Ihre Antwort \(@ans1@\) ist eine spezifische Lösung des Gleichungssystems.</p>
<p>Gefragt wird nach der allgemeinen Lösung.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>1.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>1788287284</deployedseed>
    <deployedseed>576492072</deployedseed>
    <deployedseed>1885153380</deployedseed>
    <deployedseed>408123529</deployedseed>
    <deployedseed>1408428442</deployedseed>
    <deployedseed>1476357967</deployedseed>
    <deployedseed>1268122836</deployedseed>
    <deployedseed>1371991493</deployedseed>
    <deployedseed>655297154</deployedseed>
    <deployedseed>1519211889</deployedseed>
    <deployedseed>186710872</deployedseed>
    <deployedseed>1281589498</deployedseed>
    <deployedseed>525493515</deployedseed>
    <deployedseed>1563792141</deployedseed>
    <deployedseed>465380207</deployedseed>
    <deployedseed>1356128424</deployedseed>
    <deployedseed>801802172</deployedseed>
    <deployedseed>892089591</deployedseed>
    <deployedseed>2078093997</deployedseed>
    <deployedseed>1705384004</deployedseed>
    <deployedseed>81436082</deployedseed>
    <deployedseed>788667439</deployedseed>
    <deployedseed>1236107602</deployedseed>
    <deployedseed>676839239</deployedseed>
    <deployedseed>1510060679</deployedseed>
    <deployedseed>140957626</deployedseed>
    <deployedseed>874775886</deployedseed>
    <deployedseed>621743218</deployedseed>
    <deployedseed>1384631502</deployedseed>
    <deployedseed>1829741886</deployedseed>
    <deployedseed>1394027782</deployedseed>
    <deployedseed>385779974</deployedseed>
    <deployedseed>249073495</deployedseed>
    <deployedseed>446650460</deployedseed>
    <deployedseed>1245254111</deployedseed>
    <deployedseed>977125031</deployedseed>
    <deployedseed>1721048361</deployedseed>
    <deployedseed>462931861</deployedseed>
    <deployedseed>310873125</deployedseed>
    <deployedseed>708647801</deployedseed>
    <deployedseed>370613688</deployedseed>
    <deployedseed>2045424244</deployedseed>
    <deployedseed>678855505</deployedseed>
    <deployedseed>256337017</deployedseed>
    <deployedseed>844753091</deployedseed>
    <deployedseed>860645529</deployedseed>
    <deployedseed>1786446724</deployedseed>
    <deployedseed>371901984</deployedseed>
    <deployedseed>1192076959</deployedseed>
    <deployedseed>761547006</deployedseed>
    <deployedseed>1824188025</deployedseed>
    <deployedseed>83119314</deployedseed>
    <deployedseed>681107344</deployedseed>
    <deployedseed>148097582</deployedseed>
    <deployedseed>1336833604</deployedseed>
    <deployedseed>1822804994</deployedseed>
    <deployedseed>369822542</deployedseed>
    <deployedseed>112177314</deployedseed>
    <deployedseed>1927058873</deployedseed>
    <deployedseed>1899219269</deployedseed>
    <deployedseed>968769161</deployedseed>
    <deployedseed>815074938</deployedseed>
  </question>

<!-- question: 806968  -->
  <question type="stack">
    <name>
      <text><![CDATA[5.1b  LGS 3x3, Eine Nullzeile [{"DOMAINUID":"21EADBF"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Bestimmen Sie alle Lösungen des Gleichungssystems:</p>
<p>\[ \begin{matrix}  @A[1][1]*x1@ &amp; @pm12@@A[1][2]*x2@ &amp; @pm13@@A[1][3]*x3@ &amp; = &amp; @A[1][4]@ \\  @A[2][1]*x1@ &amp; @pm22@@A[2][2]*x2@ &amp; @pm23@@A[2][3]*x3@ &amp; = &amp; @A[2][4]@ \\  @A[3][1]*x1@ &amp; @pm32@@A[3][2]*x2@ &amp; @pm33@@A[3][3]*x3@ &amp; = &amp; @A[3][4]@ \\ \end{matrix} \]</p>
<p> </p>
<p><strong>Hinweise: </strong></p>
<ul>
<li>Geben Sie die Lösungen in der Form \([x_1, x_2, x_3]\) ein. Bitte die eckigen Klammern nicht vergessen.</li>
<li>Wenn es keine Lösung gibt, dann geben Sie bitte [ ] ein.</li>
</ul>
<p> </p>
<p>\(L=\) [[input:ans1]] [[validation:ans1]] [[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[a11: rand_with_prohib(-5,5,[0]);
a12: rand_with_prohib(-5,5,[0]);
a13: rand_with_prohib(-5,5,[0]);

a21: 0;
a22: rand_with_prohib(-5,5,[0]);
a23: rand_with_prohib(-5,5,[0]);

a31: 0;
a32: 0;
a33: 0;


b1: rand_with_prohib(-5,5,[0]);
b2: rand_with_prohib(-5,5,[0]);
b3: 0;

A1: matrix([a11,a12,a13,b1],[a21,a22,a23,b2],[a31,a32,a33,b3]);

s1: rand_with_prohib(-2,2,[0]);
A2: rowop(A1,3,1,s1);

s2: rand_with_prohib(-2,2,[0]);
A3: rowop(A2,3,2,s2);

s3: rand_with_prohib(-2,2,[0]);
A: rowop(A3,2,1,s3);

matA: submatrix(A,4);
vektorB: col(A,4);

pm12: if A[1][2]>0 then "+" else " ";
pm13: if A[1][3]>0 then "+" else " ";
pm22: if A[2][2]>0 then "+" else " ";
pm23: if A[2][3]>0 then "+" else " ";
pm32: if A[3][2]>0 then "+" else " ";
pm33: if A[3][3]>0 then "+" else " ";

gl1: A[1][1]*x1+A[1][2]*x2+A[1][3]*x3=A[1][4];
gl2: A[2][1]*x1+A[2][2]*x2+A[2][3]*x3=A[2][4];
gl3: A[3][1]*x1+A[3][2]*x2+A[3][3]*x3=A[3][4];
ls: solve([gl1,gl2,gl3],[x1,x2,x3]);

loes: expand( [ rhs(ls[1][1]) , rhs(ls[1][2]), rhs(ls[1][3]) ] );]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\[@A@\]
Lösung: \(@loes@\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>loes</tans>
      <boxsize>40</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>ansm: if length(ans1)=3 then matrix([ans1[1]],[ans1[2]],[ans1[3]]);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>matA.ansm</sans>
        <tans>vektorB</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>length(listofvars(ans1))</sans>
        <tans>0</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Ihre Antwort \(@ans1@\) ist eine spezifische Lösung des Gleichungssystems.</p>
<p>Gefragt wird nach der allgemeinen Lösung.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>1.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>1788287284</deployedseed>
    <deployedseed>576492072</deployedseed>
    <deployedseed>1885153380</deployedseed>
    <deployedseed>408123529</deployedseed>
    <deployedseed>1408428442</deployedseed>
    <deployedseed>1476357967</deployedseed>
    <deployedseed>1268122836</deployedseed>
    <deployedseed>1371991493</deployedseed>
    <deployedseed>655297154</deployedseed>
    <deployedseed>1519211889</deployedseed>
    <deployedseed>186710872</deployedseed>
    <deployedseed>1281589498</deployedseed>
    <deployedseed>525493515</deployedseed>
    <deployedseed>1563792141</deployedseed>
    <deployedseed>465380207</deployedseed>
    <deployedseed>1356128424</deployedseed>
    <deployedseed>801802172</deployedseed>
    <deployedseed>892089591</deployedseed>
    <deployedseed>2078093997</deployedseed>
    <deployedseed>1705384004</deployedseed>
    <deployedseed>81436082</deployedseed>
    <deployedseed>788667439</deployedseed>
    <deployedseed>1236107602</deployedseed>
    <deployedseed>676839239</deployedseed>
    <deployedseed>1510060679</deployedseed>
    <deployedseed>140957626</deployedseed>
    <deployedseed>874775886</deployedseed>
    <deployedseed>621743218</deployedseed>
    <deployedseed>1384631502</deployedseed>
    <deployedseed>1829741886</deployedseed>
    <deployedseed>1394027782</deployedseed>
    <deployedseed>385779974</deployedseed>
    <deployedseed>249073495</deployedseed>
    <deployedseed>446650460</deployedseed>
    <deployedseed>1245254111</deployedseed>
    <deployedseed>977125031</deployedseed>
    <deployedseed>1721048361</deployedseed>
    <deployedseed>462931861</deployedseed>
    <deployedseed>310873125</deployedseed>
    <deployedseed>708647801</deployedseed>
    <deployedseed>370613688</deployedseed>
    <deployedseed>2045424244</deployedseed>
    <deployedseed>678855505</deployedseed>
    <deployedseed>256337017</deployedseed>
    <deployedseed>844753091</deployedseed>
    <deployedseed>860645529</deployedseed>
    <deployedseed>1786446724</deployedseed>
    <deployedseed>371901984</deployedseed>
    <deployedseed>1192076959</deployedseed>
    <deployedseed>761547006</deployedseed>
    <deployedseed>1824188025</deployedseed>
    <deployedseed>83119314</deployedseed>
    <deployedseed>681107344</deployedseed>
    <deployedseed>148097582</deployedseed>
    <deployedseed>1336833604</deployedseed>
    <deployedseed>1822804994</deployedseed>
    <deployedseed>369822542</deployedseed>
    <deployedseed>112177314</deployedseed>
    <deployedseed>1927058873</deployedseed>
    <deployedseed>1899219269</deployedseed>
    <deployedseed>968769161</deployedseed>
    <deployedseed>815074938</deployedseed>
  </question>

<!-- question: 806973  -->
  <question type="stack">
    <name>
      <text><![CDATA[5.1b  LGS 3x3, Eine Nullzeile [{"DOMAINUID":"21EADBF"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Bestimmen Sie alle Lösungen des Gleichungssystems:</p>
<p>\[ \begin{matrix}  @A[1][1]*x1@ &amp; @pm12@@A[1][2]*x2@ &amp; @pm13@@A[1][3]*x3@ &amp; = &amp; @A[1][4]@ \\  @A[2][1]*x1@ &amp; @pm22@@A[2][2]*x2@ &amp; @pm23@@A[2][3]*x3@ &amp; = &amp; @A[2][4]@ \\  @A[3][1]*x1@ &amp; @pm32@@A[3][2]*x2@ &amp; @pm33@@A[3][3]*x3@ &amp; = &amp; @A[3][4]@ \\ \end{matrix} \]</p>
<p> </p>
<p><strong>Hinweise: </strong></p>
<ul>
<li>Geben Sie die Lösungen in der Form \([x_1, x_2, x_3]\) ein. Bitte die eckigen Klammern nicht vergessen.</li>
<li>Wenn es keine Lösung gibt, dann geben Sie bitte [ ] ein.</li>
</ul>
<p> </p>
<p>\(L=\) [[input:ans1]] [[validation:ans1]] [[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[a11: rand_with_prohib(-5,5,[0]);
a12: rand_with_prohib(-5,5,[0]);
a13: rand_with_prohib(-5,5,[0]);

a21: 0;
a22: rand_with_prohib(-5,5,[0]);
a23: rand_with_prohib(-5,5,[0]);

a31: 0;
a32: 0;
a33: 0;


b1: rand_with_prohib(-5,5,[0]);
b2: rand_with_prohib(-5,5,[0]);
b3: 0;

A1: matrix([a11,a12,a13,b1],[a21,a22,a23,b2],[a31,a32,a33,b3]);

s1: rand_with_prohib(-2,2,[0]);
A2: rowop(A1,3,1,s1);

s2: rand_with_prohib(-2,2,[0]);
A3: rowop(A2,3,2,s2);

s3: rand_with_prohib(-2,2,[0]);
A: rowop(A3,2,1,s3);

matA: submatrix(A,4);
vektorB: col(A,4);

pm12: if A[1][2]>0 then "+" else " ";
pm13: if A[1][3]>0 then "+" else " ";
pm22: if A[2][2]>0 then "+" else " ";
pm23: if A[2][3]>0 then "+" else " ";
pm32: if A[3][2]>0 then "+" else " ";
pm33: if A[3][3]>0 then "+" else " ";

gl1: A[1][1]*x1+A[1][2]*x2+A[1][3]*x3=A[1][4];
gl2: A[2][1]*x1+A[2][2]*x2+A[2][3]*x3=A[2][4];
gl3: A[3][1]*x1+A[3][2]*x2+A[3][3]*x3=A[3][4];
ls: solve([gl1,gl2,gl3],[x1,x2,x3]);

loes: expand( [ rhs(ls[1][1]) , rhs(ls[1][2]), rhs(ls[1][3]) ] );]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\[@A@\]
Lösung: \(@loes@\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>loes</tans>
      <boxsize>40</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>ansm: if length(ans1)=3 then matrix([ans1[1]],[ans1[2]],[ans1[3]]);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>matA.ansm</sans>
        <tans>vektorB</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>length(listofvars(ans1))</sans>
        <tans>0</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Ihre Antwort \(@ans1@\) ist eine spezifische Lösung des Gleichungssystems.</p>
<p>Gefragt wird nach der allgemeinen Lösung.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>1.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>1788287284</deployedseed>
    <deployedseed>576492072</deployedseed>
    <deployedseed>1885153380</deployedseed>
    <deployedseed>408123529</deployedseed>
    <deployedseed>1408428442</deployedseed>
    <deployedseed>1476357967</deployedseed>
    <deployedseed>1268122836</deployedseed>
    <deployedseed>1371991493</deployedseed>
    <deployedseed>655297154</deployedseed>
    <deployedseed>1519211889</deployedseed>
    <deployedseed>186710872</deployedseed>
    <deployedseed>1281589498</deployedseed>
    <deployedseed>525493515</deployedseed>
    <deployedseed>1563792141</deployedseed>
    <deployedseed>465380207</deployedseed>
    <deployedseed>1356128424</deployedseed>
    <deployedseed>801802172</deployedseed>
    <deployedseed>892089591</deployedseed>
    <deployedseed>2078093997</deployedseed>
    <deployedseed>1705384004</deployedseed>
    <deployedseed>81436082</deployedseed>
    <deployedseed>788667439</deployedseed>
    <deployedseed>1236107602</deployedseed>
    <deployedseed>676839239</deployedseed>
    <deployedseed>1510060679</deployedseed>
    <deployedseed>140957626</deployedseed>
    <deployedseed>874775886</deployedseed>
    <deployedseed>621743218</deployedseed>
    <deployedseed>1384631502</deployedseed>
    <deployedseed>1829741886</deployedseed>
    <deployedseed>1394027782</deployedseed>
    <deployedseed>385779974</deployedseed>
    <deployedseed>249073495</deployedseed>
    <deployedseed>446650460</deployedseed>
    <deployedseed>1245254111</deployedseed>
    <deployedseed>977125031</deployedseed>
    <deployedseed>1721048361</deployedseed>
    <deployedseed>462931861</deployedseed>
    <deployedseed>310873125</deployedseed>
    <deployedseed>708647801</deployedseed>
    <deployedseed>370613688</deployedseed>
    <deployedseed>2045424244</deployedseed>
    <deployedseed>678855505</deployedseed>
    <deployedseed>256337017</deployedseed>
    <deployedseed>844753091</deployedseed>
    <deployedseed>860645529</deployedseed>
    <deployedseed>1786446724</deployedseed>
    <deployedseed>371901984</deployedseed>
    <deployedseed>1192076959</deployedseed>
    <deployedseed>761547006</deployedseed>
    <deployedseed>1824188025</deployedseed>
    <deployedseed>83119314</deployedseed>
    <deployedseed>681107344</deployedseed>
    <deployedseed>148097582</deployedseed>
    <deployedseed>1336833604</deployedseed>
    <deployedseed>1822804994</deployedseed>
    <deployedseed>369822542</deployedseed>
    <deployedseed>112177314</deployedseed>
    <deployedseed>1927058873</deployedseed>
    <deployedseed>1899219269</deployedseed>
    <deployedseed>968769161</deployedseed>
    <deployedseed>815074938</deployedseed>
  </question>

<!-- question: 806988  -->
  <question type="stack">
    <name>
      <text><![CDATA[5.1b  LGS 3x3, Eine Nullzeile [{"DOMAINUID":"21EADBF"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Bestimmen Sie alle Lösungen des Gleichungssystems:</p>
<p>\[ \begin{matrix}  @A[1][1]*x1@ &amp; @pm12@@A[1][2]*x2@ &amp; @pm13@@A[1][3]*x3@ &amp; = &amp; @A[1][4]@ \\  @A[2][1]*x1@ &amp; @pm22@@A[2][2]*x2@ &amp; @pm23@@A[2][3]*x3@ &amp; = &amp; @A[2][4]@ \\  @A[3][1]*x1@ &amp; @pm32@@A[3][2]*x2@ &amp; @pm33@@A[3][3]*x3@ &amp; = &amp; @A[3][4]@ \\ \end{matrix} \]</p>
<p> </p>
<p><strong>Hinweise: </strong></p>
<ul>
<li>Geben Sie die Lösungen in der Form \([x_1, x_2, x_3]\) ein. Bitte die eckigen Klammern nicht vergessen.</li>
<li>Wenn es keine Lösung gibt, dann geben Sie bitte [ ] ein.</li>
</ul>
<p> </p>
<p>\(L=\) [[input:ans1]] [[validation:ans1]] [[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[a11: rand_with_prohib(-5,5,[0]);
a12: rand_with_prohib(-5,5,[0]);
a13: rand_with_prohib(-5,5,[0]);

a21: 0;
a22: rand_with_prohib(-5,5,[0]);
a23: rand_with_prohib(-5,5,[0]);

a31: 0;
a32: 0;
a33: 0;


b1: rand_with_prohib(-5,5,[0]);
b2: rand_with_prohib(-5,5,[0]);
b3: 0;

A1: matrix([a11,a12,a13,b1],[a21,a22,a23,b2],[a31,a32,a33,b3]);

s1: rand_with_prohib(-2,2,[0]);
A2: rowop(A1,3,1,s1);

s2: rand_with_prohib(-2,2,[0]);
A3: rowop(A2,3,2,s2);

s3: rand_with_prohib(-2,2,[0]);
A: rowop(A3,2,1,s3);

matA: submatrix(A,4);
vektorB: col(A,4);

pm12: if A[1][2]>0 then "+" else " ";
pm13: if A[1][3]>0 then "+" else " ";
pm22: if A[2][2]>0 then "+" else " ";
pm23: if A[2][3]>0 then "+" else " ";
pm32: if A[3][2]>0 then "+" else " ";
pm33: if A[3][3]>0 then "+" else " ";

gl1: A[1][1]*x1+A[1][2]*x2+A[1][3]*x3=A[1][4];
gl2: A[2][1]*x1+A[2][2]*x2+A[2][3]*x3=A[2][4];
gl3: A[3][1]*x1+A[3][2]*x2+A[3][3]*x3=A[3][4];
ls: solve([gl1,gl2,gl3],[x1,x2,x3]);

loes: expand( [ rhs(ls[1][1]) , rhs(ls[1][2]), rhs(ls[1][3]) ] );]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\[@A@\]
Lösung: \(@loes@\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>loes</tans>
      <boxsize>40</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>ansm: if length(ans1)=3 then matrix([ans1[1]],[ans1[2]],[ans1[3]]);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>matA.ansm</sans>
        <tans>vektorB</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>length(listofvars(ans1))</sans>
        <tans>0</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Ihre Antwort \(@ans1@\) ist eine spezifische Lösung des Gleichungssystems.</p>
<p>Gefragt wird nach der allgemeinen Lösung.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>1.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>1788287284</deployedseed>
    <deployedseed>576492072</deployedseed>
    <deployedseed>1885153380</deployedseed>
    <deployedseed>408123529</deployedseed>
    <deployedseed>1408428442</deployedseed>
    <deployedseed>1476357967</deployedseed>
    <deployedseed>1268122836</deployedseed>
    <deployedseed>1371991493</deployedseed>
    <deployedseed>655297154</deployedseed>
    <deployedseed>1519211889</deployedseed>
    <deployedseed>186710872</deployedseed>
    <deployedseed>1281589498</deployedseed>
    <deployedseed>525493515</deployedseed>
    <deployedseed>1563792141</deployedseed>
    <deployedseed>465380207</deployedseed>
    <deployedseed>1356128424</deployedseed>
    <deployedseed>801802172</deployedseed>
    <deployedseed>892089591</deployedseed>
    <deployedseed>2078093997</deployedseed>
    <deployedseed>1705384004</deployedseed>
    <deployedseed>81436082</deployedseed>
    <deployedseed>788667439</deployedseed>
    <deployedseed>1236107602</deployedseed>
    <deployedseed>676839239</deployedseed>
    <deployedseed>1510060679</deployedseed>
    <deployedseed>140957626</deployedseed>
    <deployedseed>874775886</deployedseed>
    <deployedseed>621743218</deployedseed>
    <deployedseed>1384631502</deployedseed>
    <deployedseed>1829741886</deployedseed>
    <deployedseed>1394027782</deployedseed>
    <deployedseed>385779974</deployedseed>
    <deployedseed>249073495</deployedseed>
    <deployedseed>446650460</deployedseed>
    <deployedseed>1245254111</deployedseed>
    <deployedseed>977125031</deployedseed>
    <deployedseed>1721048361</deployedseed>
    <deployedseed>462931861</deployedseed>
    <deployedseed>310873125</deployedseed>
    <deployedseed>708647801</deployedseed>
    <deployedseed>370613688</deployedseed>
    <deployedseed>2045424244</deployedseed>
    <deployedseed>678855505</deployedseed>
    <deployedseed>256337017</deployedseed>
    <deployedseed>844753091</deployedseed>
    <deployedseed>860645529</deployedseed>
    <deployedseed>1786446724</deployedseed>
    <deployedseed>371901984</deployedseed>
    <deployedseed>1192076959</deployedseed>
    <deployedseed>761547006</deployedseed>
    <deployedseed>1824188025</deployedseed>
    <deployedseed>83119314</deployedseed>
    <deployedseed>681107344</deployedseed>
    <deployedseed>148097582</deployedseed>
    <deployedseed>1336833604</deployedseed>
    <deployedseed>1822804994</deployedseed>
    <deployedseed>369822542</deployedseed>
    <deployedseed>112177314</deployedseed>
    <deployedseed>1927058873</deployedseed>
    <deployedseed>1899219269</deployedseed>
    <deployedseed>968769161</deployedseed>
    <deployedseed>815074938</deployedseed>
  </question>

<!-- question: 806964  -->
  <question type="stack">
    <name>
      <text><![CDATA[5.2d LGS 3x3 mit Parameter a, Eine eindeutige Lösung [{"DOMAINUID":"4A80009"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben ist das lineare Gleichungssystem</p>
<p>\[ \begin{matrix} @a11*x1@ &amp; + &amp;  @a12*x2@ &amp; + &amp; @a13*x3@ &amp; = &amp; @a14@ \\ @a21*x1@ &amp;+ &amp; @a22*x2@ &amp; + &amp; @a23*x3@ &amp; = &amp; @a24@ \\<br />@a31*x1@ &amp;+ &amp; @a32*x2@ &amp; + &amp; @a33*x3@ &amp; = &amp; @a34@ \\ \end{matrix} \]</p>
<p>mit der Konstante \(a \in \mathbb{R}\).</p>
<p> </p>
<p>Für welchen Wert des Parameters \(a \in \mathbb{R}\) ist das System unlösbar?</p>
<p>\(a = \) [[input:ans1]] [[validation:ans1]] [[feedback:prt1]]</p>
<p> </p>
<p>Lösen Sie das Gleichungssystem und geben Sie die Lösung in Abhängigkeit des Parameters \(a\) an.</p>
<p>\(x_1=\) [[input:ans2]] [[validation:ans2]]</p>
<p>\(x_2=\) [[input:ans3]] [[validation:ans3]]</p>
<p>\(x_3=\) [[input:ans4]] [[validation:ans4]]</p>
<p>[[feedback:prt2]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text>ansa: rand_with_step(-5,5,1);
b11: a;
b12: rand_with_step(-4,-1,1);
b13: 1;
b14: 0;
b21: 0;
b22: a-ansa;
b23: 0;
b24: rand_with_prohib(-5,5,[0]);
b31: 1;
b32: 0;
b33: 0;
b34: rand([1,2])
B: matrix([b11,b12,b13,b14],[b21,b22,b23,b24],[b31,b32,b33,b34]);
m1: rand_with_step(1,3,1);
B2: rowop(B,2,3,m1);
m2: rand_with_step(-4,-2,1);
B3: rowop(B2,3,2,m2);
m3: rand_with_step(1,3,1);
B4: rowop(B3,2,1,m3);
a11:B4[1,1];
a12:B4[1,2];
a13: B4[1,3];
a14: B4[1,4];
a21: B4[2,1];
a22: B4[2,2];
a23: B4[2,3];
a24: B4[2,4];
a31: B4[3,1];
a32: B4[3,2];
a33: B4[3,3];
a34: B4[3,4];
g1: a11*x1+a12*x2+a13*x3=a14;
g2: a21*x1+a22*x2+a23*x3=a24;
g3: a31*x1+a32*x2+a33*x3=a34;
solx: b34;
soly: b24/(a-ansa);
solz: -1*a*solx-b12*soly;</text>
    </questionvariables>
    <specificfeedback format="html">
      <text><![CDATA[<p></p>
<p></p>]]></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(@g1@\)
\(@g2@\)
\(@g3@\)

Nicht lösbar, wenn \(a=@ansa@\)

Lösung: 
\(x_1=@solx@\)
\(x_2=@soly@\)
\(x_3=@solz@\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>ansa</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>solx</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>soly</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>algebraic</type>
      <tans>solz</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>ansa</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>studa: [ans2,ans3,ans4];
loes: [solx,soly,solz];</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>studa</sans>
        <tans>loes</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>762981691</deployedseed>
    <deployedseed>615494245</deployedseed>
    <deployedseed>1912087001</deployedseed>
    <deployedseed>388899144</deployedseed>
    <deployedseed>1114383343</deployedseed>
    <deployedseed>1982915372</deployedseed>
    <deployedseed>1821015661</deployedseed>
    <deployedseed>202362039</deployedseed>
    <deployedseed>436605394</deployedseed>
    <deployedseed>631539845</deployedseed>
    <deployedseed>146497151</deployedseed>
    <deployedseed>713044638</deployedseed>
    <deployedseed>252521667</deployedseed>
    <deployedseed>309749402</deployedseed>
    <deployedseed>685240683</deployedseed>
    <deployedseed>2103346159</deployedseed>
    <deployedseed>341589404</deployedseed>
    <deployedseed>1171178770</deployedseed>
    <deployedseed>185748767</deployedseed>
    <deployedseed>677616056</deployedseed>
    <deployedseed>249875737</deployedseed>
    <deployedseed>1562091133</deployedseed>
    <deployedseed>246487514</deployedseed>
    <deployedseed>116140804</deployedseed>
    <deployedseed>683422375</deployedseed>
    <deployedseed>276795014</deployedseed>
    <deployedseed>1588101762</deployedseed>
    <deployedseed>1538277379</deployedseed>
    <deployedseed>1250306008</deployedseed>
    <deployedseed>1660916988</deployedseed>
    <deployedseed>741760401</deployedseed>
    <deployedseed>178877753</deployedseed>
    <deployedseed>1532564938</deployedseed>
    <deployedseed>1805996623</deployedseed>
    <deployedseed>1989042334</deployedseed>
    <deployedseed>1480720917</deployedseed>
    <deployedseed>1142288497</deployedseed>
    <deployedseed>1843659555</deployedseed>
    <deployedseed>1061111534</deployedseed>
    <deployedseed>1787858709</deployedseed>
    <deployedseed>579006402</deployedseed>
    <deployedseed>112894164</deployedseed>
    <deployedseed>1035928632</deployedseed>
    <deployedseed>999443945</deployedseed>
    <deployedseed>984819812</deployedseed>
    <deployedseed>84206640</deployedseed>
    <deployedseed>1191304256</deployedseed>
    <deployedseed>1881434225</deployedseed>
    <deployedseed>1216909269</deployedseed>
    <deployedseed>1074029547</deployedseed>
  </question>

<!-- question: 806969  -->
  <question type="stack">
    <name>
      <text><![CDATA[5.2d LGS 3x3 mit Parameter a, Eine eindeutige Lösung [{"DOMAINUID":"4A80009"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben ist das lineare Gleichungssystem</p>
<p>\[ \begin{matrix} @a11*x1@ &amp; + &amp;  @a12*x2@ &amp; + &amp; @a13*x3@ &amp; = &amp; @a14@ \\ @a21*x1@ &amp;+ &amp; @a22*x2@ &amp; + &amp; @a23*x3@ &amp; = &amp; @a24@ \\<br />@a31*x1@ &amp;+ &amp; @a32*x2@ &amp; + &amp; @a33*x3@ &amp; = &amp; @a34@ \\ \end{matrix} \]</p>
<p>mit der Konstante \(a \in \mathbb{R}\).</p>
<p> </p>
<p>Für welchen Wert des Parameters \(a \in \mathbb{R}\) ist das System unlösbar?</p>
<p>\(a = \) [[input:ans1]] [[validation:ans1]] [[feedback:prt1]]</p>
<p> </p>
<p>Lösen Sie das Gleichungssystem und geben Sie die Lösung in Abhängigkeit des Parameters \(a\) an.</p>
<p>\(x_1=\) [[input:ans2]] [[validation:ans2]]</p>
<p>\(x_2=\) [[input:ans3]] [[validation:ans3]]</p>
<p>\(x_3=\) [[input:ans4]] [[validation:ans4]]</p>
<p>[[feedback:prt2]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text>ansa: rand_with_step(-5,5,1);
b11: a;
b12: rand_with_step(-4,-1,1);
b13: 1;
b14: 0;
b21: 0;
b22: a-ansa;
b23: 0;
b24: rand_with_prohib(-5,5,[0]);
b31: 1;
b32: 0;
b33: 0;
b34: rand([1,2])
B: matrix([b11,b12,b13,b14],[b21,b22,b23,b24],[b31,b32,b33,b34]);
m1: rand_with_step(1,3,1);
B2: rowop(B,2,3,m1);
m2: rand_with_step(-4,-2,1);
B3: rowop(B2,3,2,m2);
m3: rand_with_step(1,3,1);
B4: rowop(B3,2,1,m3);
a11:B4[1,1];
a12:B4[1,2];
a13: B4[1,3];
a14: B4[1,4];
a21: B4[2,1];
a22: B4[2,2];
a23: B4[2,3];
a24: B4[2,4];
a31: B4[3,1];
a32: B4[3,2];
a33: B4[3,3];
a34: B4[3,4];
g1: a11*x1+a12*x2+a13*x3=a14;
g2: a21*x1+a22*x2+a23*x3=a24;
g3: a31*x1+a32*x2+a33*x3=a34;
solx: b34;
soly: b24/(a-ansa);
solz: -1*a*solx-b12*soly;</text>
    </questionvariables>
    <specificfeedback format="html">
      <text><![CDATA[<p></p>
<p></p>]]></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(@g1@\)
\(@g2@\)
\(@g3@\)

Nicht lösbar, wenn \(a=@ansa@\)

Lösung: 
\(x_1=@solx@\)
\(x_2=@soly@\)
\(x_3=@solz@\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>ansa</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>solx</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>soly</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>algebraic</type>
      <tans>solz</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>ansa</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>studa: [ans2,ans3,ans4];
loes: [solx,soly,solz];</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>studa</sans>
        <tans>loes</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>762981691</deployedseed>
    <deployedseed>615494245</deployedseed>
    <deployedseed>1912087001</deployedseed>
    <deployedseed>388899144</deployedseed>
    <deployedseed>1114383343</deployedseed>
    <deployedseed>1982915372</deployedseed>
    <deployedseed>1821015661</deployedseed>
    <deployedseed>202362039</deployedseed>
    <deployedseed>436605394</deployedseed>
    <deployedseed>631539845</deployedseed>
    <deployedseed>146497151</deployedseed>
    <deployedseed>713044638</deployedseed>
    <deployedseed>252521667</deployedseed>
    <deployedseed>309749402</deployedseed>
    <deployedseed>685240683</deployedseed>
    <deployedseed>2103346159</deployedseed>
    <deployedseed>341589404</deployedseed>
    <deployedseed>1171178770</deployedseed>
    <deployedseed>185748767</deployedseed>
    <deployedseed>677616056</deployedseed>
    <deployedseed>249875737</deployedseed>
    <deployedseed>1562091133</deployedseed>
    <deployedseed>246487514</deployedseed>
    <deployedseed>116140804</deployedseed>
    <deployedseed>683422375</deployedseed>
    <deployedseed>276795014</deployedseed>
    <deployedseed>1588101762</deployedseed>
    <deployedseed>1538277379</deployedseed>
    <deployedseed>1250306008</deployedseed>
    <deployedseed>1660916988</deployedseed>
    <deployedseed>741760401</deployedseed>
    <deployedseed>178877753</deployedseed>
    <deployedseed>1532564938</deployedseed>
    <deployedseed>1805996623</deployedseed>
    <deployedseed>1989042334</deployedseed>
    <deployedseed>1480720917</deployedseed>
    <deployedseed>1142288497</deployedseed>
    <deployedseed>1843659555</deployedseed>
    <deployedseed>1061111534</deployedseed>
    <deployedseed>1787858709</deployedseed>
    <deployedseed>579006402</deployedseed>
    <deployedseed>112894164</deployedseed>
    <deployedseed>1035928632</deployedseed>
    <deployedseed>999443945</deployedseed>
    <deployedseed>984819812</deployedseed>
    <deployedseed>84206640</deployedseed>
    <deployedseed>1191304256</deployedseed>
    <deployedseed>1881434225</deployedseed>
    <deployedseed>1216909269</deployedseed>
    <deployedseed>1074029547</deployedseed>
  </question>

<!-- question: 806974  -->
  <question type="stack">
    <name>
      <text><![CDATA[5.2d LGS 3x3 mit Parameter a, Eine eindeutige Lösung [{"DOMAINUID":"4A80009"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben ist das lineare Gleichungssystem</p>
<p>\[ \begin{matrix} @a11*x1@ &amp; + &amp;  @a12*x2@ &amp; + &amp; @a13*x3@ &amp; = &amp; @a14@ \\ @a21*x1@ &amp;+ &amp; @a22*x2@ &amp; + &amp; @a23*x3@ &amp; = &amp; @a24@ \\<br />@a31*x1@ &amp;+ &amp; @a32*x2@ &amp; + &amp; @a33*x3@ &amp; = &amp; @a34@ \\ \end{matrix} \]</p>
<p>mit der Konstante \(a \in \mathbb{R}\).</p>
<p> </p>
<p>Für welchen Wert des Parameters \(a \in \mathbb{R}\) ist das System unlösbar?</p>
<p>\(a = \) [[input:ans1]] [[validation:ans1]] [[feedback:prt1]]</p>
<p> </p>
<p>Lösen Sie das Gleichungssystem und geben Sie die Lösung in Abhängigkeit des Parameters \(a\) an.</p>
<p>\(x_1=\) [[input:ans2]] [[validation:ans2]]</p>
<p>\(x_2=\) [[input:ans3]] [[validation:ans3]]</p>
<p>\(x_3=\) [[input:ans4]] [[validation:ans4]]</p>
<p>[[feedback:prt2]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text>ansa: rand_with_step(-5,5,1);
b11: a;
b12: rand_with_step(-4,-1,1);
b13: 1;
b14: 0;
b21: 0;
b22: a-ansa;
b23: 0;
b24: rand_with_prohib(-5,5,[0]);
b31: 1;
b32: 0;
b33: 0;
b34: rand([1,2])
B: matrix([b11,b12,b13,b14],[b21,b22,b23,b24],[b31,b32,b33,b34]);
m1: rand_with_step(1,3,1);
B2: rowop(B,2,3,m1);
m2: rand_with_step(-4,-2,1);
B3: rowop(B2,3,2,m2);
m3: rand_with_step(1,3,1);
B4: rowop(B3,2,1,m3);
a11:B4[1,1];
a12:B4[1,2];
a13: B4[1,3];
a14: B4[1,4];
a21: B4[2,1];
a22: B4[2,2];
a23: B4[2,3];
a24: B4[2,4];
a31: B4[3,1];
a32: B4[3,2];
a33: B4[3,3];
a34: B4[3,4];
g1: a11*x1+a12*x2+a13*x3=a14;
g2: a21*x1+a22*x2+a23*x3=a24;
g3: a31*x1+a32*x2+a33*x3=a34;
solx: b34;
soly: b24/(a-ansa);
solz: -1*a*solx-b12*soly;</text>
    </questionvariables>
    <specificfeedback format="html">
      <text><![CDATA[<p></p>
<p></p>]]></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(@g1@\)
\(@g2@\)
\(@g3@\)

Nicht lösbar, wenn \(a=@ansa@\)

Lösung: 
\(x_1=@solx@\)
\(x_2=@soly@\)
\(x_3=@solz@\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>ansa</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>solx</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>soly</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>algebraic</type>
      <tans>solz</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>ansa</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>studa: [ans2,ans3,ans4];
loes: [solx,soly,solz];</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>studa</sans>
        <tans>loes</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>762981691</deployedseed>
    <deployedseed>615494245</deployedseed>
    <deployedseed>1912087001</deployedseed>
    <deployedseed>388899144</deployedseed>
    <deployedseed>1114383343</deployedseed>
    <deployedseed>1982915372</deployedseed>
    <deployedseed>1821015661</deployedseed>
    <deployedseed>202362039</deployedseed>
    <deployedseed>436605394</deployedseed>
    <deployedseed>631539845</deployedseed>
    <deployedseed>146497151</deployedseed>
    <deployedseed>713044638</deployedseed>
    <deployedseed>252521667</deployedseed>
    <deployedseed>309749402</deployedseed>
    <deployedseed>685240683</deployedseed>
    <deployedseed>2103346159</deployedseed>
    <deployedseed>341589404</deployedseed>
    <deployedseed>1171178770</deployedseed>
    <deployedseed>185748767</deployedseed>
    <deployedseed>677616056</deployedseed>
    <deployedseed>249875737</deployedseed>
    <deployedseed>1562091133</deployedseed>
    <deployedseed>246487514</deployedseed>
    <deployedseed>116140804</deployedseed>
    <deployedseed>683422375</deployedseed>
    <deployedseed>276795014</deployedseed>
    <deployedseed>1588101762</deployedseed>
    <deployedseed>1538277379</deployedseed>
    <deployedseed>1250306008</deployedseed>
    <deployedseed>1660916988</deployedseed>
    <deployedseed>741760401</deployedseed>
    <deployedseed>178877753</deployedseed>
    <deployedseed>1532564938</deployedseed>
    <deployedseed>1805996623</deployedseed>
    <deployedseed>1989042334</deployedseed>
    <deployedseed>1480720917</deployedseed>
    <deployedseed>1142288497</deployedseed>
    <deployedseed>1843659555</deployedseed>
    <deployedseed>1061111534</deployedseed>
    <deployedseed>1787858709</deployedseed>
    <deployedseed>579006402</deployedseed>
    <deployedseed>112894164</deployedseed>
    <deployedseed>1035928632</deployedseed>
    <deployedseed>999443945</deployedseed>
    <deployedseed>984819812</deployedseed>
    <deployedseed>84206640</deployedseed>
    <deployedseed>1191304256</deployedseed>
    <deployedseed>1881434225</deployedseed>
    <deployedseed>1216909269</deployedseed>
    <deployedseed>1074029547</deployedseed>
  </question>

<!-- question: 806989  -->
  <question type="stack">
    <name>
      <text><![CDATA[5.2d LGS 3x3 mit Parameter a, Eine eindeutige Lösung [{"DOMAINUID":"4A80009"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben ist das lineare Gleichungssystem</p>
<p>\[ \begin{matrix} @a11*x1@ &amp; + &amp;  @a12*x2@ &amp; + &amp; @a13*x3@ &amp; = &amp; @a14@ \\ @a21*x1@ &amp;+ &amp; @a22*x2@ &amp; + &amp; @a23*x3@ &amp; = &amp; @a24@ \\<br />@a31*x1@ &amp;+ &amp; @a32*x2@ &amp; + &amp; @a33*x3@ &amp; = &amp; @a34@ \\ \end{matrix} \]</p>
<p>mit der Konstante \(a \in \mathbb{R}\).</p>
<p> </p>
<p>Für welchen Wert des Parameters \(a \in \mathbb{R}\) ist das System unlösbar?</p>
<p>\(a = \) [[input:ans1]] [[validation:ans1]] [[feedback:prt1]]</p>
<p> </p>
<p>Lösen Sie das Gleichungssystem und geben Sie die Lösung in Abhängigkeit des Parameters \(a\) an.</p>
<p>\(x_1=\) [[input:ans2]] [[validation:ans2]]</p>
<p>\(x_2=\) [[input:ans3]] [[validation:ans3]]</p>
<p>\(x_3=\) [[input:ans4]] [[validation:ans4]]</p>
<p>[[feedback:prt2]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text>ansa: rand_with_step(-5,5,1);
b11: a;
b12: rand_with_step(-4,-1,1);
b13: 1;
b14: 0;
b21: 0;
b22: a-ansa;
b23: 0;
b24: rand_with_prohib(-5,5,[0]);
b31: 1;
b32: 0;
b33: 0;
b34: rand([1,2])
B: matrix([b11,b12,b13,b14],[b21,b22,b23,b24],[b31,b32,b33,b34]);
m1: rand_with_step(1,3,1);
B2: rowop(B,2,3,m1);
m2: rand_with_step(-4,-2,1);
B3: rowop(B2,3,2,m2);
m3: rand_with_step(1,3,1);
B4: rowop(B3,2,1,m3);
a11:B4[1,1];
a12:B4[1,2];
a13: B4[1,3];
a14: B4[1,4];
a21: B4[2,1];
a22: B4[2,2];
a23: B4[2,3];
a24: B4[2,4];
a31: B4[3,1];
a32: B4[3,2];
a33: B4[3,3];
a34: B4[3,4];
g1: a11*x1+a12*x2+a13*x3=a14;
g2: a21*x1+a22*x2+a23*x3=a24;
g3: a31*x1+a32*x2+a33*x3=a34;
solx: b34;
soly: b24/(a-ansa);
solz: -1*a*solx-b12*soly;</text>
    </questionvariables>
    <specificfeedback format="html">
      <text><![CDATA[<p></p>
<p></p>]]></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(@g1@\)
\(@g2@\)
\(@g3@\)

Nicht lösbar, wenn \(a=@ansa@\)

Lösung: 
\(x_1=@solx@\)
\(x_2=@soly@\)
\(x_3=@solz@\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>ansa</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>solx</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>soly</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>algebraic</type>
      <tans>solz</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>ansa</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>studa: [ans2,ans3,ans4];
loes: [solx,soly,solz];</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>studa</sans>
        <tans>loes</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>762981691</deployedseed>
    <deployedseed>615494245</deployedseed>
    <deployedseed>1912087001</deployedseed>
    <deployedseed>388899144</deployedseed>
    <deployedseed>1114383343</deployedseed>
    <deployedseed>1982915372</deployedseed>
    <deployedseed>1821015661</deployedseed>
    <deployedseed>202362039</deployedseed>
    <deployedseed>436605394</deployedseed>
    <deployedseed>631539845</deployedseed>
    <deployedseed>146497151</deployedseed>
    <deployedseed>713044638</deployedseed>
    <deployedseed>252521667</deployedseed>
    <deployedseed>309749402</deployedseed>
    <deployedseed>685240683</deployedseed>
    <deployedseed>2103346159</deployedseed>
    <deployedseed>341589404</deployedseed>
    <deployedseed>1171178770</deployedseed>
    <deployedseed>185748767</deployedseed>
    <deployedseed>677616056</deployedseed>
    <deployedseed>249875737</deployedseed>
    <deployedseed>1562091133</deployedseed>
    <deployedseed>246487514</deployedseed>
    <deployedseed>116140804</deployedseed>
    <deployedseed>683422375</deployedseed>
    <deployedseed>276795014</deployedseed>
    <deployedseed>1588101762</deployedseed>
    <deployedseed>1538277379</deployedseed>
    <deployedseed>1250306008</deployedseed>
    <deployedseed>1660916988</deployedseed>
    <deployedseed>741760401</deployedseed>
    <deployedseed>178877753</deployedseed>
    <deployedseed>1532564938</deployedseed>
    <deployedseed>1805996623</deployedseed>
    <deployedseed>1989042334</deployedseed>
    <deployedseed>1480720917</deployedseed>
    <deployedseed>1142288497</deployedseed>
    <deployedseed>1843659555</deployedseed>
    <deployedseed>1061111534</deployedseed>
    <deployedseed>1787858709</deployedseed>
    <deployedseed>579006402</deployedseed>
    <deployedseed>112894164</deployedseed>
    <deployedseed>1035928632</deployedseed>
    <deployedseed>999443945</deployedseed>
    <deployedseed>984819812</deployedseed>
    <deployedseed>84206640</deployedseed>
    <deployedseed>1191304256</deployedseed>
    <deployedseed>1881434225</deployedseed>
    <deployedseed>1216909269</deployedseed>
    <deployedseed>1074029547</deployedseed>
  </question>

<!-- question: 806713  -->
  <question type="stack">
    <name>
      <text><![CDATA[Komplexe Zahlen (Inverse) [DE] (AP_EG) [{"DOMAINUID":"37296FC"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Wir betrachten die komplexe Zahl \( z={@z@}\).</p>
<p>Bestimmen Sie Realteil \( x\) und Imaginärteil \( y\) der komplexen Zahl \[\dfrac{1}{z} = x + \mathrm{i} \cdot y\].</p>
<p></p><span style="font-size: 0.9375rem;">\( x = \) [[input:ans1]] [[validation:ans1]] und \( y = \) [[input:ans2]]. [[validation:ans2]]</span><br><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;"><strong>Lösungsweg:</strong></p><p dir="ltr" style="text-align: left;">Wegen \(|z|^2 = z \cdot \overline{z}\) gilt&nbsp;\(\dfrac{1}{z} = \dfrac{\overline{z}}{|z|^2}\).</p><p dir="ltr" style="text-align: left;">\(\overline{z}= \overline{{@z@}} = {@zq@}\)</p><p dir="ltr" style="text-align: left;">\(|z|^2 = ({@x@})^2+({@y@})^2&nbsp;= {@x^2@}+{@y^2@} = {@x^2+y^2@}\)<br></p><p dir="ltr" style="text-align: left;">Also ist \(\dfrac{1}{z} = \dfrac{@zq@}{{@x^2+y^2@}} = \displaystyle {@zi@}\), womit \(x = \displaystyle {@xi@}\) und \(y = \displaystyle {@yi@}\).</p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text>x : rand(10)-5;
y : (rand(5)+1)*(2*rand(2)-1);
z : x+%i*y;
zi : rectform(1/z);
xi : realpart(zi);
yi : imagpart(zi);
zq: conjugate(z);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text><![CDATA[[[feedback:prt1]]<p>[[feedback:prt2]]<br></p>]]></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>z</text>
    </questionnote>
    <questiondescription format="moodle_auto_format">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>xi</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>yi</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>xi</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Der Realteil ist korrekt berechnet.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Der Realteil ist falsch.<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>yi</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Der Imaginärteil ist richtig.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Der Imaginärteil ist falsch.<br></p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>%i*yi</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.5000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-2-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Ihr Imaginärteil enthält fälschlicherweise noch das \(i\).&nbsp;</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
      <tag><text>Rückmeldebaum</text>
</tag>
    </tags>
  </question>

<!-- question: 806711  -->
  <question type="stack">
    <name>
      <text><![CDATA[Komplexe Zahlen: (z1^a*z2^b)/z3^c [{"DOMAINUID":"DE18D40"}] [{"DOMAINUID":"DE18D40"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben sind die drei komplexen Zahlen \(\,z_1= {@z1@}\), \(\,z_2&nbsp;= {@z2@}\,\)&nbsp;und \(\,z_3&nbsp;= {@z3@}\,\).</p>
<p>Berechnen Sie&nbsp;den folgenden Ausdruck und schreiben Sie die resultierende komplexe Zahl als arithmetische Darstellung (z.B. \(a+b\cdot\mathrm{i}\) mit \(a,b \in \mathbb{R}\)).</p>
<p></p>
<p><span style="font-size: 0.9375rem;">\(\dfrac{z_1^{@c1@}\cdot z_2^{@c2@}}{z_3^{@c3_abs@}}=\,\) [[input:ans1]]&nbsp;[[validation:ans1]] [[feedback:prt1]]</span><br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<strong>Lösungsweg:<br></strong><br>Um den Ausdruck \(\dfrac{z_1^{@c1@}\cdot z_2^{@c2@}}{z_3^{@c3_abs@}}\) zu berechnen, werden die einzelnen Potenzen der drei komplexen Zahlen ermittelt.<br><br>(1) Die komplexe Zahl \(z_1= {@z1@}\), die im \(1\).Quadranten liegt, wird in die trigonometrische Form überführt.<br> Es ist \(|z_1| = \sqrt{(\mathrm{Re}(z_1))^2+(\mathrm{Im}(z_1))^2}\) \(= \displaystyle \sqrt{\left({@z1_re@}\right)^{\!2} + \left({@z1_im@}\right)^{\!2}} \) \(= \displaystyle \sqrt{{@z1_re^2@}+{@z1_im^2@}}\) \(= \displaystyle \sqrt{{@z1_re^2+z1_im^2@}} = {@abs(z1)@}\).<br> Ferner ist \(\varphi_1 =&nbsp;\displaystyle&nbsp; \arctan\!\left(\dfrac{\mathrm{Im}(z_1)}{\mathrm{Re}(z_1)}\right)\) \(=&nbsp;\displaystyle&nbsp; \arctan\!\left(\dfrac{{@z1_im@}}{{@z1_re@}}\right)\)&nbsp;\(=&nbsp;\displaystyle&nbsp; \arctan\!\left({@z1_im/z1_re@}\right)= {@phi1@}\).<br>
Nach der Formel von Moivre gilt:<br>\(z_1^{@c1@} = |z_1|^{@c1@} \cdot \left(\cos\left({@c1@} \cdot \varphi_1\right) + \mathrm{i} \cdot \sin\left({@c1@} \cdot \varphi_1\right)\right)\) \(= \displaystyle \left({@abs(z1)@}\right)^{\!{@c1@}} \cdot \left(\cos\left({@c1@} \cdot {@phi1@}\right) + \mathrm{i} \cdot \sin\left({@c1@} \cdot {@phi1@}\right)\right)\)&nbsp;\(= \displaystyle {@abs(z1)^c1@} \cdot \left(\cos\left({@c1*phi1@}\right) + \mathrm{i} \cdot \sin\left({@c1*phi1@}\right)\right)\)&nbsp;\(= \displaystyle {@abs(z1)^c1@} \cdot \left({@cos(c1*phi1)+ %i*sin(c1*phi1)@}\right)\)<br><p></p>(2) Die komplexe Zahl \(z_2= {@z2@}\), die im \(1\).Quadranten liegt, wird in die trigonometrische Form überführt.<br><span>Es ist \(|z_2| = \sqrt{(\mathrm{Re}(z_2))^2+(\mathrm{Im}(z_2))^2}\) \(= \displaystyle \sqrt{\left({@z2_re@}\right)^{\!2} + \left({@z2_im@}\right)^{\!2}} \) \(= \displaystyle \sqrt{{@z2_re^2@}+{@z2_im^2@}}\) \(= \displaystyle \sqrt{{@z2_re^2+z2_im^2@}} = {@abs(z2)@}\).<br>Ferner ist \(\varphi_2 =&nbsp;\displaystyle&nbsp; \arctan\!\left(\dfrac{\mathrm{Im}(z_2)}{\mathrm{Re}(z_2)}\right)\) \(=&nbsp;\displaystyle&nbsp; \arctan\!\left(\dfrac{{@z2_im@}}{{@z2_re@}}\right)\)&nbsp;\(=&nbsp;\displaystyle&nbsp; \arctan\!\left({@z2_im/z2_re@}\right)&nbsp;= {@phi2@}\).<br></span>
<p dir="ltr">Nach der Formel von Moivre gilt:<br>\(z_2^{@c2@} = |z_2|^{@c2@} \cdot \left(\cos\left({@c2@} \cdot \varphi_2\right) + \mathrm{i} \cdot \sin\left({@c2@} \cdot \varphi_2\right)\right)\) \(= \displaystyle \left({@abs(z2)@}\right)^{\!{@c2@}} \cdot \left(\cos\left({@c2@} \cdot {@phi2@}\right) + \mathrm{i} \cdot \sin\left({@c2@} \cdot {@phi2@}\right)\right)\)&nbsp;\(= \displaystyle {@abs(z2)^c2@} \cdot \left(\cos\left({@c2*phi2@}\right) + \mathrm{i} \cdot \sin\left({@c2*phi2@}\right)\right)\)&nbsp;\(= \displaystyle {@abs(z2)^c2@} \cdot \left({@cos(c2*phi2)+ %i*sin(c2*phi2)@}\right)\)</p>
<p dir="ltr"></p>(3) Die komplexe Zahl \(z_3= {@z3@}\), die im \(1\).Quadranten liegt, wird in die trigonometrische Form überführt.<br>Es ist \(|z_3| = \sqrt{(\mathrm{Re}(z_3))^2+(\mathrm{Im}(z_3))^2}\) \(= \displaystyle \sqrt{\left({@z3_re@}\right)^{\!2} + \left({@z3_im@}\right)^{\!2}} \) \(= \displaystyle \sqrt{{@z3_re^2@}+{@z3_im^2@}}\) \(= \displaystyle \sqrt{{@z3_re^2+z3_im^2@}} = {@abs(z3)@}\).<br>Ferner ist \(\varphi_3 =&nbsp;\displaystyle&nbsp; \arctan\!\left(\dfrac{\mathrm{Im}(z_3)}{\mathrm{Re}(z_3)}\right)\) \(=&nbsp;\displaystyle&nbsp; \arctan\!\left(\dfrac{{@z3_im@}}{{@z3_re@}}\right)\)&nbsp;\(=&nbsp;\displaystyle&nbsp; \arctan\!\left({@z3_im/z3_re@}\right)&nbsp;= {@phi3@}\).<br>
<p dir="ltr">Nach der Formel von Moivre gilt:<br>\(z_3^{@c3@} = |z_3|^{@c3@} \cdot \left(\cos\left({@c3@} \cdot \varphi_3\right) + \mathrm{i} \cdot \sin\left({@c3@} \cdot \varphi_3\right)\right)\) \(= \displaystyle \left({@abs(z3)@}\right)^{\!{@c3@}} \cdot \left(\cos\left({@c3@} \cdot {@phi3@}\right) + \mathrm{i} \cdot \sin\left({@c3@} \cdot {@phi3@}\right)\right)\)&nbsp;\(= \displaystyle {@abs(z3)^c3@} \cdot \left(\cos\left({@c3*phi3@}\right) + \mathrm{i} \cdot \sin\left({@c3*phi3@}\right)\right)\)&nbsp;\(= \displaystyle {@abs(z3)^c3@} \cdot \left({@cos(c3*phi3)+ %i*sin(c3*phi3)@}\right)\)</p>Somit ist&nbsp;&nbsp;\(\dfrac{z_1^{@c1@}\cdot z_2^{@c2@}}{z_3^{@c3_abs@}} = z_1^{@c1@}\cdot z_2^{@c2@} \cdot z_3^{@c3@}\) \(= \displaystyle {@abs(z1)^c1@} \cdot \left({@cos(c1*phi1)+ %i*sin(c1*phi1)@}\right) \cdot {@abs(z2)^c2@} \cdot \left({@cos(c2*phi2)+ %i*sin(c2*phi2)@}\right) \cdot {@abs(z3)^c3@} \cdot \left({@cos(c3*phi3)+ %i*sin(c3*phi3)@}\right)\) \(= \displaystyle {@abs(z1)^c1*abs(z2)^c2*abs(z3)^c3@} \cdot \left({@cos(c1*phi1)+ %i*sin(c1*phi1)@}\right) \cdot \left({@cos(c2*phi2)+ %i*sin(c2*phi2)@}\right) \cdot \left({@cos(c3*phi3)+ %i*sin(c3*phi3)@}\right)\)&nbsp;\(= \displaystyle {@loes@}\)]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text>zahl: rand_with_step(1,3,1);
liste: [0,pi/2,pi];
phi: liste[zahl];

sel: rand([1,2]);

liste_at1:[pi/3,pi/6];
at1: liste_at1[sel];

liste_at2: [pi/6,pi/3];
at2: liste_at2[sel];

at3: pi/6;

c2: rand_with_step(3,9,1);
c1: rand_with_prohib(3,9,[c2]);

c3: (phi-at1*c1-at2*c2)/at3;
c3_abs: abs(c3);


liste_z1_re: [1,3];
z1_re: liste_z1_re[sel];
z1_im: sqrt(3);
phi1: atan(z1_im/z1_re);

liste_z2_re: [3,1];
z2_re: liste_z2_re[sel];
z2_im: sqrt(3);
phi2: atan(z2_im/z2_re);

z3_re: sqrt(3);
z3_im: 1;
phi3: atan(z3_im/z3_re);

z1: (z1_re)+(z1_im)*%i;
z2: (z2_re)+(z2_im)*%i;
z3: (z3_re)+(z3_im)*%i;

fi: rectform(cos(c1*phi1)+ %i*sin(c1*phi1))*(cos(c2*phi2)+ %i*sin(c2*phi2))*(cos(c3*phi3)+ %i*sin(c3*phi3));

loes: rectform(abs(z1)^c1*abs(z2)^c2*abs(z3)^c3*(cos(phi)+sin(phi)*%i));</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(\large\displaystyle\frac{z_1^{@c1@}\cdot z_2^{@c2@}}{z_3^{@c3_abs@}}={@loes@}\)</text>
    </questionnote>
    <questiondescription format="moodle_auto_format">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>loes</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>1</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>EqualComAss</answertest>
        <sans>ans1</sans>
        <tans>loes</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>958900598</deployedseed>
    <deployedseed>1549612237</deployedseed>
    <deployedseed>1144923090</deployedseed>
    <deployedseed>1664730300</deployedseed>
    <deployedseed>1714140641</deployedseed>
    <deployedseed>295949200</deployedseed>
    <deployedseed>394476400</deployedseed>
    <deployedseed>700024709</deployedseed>
    <deployedseed>731258350</deployedseed>
    <deployedseed>1612979658</deployedseed>
    <deployedseed>1134075804</deployedseed>
    <deployedseed>1367261578</deployedseed>
    <deployedseed>1236672255</deployedseed>
    <deployedseed>2024316252</deployedseed>
    <deployedseed>190754077</deployedseed>
    <deployedseed>50315384</deployedseed>
    <deployedseed>244489689</deployedseed>
    <deployedseed>1071102892</deployedseed>
    <deployedseed>956508864</deployedseed>
    <deployedseed>1415162257</deployedseed>
    <deployedseed>1027287280</deployedseed>
    <deployedseed>2113477732</deployedseed>
    <deployedseed>1625088862</deployedseed>
    <deployedseed>100742001</deployedseed>
    <deployedseed>950891863</deployedseed>
    <deployedseed>171885033</deployedseed>
    <deployedseed>1731011989</deployedseed>
    <deployedseed>577167285</deployedseed>
    <deployedseed>1696711766</deployedseed>
    <deployedseed>629129878</deployedseed>
    <deployedseed>1752518550</deployedseed>
    <deployedseed>1357656182</deployedseed>
    <deployedseed>341432873</deployedseed>
    <deployedseed>327698032</deployedseed>
    <deployedseed>1573357056</deployedseed>
    <deployedseed>1024503443</deployedseed>
    <deployedseed>572841104</deployedseed>
    <deployedseed>1456901375</deployedseed>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
    </tags>
  </question>

<!-- question: 806716  -->
  <question type="stack">
    <name>
      <text><![CDATA[Komplexe Zahlen: (z1^a*z2^b)/z3^c [{"DOMAINUID":"DE18D40"}] [{"DOMAINUID":"DE18D40"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben sind die drei komplexen Zahlen \(\,z_1= {@z1@}\), \(\,z_2&nbsp;= {@z2@}\,\)&nbsp;und \(\,z_3&nbsp;= {@z3@}\,\).</p>
<p>Berechnen Sie&nbsp;den folgenden Ausdruck und schreiben Sie die resultierende komplexe Zahl als arithmetische Darstellung (z.B. \(a+b\cdot\mathrm{i}\) mit \(a,b \in \mathbb{R}\)).</p>
<p></p>
<p><span style="font-size: 0.9375rem;">\(\dfrac{z_1^{@c1@}\cdot z_2^{@c2@}}{z_3^{@c3_abs@}}=\,\) [[input:ans1]]&nbsp;[[validation:ans1]] [[feedback:prt1]]</span><br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<strong>Lösungsweg:<br></strong><br>Um den Ausdruck \(\dfrac{z_1^{@c1@}\cdot z_2^{@c2@}}{z_3^{@c3_abs@}}\) zu berechnen, werden die einzelnen Potenzen der drei komplexen Zahlen ermittelt.<br><br>(1) Die komplexe Zahl \(z_1= {@z1@}\), die im \(1\).Quadranten liegt, wird in die trigonometrische Form überführt.<br> Es ist \(|z_1| = \sqrt{(\mathrm{Re}(z_1))^2+(\mathrm{Im}(z_1))^2}\) \(= \displaystyle \sqrt{\left({@z1_re@}\right)^{\!2} + \left({@z1_im@}\right)^{\!2}} \) \(= \displaystyle \sqrt{{@z1_re^2@}+{@z1_im^2@}}\) \(= \displaystyle \sqrt{{@z1_re^2+z1_im^2@}} = {@abs(z1)@}\).<br> Ferner ist \(\varphi_1 =&nbsp;\displaystyle&nbsp; \arctan\!\left(\dfrac{\mathrm{Im}(z_1)}{\mathrm{Re}(z_1)}\right)\) \(=&nbsp;\displaystyle&nbsp; \arctan\!\left(\dfrac{{@z1_im@}}{{@z1_re@}}\right)\)&nbsp;\(=&nbsp;\displaystyle&nbsp; \arctan\!\left({@z1_im/z1_re@}\right)= {@phi1@}\).<br>
Nach der Formel von Moivre gilt:<br>\(z_1^{@c1@} = |z_1|^{@c1@} \cdot \left(\cos\left({@c1@} \cdot \varphi_1\right) + \mathrm{i} \cdot \sin\left({@c1@} \cdot \varphi_1\right)\right)\) \(= \displaystyle \left({@abs(z1)@}\right)^{\!{@c1@}} \cdot \left(\cos\left({@c1@} \cdot {@phi1@}\right) + \mathrm{i} \cdot \sin\left({@c1@} \cdot {@phi1@}\right)\right)\)&nbsp;\(= \displaystyle {@abs(z1)^c1@} \cdot \left(\cos\left({@c1*phi1@}\right) + \mathrm{i} \cdot \sin\left({@c1*phi1@}\right)\right)\)&nbsp;\(= \displaystyle {@abs(z1)^c1@} \cdot \left({@cos(c1*phi1)+ %i*sin(c1*phi1)@}\right)\)<br><p></p>(2) Die komplexe Zahl \(z_2= {@z2@}\), die im \(1\).Quadranten liegt, wird in die trigonometrische Form überführt.<br><span>Es ist \(|z_2| = \sqrt{(\mathrm{Re}(z_2))^2+(\mathrm{Im}(z_2))^2}\) \(= \displaystyle \sqrt{\left({@z2_re@}\right)^{\!2} + \left({@z2_im@}\right)^{\!2}} \) \(= \displaystyle \sqrt{{@z2_re^2@}+{@z2_im^2@}}\) \(= \displaystyle \sqrt{{@z2_re^2+z2_im^2@}} = {@abs(z2)@}\).<br>Ferner ist \(\varphi_2 =&nbsp;\displaystyle&nbsp; \arctan\!\left(\dfrac{\mathrm{Im}(z_2)}{\mathrm{Re}(z_2)}\right)\) \(=&nbsp;\displaystyle&nbsp; \arctan\!\left(\dfrac{{@z2_im@}}{{@z2_re@}}\right)\)&nbsp;\(=&nbsp;\displaystyle&nbsp; \arctan\!\left({@z2_im/z2_re@}\right)&nbsp;= {@phi2@}\).<br></span>
<p dir="ltr">Nach der Formel von Moivre gilt:<br>\(z_2^{@c2@} = |z_2|^{@c2@} \cdot \left(\cos\left({@c2@} \cdot \varphi_2\right) + \mathrm{i} \cdot \sin\left({@c2@} \cdot \varphi_2\right)\right)\) \(= \displaystyle \left({@abs(z2)@}\right)^{\!{@c2@}} \cdot \left(\cos\left({@c2@} \cdot {@phi2@}\right) + \mathrm{i} \cdot \sin\left({@c2@} \cdot {@phi2@}\right)\right)\)&nbsp;\(= \displaystyle {@abs(z2)^c2@} \cdot \left(\cos\left({@c2*phi2@}\right) + \mathrm{i} \cdot \sin\left({@c2*phi2@}\right)\right)\)&nbsp;\(= \displaystyle {@abs(z2)^c2@} \cdot \left({@cos(c2*phi2)+ %i*sin(c2*phi2)@}\right)\)</p>
<p dir="ltr"></p>(3) Die komplexe Zahl \(z_3= {@z3@}\), die im \(1\).Quadranten liegt, wird in die trigonometrische Form überführt.<br>Es ist \(|z_3| = \sqrt{(\mathrm{Re}(z_3))^2+(\mathrm{Im}(z_3))^2}\) \(= \displaystyle \sqrt{\left({@z3_re@}\right)^{\!2} + \left({@z3_im@}\right)^{\!2}} \) \(= \displaystyle \sqrt{{@z3_re^2@}+{@z3_im^2@}}\) \(= \displaystyle \sqrt{{@z3_re^2+z3_im^2@}} = {@abs(z3)@}\).<br>Ferner ist \(\varphi_3 =&nbsp;\displaystyle&nbsp; \arctan\!\left(\dfrac{\mathrm{Im}(z_3)}{\mathrm{Re}(z_3)}\right)\) \(=&nbsp;\displaystyle&nbsp; \arctan\!\left(\dfrac{{@z3_im@}}{{@z3_re@}}\right)\)&nbsp;\(=&nbsp;\displaystyle&nbsp; \arctan\!\left({@z3_im/z3_re@}\right)&nbsp;= {@phi3@}\).<br>
<p dir="ltr">Nach der Formel von Moivre gilt:<br>\(z_3^{@c3@} = |z_3|^{@c3@} \cdot \left(\cos\left({@c3@} \cdot \varphi_3\right) + \mathrm{i} \cdot \sin\left({@c3@} \cdot \varphi_3\right)\right)\) \(= \displaystyle \left({@abs(z3)@}\right)^{\!{@c3@}} \cdot \left(\cos\left({@c3@} \cdot {@phi3@}\right) + \mathrm{i} \cdot \sin\left({@c3@} \cdot {@phi3@}\right)\right)\)&nbsp;\(= \displaystyle {@abs(z3)^c3@} \cdot \left(\cos\left({@c3*phi3@}\right) + \mathrm{i} \cdot \sin\left({@c3*phi3@}\right)\right)\)&nbsp;\(= \displaystyle {@abs(z3)^c3@} \cdot \left({@cos(c3*phi3)+ %i*sin(c3*phi3)@}\right)\)</p>Somit ist&nbsp;&nbsp;\(\dfrac{z_1^{@c1@}\cdot z_2^{@c2@}}{z_3^{@c3_abs@}} = z_1^{@c1@}\cdot z_2^{@c2@} \cdot z_3^{@c3@}\) \(= \displaystyle {@abs(z1)^c1@} \cdot \left({@cos(c1*phi1)+ %i*sin(c1*phi1)@}\right) \cdot {@abs(z2)^c2@} \cdot \left({@cos(c2*phi2)+ %i*sin(c2*phi2)@}\right) \cdot {@abs(z3)^c3@} \cdot \left({@cos(c3*phi3)+ %i*sin(c3*phi3)@}\right)\) \(= \displaystyle {@abs(z1)^c1*abs(z2)^c2*abs(z3)^c3@} \cdot \left({@cos(c1*phi1)+ %i*sin(c1*phi1)@}\right) \cdot \left({@cos(c2*phi2)+ %i*sin(c2*phi2)@}\right) \cdot \left({@cos(c3*phi3)+ %i*sin(c3*phi3)@}\right)\)&nbsp;\(= \displaystyle {@loes@}\)]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text>zahl: rand_with_step(1,3,1);
liste: [0,pi/2,pi];
phi: liste[zahl];

sel: rand([1,2]);

liste_at1:[pi/3,pi/6];
at1: liste_at1[sel];

liste_at2: [pi/6,pi/3];
at2: liste_at2[sel];

at3: pi/6;

c2: rand_with_step(3,9,1);
c1: rand_with_prohib(3,9,[c2]);

c3: (phi-at1*c1-at2*c2)/at3;
c3_abs: abs(c3);


liste_z1_re: [1,3];
z1_re: liste_z1_re[sel];
z1_im: sqrt(3);
phi1: atan(z1_im/z1_re);

liste_z2_re: [3,1];
z2_re: liste_z2_re[sel];
z2_im: sqrt(3);
phi2: atan(z2_im/z2_re);

z3_re: sqrt(3);
z3_im: 1;
phi3: atan(z3_im/z3_re);

z1: (z1_re)+(z1_im)*%i;
z2: (z2_re)+(z2_im)*%i;
z3: (z3_re)+(z3_im)*%i;

fi: rectform(cos(c1*phi1)+ %i*sin(c1*phi1))*(cos(c2*phi2)+ %i*sin(c2*phi2))*(cos(c3*phi3)+ %i*sin(c3*phi3));

loes: rectform(abs(z1)^c1*abs(z2)^c2*abs(z3)^c3*(cos(phi)+sin(phi)*%i));</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(\large\displaystyle\frac{z_1^{@c1@}\cdot z_2^{@c2@}}{z_3^{@c3_abs@}}={@loes@}\)</text>
    </questionnote>
    <questiondescription format="moodle_auto_format">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>loes</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>1</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>EqualComAss</answertest>
        <sans>ans1</sans>
        <tans>loes</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>958900598</deployedseed>
    <deployedseed>1549612237</deployedseed>
    <deployedseed>1144923090</deployedseed>
    <deployedseed>1664730300</deployedseed>
    <deployedseed>1714140641</deployedseed>
    <deployedseed>295949200</deployedseed>
    <deployedseed>394476400</deployedseed>
    <deployedseed>700024709</deployedseed>
    <deployedseed>731258350</deployedseed>
    <deployedseed>1612979658</deployedseed>
    <deployedseed>1134075804</deployedseed>
    <deployedseed>1367261578</deployedseed>
    <deployedseed>1236672255</deployedseed>
    <deployedseed>2024316252</deployedseed>
    <deployedseed>190754077</deployedseed>
    <deployedseed>50315384</deployedseed>
    <deployedseed>244489689</deployedseed>
    <deployedseed>1071102892</deployedseed>
    <deployedseed>956508864</deployedseed>
    <deployedseed>1415162257</deployedseed>
    <deployedseed>1027287280</deployedseed>
    <deployedseed>2113477732</deployedseed>
    <deployedseed>1625088862</deployedseed>
    <deployedseed>100742001</deployedseed>
    <deployedseed>950891863</deployedseed>
    <deployedseed>171885033</deployedseed>
    <deployedseed>1731011989</deployedseed>
    <deployedseed>577167285</deployedseed>
    <deployedseed>1696711766</deployedseed>
    <deployedseed>629129878</deployedseed>
    <deployedseed>1752518550</deployedseed>
    <deployedseed>1357656182</deployedseed>
    <deployedseed>341432873</deployedseed>
    <deployedseed>327698032</deployedseed>
    <deployedseed>1573357056</deployedseed>
    <deployedseed>1024503443</deployedseed>
    <deployedseed>572841104</deployedseed>
    <deployedseed>1456901375</deployedseed>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
    </tags>
  </question>

<!-- question: 806710  -->
  <question type="stack">
    <name>
      <text><![CDATA[Komplexe Zahlen: Gegeben ist z1, geben sie z2 mit Bedingungen [{"DOMAINUID":"A24C23B"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben ist die komplexe Zahl \( \, z_1={@z1@} \, \).</p>
<p>Geben Sie eine komplexe Zahl \( \, z_2 \neq 0 \, \) so, dass \(\ldots\)</p>
<p>a) \(\ldots\) die komplexe Zahl \( z_1+z_2 \, \) reell ist.</p>
<p>\(z_2=\,\) [[input:ans1]] [[validation:ans1]] [[feedback:prt1]]</p>
<p>b) \(\ldots\) die komplexe Zahl&nbsp;\(z_1 \cdot z_2 \, \) reell ist.</p>
<p>\(z_2=\,\) [[input:ans2]] [[validation:ans2]] [[feedback:prt2]]</p>
<p>c) \(\ldots\) die beiden komplexen Zahlen \( \, z_1 + z_2 \, \) und \( \, z_1 \cdot z_2 \, \) reell sind.</p>
<p>\(z_2=\,\) [[input:ans3]] [[validation:ans3]] [[feedback:prt3]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p><strong>Lösungsidee:</strong></p><p>Eine<strong> mögliche Lösung</strong> der Aufgabe wäre die folgende.</p><p><span style="font-size: 0.9375rem;">a) Wenn \(z_1={@z1@}\) die vorgegebene komplexe Zahl ist, dann kann z.B. die komplexe Zahl \(z_2 = {@loes1@} \neq 0 \) gewählt werden, so dass die komplexe Zahl \(z_1+z_2 = ({@z1@}) + ({@loes1@}) = {@z1+loes1@}\) reell ist.</span><br></p><p><span style="font-size: 0.9375rem;">b) Wenn \(z_1={@z1@}\) die vorgegebene komplexe Zahl ist, dann kann z.B. die komplexe Zahl \(z_2 = {@loes2@} \neq 0 \) gewählt werden, so dass die komplexe Zahl&nbsp;\(z_1 \cdot z_2 = {@z1*loes2@} = {@l2@}\) reell ist.</span><br></p><p><span style="font-size: 0.9375rem;">c) Wenn \(z_1={@z1@}\) die vorgegebene komplexe Zahl ist, dann kann z.B. die komplexe Zahl \(z_2 = {@loes3@} \neq 0 \) gewählt werden, so dass die beiden komplexen Zahlen \(z_1+z_2 = ({@z1@}) + ({@loes3@}) = {@z1+loes3@}\) und \(z_1 \cdot z_2 = {@z1*loes3@} = {@l3@}\) reell sind.</span></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text>a: rand_with_step(1,9,1);
b: rand_with_prohib(-9,9,[0]);
z1: a * %i + b;
loes1: -a * %i;
loes2: a * %i - b;
loes3: -a * %i + b;

l2: rectform(z1*loes2);
l3: rectform(z1*loes3);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>Gegeben ist die komplexe Zahl \( \, z_1={@z1@} \, \).</text>
    </questionnote>
    <questiondescription format="moodle_auto_format">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort.</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Die Antwort ist teilweise richtig.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Die Antwort ist nicht richtig.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans> loes1</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans> loes2</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans> loes3</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>3.4000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>imagpart(z1+ans1)</sans>
        <tans>0</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-0-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-0-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>3.3000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>imagpart(z1*ans2)</sans>
        <tans>0</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-0-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-0-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt3</name>
      <value>3.3000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>imagpart(z1+ans3)</sans>
        <tans>0</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt3-0-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt3-0-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>imagpart(z1*ans3)</sans>
        <tans>0</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt3-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt3-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>Lösungsidee</text>
</tag>
    </tags>
  </question>

<!-- question: 806715  -->
  <question type="stack">
    <name>
      <text><![CDATA[Komplexe Zahlen: Polardarstellung von 1/a+i*1/a [{"DOMAINUID":"6EF05C3"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[Schreiben Sie die komplexe Zahl \(z = \displaystyle {@z@}\) als trigonometrische Darstellung und geben Sie die beschreibenden Größen (also Betrag \(r\) sowie Argument/Phasenwinkel&nbsp;<span>\(\varphi\)) dieser Zahl an.<br><br>\(r=\,\) [[input:ans1]] [[validation:ans1]] und \(\varphi=\,\) [[input:ans2]] [[validation:ans2]]&nbsp;[[feedback:prt1]]</span><br>
<p></p>
<p></p>
<p><strong>Hinweise:</strong></p>
<ul>
    <li>Geben Sie die exakte Antwort ein (keine Dezimalzahlen).</li>
    <li>Falls nötig, schreiben Sie \(\pi\) als <strong>pi</strong>&nbsp;und \(\sqrt{a}\) als <strong>sqrt(a)</strong>.</li>
    <li>Geben Sie \(\varphi\) im Intervall von \( (0; 2\cdot \pi ]\) ein.</li>
</ul>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;"><strong>Lösungsweg:</strong></p>
<p dir="ltr" style="text-align: left;">Die komplexe Zahl \(z = \displaystyle {@z@}\) besteht aus \(\mathrm{Re}(z) = \displaystyle {@x@}\) und \(\mathrm{Im}(z) = \displaystyle {@y@}\) und liegt somit im {@s@}.Quadranten.</p>
<p dir="ltr" style="text-align: left;">Dann ist \(r = \sqrt{(\mathrm{Re}(z))^2+(\mathrm{Im}(z))^2}\) \(= \displaystyle \sqrt{\left({@x@}\right)^{\!2}+\left({@y@}\right)^{\!2}} \) \(= \displaystyle \sqrt{{@x^2@}+{@y^2@}}\) \(= \displaystyle \sqrt{{@x^2+y^2@}} = {@loes_r@}\).</p>
<p dir="ltr" style="text-align: left;">Da die komplexe Zahl \(z\) im {@s@}.Quadranten liegt, gilt:</p>
<p dir="ltr" style="text-align: left;">\(\varphi =&nbsp;\displaystyle&nbsp; \arctan\!\left(\dfrac{\mathrm{Im}(z)}{\mathrm{Re}(z)}\right) + {@plus@} \) \(=&nbsp;\displaystyle&nbsp; \arctan\!\left(\dfrac{{@y@}}{{@x@}}\right) + {@plus@} \)&nbsp;\(=&nbsp;\displaystyle&nbsp; \arctan({@y/x@}) + {@plus@} \) \(= \displaystyle&nbsp;{@phi@} + {@plus@} = {@phi+plus@}\).</p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text>s: rand_with_step(1,4,1);

liste_t: [1,3,-3,-1];
t: liste_t[s];

r: 3+2*rand_with_step(0,4,1);

liste_z: [1/sqrt(r)+(1/sqrt(r))*%i,-(1/sqrt(r))+(1/sqrt(r))*%i,-(1/sqrt(r))-(1/sqrt(r))*%i,1/sqrt(r)-(1/sqrt(r))*%i];

z: liste_z[s];

liste_tp: [pi/4,(3*Pi)/4,(5*Pi)/4,(7*Pi)/4];

tp: liste_tp[s];

loes_r: sqrt(2/r);

x : realpart(z);
y : imagpart(z);
phi: atan(y/x);
liste_plus: [0,Pi,Pi,2*Pi];
plus: liste_plus[s];</text>
    </questionvariables>
    <specificfeedback format="html">
      <text><![CDATA[<p></p>
<p>&nbsp;</p>]]></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(z={@z@}, (r,\varphi )=({@loes_r@},{@tp@}) \)</text>
    </questionnote>
    <questiondescription format="moodle_auto_format">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>loes_r</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>tp</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>loes_r</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>tp</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>1231616917</deployedseed>
    <deployedseed>525576268</deployedseed>
    <deployedseed>1278652409</deployedseed>
    <deployedseed>22890949</deployedseed>
    <deployedseed>397599509</deployedseed>
    <deployedseed>810237860</deployedseed>
    <deployedseed>791654972</deployedseed>
    <deployedseed>126258676</deployedseed>
    <deployedseed>1200583268</deployedseed>
    <deployedseed>1446807313</deployedseed>
    <deployedseed>439869051</deployedseed>
    <deployedseed>1318858039</deployedseed>
    <deployedseed>1600919727</deployedseed>
    <deployedseed>1573715910</deployedseed>
    <deployedseed>903275707</deployedseed>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
    </tags>
  </question>

<!-- question: 806960  -->
  <question type="stack">
    <name>
      <text><![CDATA[Komplexe Zahlen: Polardarstellung von a+bi [{"DOMAINUID":"C41B581"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Schreiben Sie \(z\) in der Polardarstellung.</p>
<p> </p>
<p>\(z\,=\,@z@\)</p>
<p> </p>
<p><strong>Hinweise:</strong></p>
<ul>
<li>Geben Sie die exakte Antwort ein (keine Dezimalzahlen).</li>
<li>Falls nötig, schreiben Sie  \(\pi\)  als   <strong>pi</strong>  und   \(\sqrt{a}\)  als <strong>sqrt(a)</strong>.</li>
<li>Geben Sie \(\varphi\) im Intervall von \( (-\pi;\pi ] \) ein.</li>
</ul>
<p><br />\( z=(r,\varphi ) \)</p>
<p><br />\(r=\,\)  [[input:ans1]] [[validation:ans1]]</p>
<p>\(\varphi=\,\)  [[input:ans2]] [[validation:ans2]]</p>
<p>[[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text>s: rand_with_step(1,4,1);
n: rand_with_step(1,6,1);

liste_r: [2,3,5,6,7,8];
r: liste_r[n];

r3: 3*r;

liste_t: [1,5,-5,-1];
t: liste_t[s];

liste_z: [sqrt(r3)+sqrt(r)*%i, -sqrt(r3)+sqrt(r)*%i, -sqrt(r3)-sqrt(r)*%i, sqrt(r3)-sqrt(r)*%i ];
z: liste_z[s];

liste_tp: [%pi/6, (5*%pi)/6, -1*(5*%pi)/6, -(%pi/6) ];
tp: liste_tp[s];

loes_r: sqrt(r+r3);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text><![CDATA[<p></p>
<p> </p>]]></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(z\,=\,@z@,  (r,\varphi ) = (@loes_r@,@tp@)\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>j</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>loes_r</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>tp</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>[ans1,ans2]</sans>
        <tans>[loes_r,tp]</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>1882708376</deployedseed>
    <deployedseed>2100283198</deployedseed>
    <deployedseed>176146169</deployedseed>
    <deployedseed>171496437</deployedseed>
    <deployedseed>591928281</deployedseed>
    <deployedseed>555577362</deployedseed>
    <deployedseed>1879863618</deployedseed>
    <deployedseed>276774745</deployedseed>
    <deployedseed>1337626174</deployedseed>
    <deployedseed>1580442860</deployedseed>
    <deployedseed>402296995</deployedseed>
    <deployedseed>774466248</deployedseed>
    <deployedseed>687648338</deployedseed>
    <deployedseed>460085769</deployedseed>
    <deployedseed>2078906329</deployedseed>
    <deployedseed>715395454</deployedseed>
    <deployedseed>129361002</deployedseed>
    <deployedseed>1773346470</deployedseed>
  </question>

<!-- question: 806965  -->
  <question type="stack">
    <name>
      <text><![CDATA[Komplexe Zahlen: Polardarstellung von a+bi [{"DOMAINUID":"C41B581"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Schreiben Sie \(z\) in der Polardarstellung.</p>
<p> </p>
<p>\(z\,=\,@z@\)</p>
<p> </p>
<p><strong>Hinweise:</strong></p>
<ul>
<li>Geben Sie die exakte Antwort ein (keine Dezimalzahlen).</li>
<li>Falls nötig, schreiben Sie  \(\pi\)  als   <strong>pi</strong>  und   \(\sqrt{a}\)  als <strong>sqrt(a)</strong>.</li>
<li>Geben Sie \(\varphi\) im Intervall von \( (-\pi;\pi ] \) ein.</li>
</ul>
<p><br />\( z=(r,\varphi ) \)</p>
<p><br />\(r=\,\)  [[input:ans1]] [[validation:ans1]]</p>
<p>\(\varphi=\,\)  [[input:ans2]] [[validation:ans2]]</p>
<p>[[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text>s: rand_with_step(1,4,1);
n: rand_with_step(1,6,1);

liste_r: [2,3,5,6,7,8];
r: liste_r[n];

r3: 3*r;

liste_t: [1,5,-5,-1];
t: liste_t[s];

liste_z: [sqrt(r3)+sqrt(r)*%i, -sqrt(r3)+sqrt(r)*%i, -sqrt(r3)-sqrt(r)*%i, sqrt(r3)-sqrt(r)*%i ];
z: liste_z[s];

liste_tp: [%pi/6, (5*%pi)/6, -1*(5*%pi)/6, -(%pi/6) ];
tp: liste_tp[s];

loes_r: sqrt(r+r3);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text><![CDATA[<p></p>
<p> </p>]]></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(z\,=\,@z@,  (r,\varphi ) = (@loes_r@,@tp@)\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>j</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>loes_r</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>tp</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>[ans1,ans2]</sans>
        <tans>[loes_r,tp]</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>1882708376</deployedseed>
    <deployedseed>2100283198</deployedseed>
    <deployedseed>176146169</deployedseed>
    <deployedseed>171496437</deployedseed>
    <deployedseed>591928281</deployedseed>
    <deployedseed>555577362</deployedseed>
    <deployedseed>1879863618</deployedseed>
    <deployedseed>276774745</deployedseed>
    <deployedseed>1337626174</deployedseed>
    <deployedseed>1580442860</deployedseed>
    <deployedseed>402296995</deployedseed>
    <deployedseed>774466248</deployedseed>
    <deployedseed>687648338</deployedseed>
    <deployedseed>460085769</deployedseed>
    <deployedseed>2078906329</deployedseed>
    <deployedseed>715395454</deployedseed>
    <deployedseed>129361002</deployedseed>
    <deployedseed>1773346470</deployedseed>
  </question>

<!-- question: 806970  -->
  <question type="stack">
    <name>
      <text><![CDATA[Komplexe Zahlen: Polardarstellung von a+bi [{"DOMAINUID":"C41B581"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Schreiben Sie \(z\) in der Polardarstellung.</p>
<p> </p>
<p>\(z\,=\,@z@\)</p>
<p> </p>
<p><strong>Hinweise:</strong></p>
<ul>
<li>Geben Sie die exakte Antwort ein (keine Dezimalzahlen).</li>
<li>Falls nötig, schreiben Sie  \(\pi\)  als   <strong>pi</strong>  und   \(\sqrt{a}\)  als <strong>sqrt(a)</strong>.</li>
<li>Geben Sie \(\varphi\) im Intervall von \( (-\pi;\pi ] \) ein.</li>
</ul>
<p><br />\( z=(r,\varphi ) \)</p>
<p><br />\(r=\,\)  [[input:ans1]] [[validation:ans1]]</p>
<p>\(\varphi=\,\)  [[input:ans2]] [[validation:ans2]]</p>
<p>[[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text>s: rand_with_step(1,4,1);
n: rand_with_step(1,6,1);

liste_r: [2,3,5,6,7,8];
r: liste_r[n];

r3: 3*r;

liste_t: [1,5,-5,-1];
t: liste_t[s];

liste_z: [sqrt(r3)+sqrt(r)*%i, -sqrt(r3)+sqrt(r)*%i, -sqrt(r3)-sqrt(r)*%i, sqrt(r3)-sqrt(r)*%i ];
z: liste_z[s];

liste_tp: [%pi/6, (5*%pi)/6, -1*(5*%pi)/6, -(%pi/6) ];
tp: liste_tp[s];

loes_r: sqrt(r+r3);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text><![CDATA[<p></p>
<p> </p>]]></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(z\,=\,@z@,  (r,\varphi ) = (@loes_r@,@tp@)\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>j</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>loes_r</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>tp</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>[ans1,ans2]</sans>
        <tans>[loes_r,tp]</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>1882708376</deployedseed>
    <deployedseed>2100283198</deployedseed>
    <deployedseed>176146169</deployedseed>
    <deployedseed>171496437</deployedseed>
    <deployedseed>591928281</deployedseed>
    <deployedseed>555577362</deployedseed>
    <deployedseed>1879863618</deployedseed>
    <deployedseed>276774745</deployedseed>
    <deployedseed>1337626174</deployedseed>
    <deployedseed>1580442860</deployedseed>
    <deployedseed>402296995</deployedseed>
    <deployedseed>774466248</deployedseed>
    <deployedseed>687648338</deployedseed>
    <deployedseed>460085769</deployedseed>
    <deployedseed>2078906329</deployedseed>
    <deployedseed>715395454</deployedseed>
    <deployedseed>129361002</deployedseed>
    <deployedseed>1773346470</deployedseed>
  </question>

<!-- question: 806975  -->
  <question type="stack">
    <name>
      <text><![CDATA[Komplexe Zahlen: Polardarstellung von a+bi [{"DOMAINUID":"C41B581"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Schreiben Sie \(z\) in der Polardarstellung.</p>
<p> </p>
<p>\(z\,=\,@z@\)</p>
<p> </p>
<p><strong>Hinweise:</strong></p>
<ul>
<li>Geben Sie die exakte Antwort ein (keine Dezimalzahlen).</li>
<li>Falls nötig, schreiben Sie  \(\pi\)  als   <strong>pi</strong>  und   \(\sqrt{a}\)  als <strong>sqrt(a)</strong>.</li>
<li>Geben Sie \(\varphi\) im Intervall von \( (-\pi;\pi ] \) ein.</li>
</ul>
<p><br />\( z=(r,\varphi ) \)</p>
<p><br />\(r=\,\)  [[input:ans1]] [[validation:ans1]]</p>
<p>\(\varphi=\,\)  [[input:ans2]] [[validation:ans2]]</p>
<p>[[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text>s: rand_with_step(1,4,1);
n: rand_with_step(1,6,1);

liste_r: [2,3,5,6,7,8];
r: liste_r[n];

r3: 3*r;

liste_t: [1,5,-5,-1];
t: liste_t[s];

liste_z: [sqrt(r3)+sqrt(r)*%i, -sqrt(r3)+sqrt(r)*%i, -sqrt(r3)-sqrt(r)*%i, sqrt(r3)-sqrt(r)*%i ];
z: liste_z[s];

liste_tp: [%pi/6, (5*%pi)/6, -1*(5*%pi)/6, -(%pi/6) ];
tp: liste_tp[s];

loes_r: sqrt(r+r3);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text><![CDATA[<p></p>
<p> </p>]]></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(z\,=\,@z@,  (r,\varphi ) = (@loes_r@,@tp@)\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>j</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>loes_r</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>tp</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>[ans1,ans2]</sans>
        <tans>[loes_r,tp]</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>1882708376</deployedseed>
    <deployedseed>2100283198</deployedseed>
    <deployedseed>176146169</deployedseed>
    <deployedseed>171496437</deployedseed>
    <deployedseed>591928281</deployedseed>
    <deployedseed>555577362</deployedseed>
    <deployedseed>1879863618</deployedseed>
    <deployedseed>276774745</deployedseed>
    <deployedseed>1337626174</deployedseed>
    <deployedseed>1580442860</deployedseed>
    <deployedseed>402296995</deployedseed>
    <deployedseed>774466248</deployedseed>
    <deployedseed>687648338</deployedseed>
    <deployedseed>460085769</deployedseed>
    <deployedseed>2078906329</deployedseed>
    <deployedseed>715395454</deployedseed>
    <deployedseed>129361002</deployedseed>
    <deployedseed>1773346470</deployedseed>
  </question>

<!-- question: 806980  -->
  <question type="stack">
    <name>
      <text><![CDATA[Komplexe Zahlen: Polardarstellung von a+bi [{"DOMAINUID":"C41B581"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Schreiben Sie \(z\) in der Polardarstellung.</p>
<p> </p>
<p>\(z\,=\,@z@\)</p>
<p> </p>
<p><strong>Hinweise:</strong></p>
<ul>
<li>Geben Sie die exakte Antwort ein (keine Dezimalzahlen).</li>
<li>Falls nötig, schreiben Sie  \(\pi\)  als   <strong>pi</strong>  und   \(\sqrt{a}\)  als <strong>sqrt(a)</strong>.</li>
<li>Geben Sie \(\varphi\) im Intervall von \( (-\pi;\pi ] \) ein.</li>
</ul>
<p><br />\( z=(r,\varphi ) \)</p>
<p><br />\(r=\,\)  [[input:ans1]] [[validation:ans1]]</p>
<p>\(\varphi=\,\)  [[input:ans2]] [[validation:ans2]]</p>
<p>[[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text>s: rand_with_step(1,4,1);
n: rand_with_step(1,6,1);

liste_r: [2,3,5,6,7,8];
r: liste_r[n];

r3: 3*r;

liste_t: [1,5,-5,-1];
t: liste_t[s];

liste_z: [sqrt(r3)+sqrt(r)*%i, -sqrt(r3)+sqrt(r)*%i, -sqrt(r3)-sqrt(r)*%i, sqrt(r3)-sqrt(r)*%i ];
z: liste_z[s];

liste_tp: [%pi/6, (5*%pi)/6, -1*(5*%pi)/6, -(%pi/6) ];
tp: liste_tp[s];

loes_r: sqrt(r+r3);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text><![CDATA[<p></p>
<p> </p>]]></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(z\,=\,@z@,  (r,\varphi ) = (@loes_r@,@tp@)\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>j</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>loes_r</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>tp</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>[ans1,ans2]</sans>
        <tans>[loes_r,tp]</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>1882708376</deployedseed>
    <deployedseed>2100283198</deployedseed>
    <deployedseed>176146169</deployedseed>
    <deployedseed>171496437</deployedseed>
    <deployedseed>591928281</deployedseed>
    <deployedseed>555577362</deployedseed>
    <deployedseed>1879863618</deployedseed>
    <deployedseed>276774745</deployedseed>
    <deployedseed>1337626174</deployedseed>
    <deployedseed>1580442860</deployedseed>
    <deployedseed>402296995</deployedseed>
    <deployedseed>774466248</deployedseed>
    <deployedseed>687648338</deployedseed>
    <deployedseed>460085769</deployedseed>
    <deployedseed>2078906329</deployedseed>
    <deployedseed>715395454</deployedseed>
    <deployedseed>129361002</deployedseed>
    <deployedseed>1773346470</deployedseed>
  </question>

<!-- question: 806985  -->
  <question type="stack">
    <name>
      <text><![CDATA[Komplexe Zahlen: Polardarstellung von a+bi [{"DOMAINUID":"C41B581"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Schreiben Sie \(z\) in der Polardarstellung.</p>
<p> </p>
<p>\(z\,=\,@z@\)</p>
<p> </p>
<p><strong>Hinweise:</strong></p>
<ul>
<li>Geben Sie die exakte Antwort ein (keine Dezimalzahlen).</li>
<li>Falls nötig, schreiben Sie  \(\pi\)  als   <strong>pi</strong>  und   \(\sqrt{a}\)  als <strong>sqrt(a)</strong>.</li>
<li>Geben Sie \(\varphi\) im Intervall von \( (-\pi;\pi ] \) ein.</li>
</ul>
<p><br />\( z=(r,\varphi ) \)</p>
<p><br />\(r=\,\)  [[input:ans1]] [[validation:ans1]]</p>
<p>\(\varphi=\,\)  [[input:ans2]] [[validation:ans2]]</p>
<p>[[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text>s: rand_with_step(1,4,1);
n: rand_with_step(1,6,1);

liste_r: [2,3,5,6,7,8];
r: liste_r[n];

r3: 3*r;

liste_t: [1,5,-5,-1];
t: liste_t[s];

liste_z: [sqrt(r3)+sqrt(r)*%i, -sqrt(r3)+sqrt(r)*%i, -sqrt(r3)-sqrt(r)*%i, sqrt(r3)-sqrt(r)*%i ];
z: liste_z[s];

liste_tp: [%pi/6, (5*%pi)/6, -1*(5*%pi)/6, -(%pi/6) ];
tp: liste_tp[s];

loes_r: sqrt(r+r3);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text><![CDATA[<p></p>
<p> </p>]]></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(z\,=\,@z@,  (r,\varphi ) = (@loes_r@,@tp@)\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>j</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>loes_r</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>tp</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>[ans1,ans2]</sans>
        <tans>[loes_r,tp]</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>1882708376</deployedseed>
    <deployedseed>2100283198</deployedseed>
    <deployedseed>176146169</deployedseed>
    <deployedseed>171496437</deployedseed>
    <deployedseed>591928281</deployedseed>
    <deployedseed>555577362</deployedseed>
    <deployedseed>1879863618</deployedseed>
    <deployedseed>276774745</deployedseed>
    <deployedseed>1337626174</deployedseed>
    <deployedseed>1580442860</deployedseed>
    <deployedseed>402296995</deployedseed>
    <deployedseed>774466248</deployedseed>
    <deployedseed>687648338</deployedseed>
    <deployedseed>460085769</deployedseed>
    <deployedseed>2078906329</deployedseed>
    <deployedseed>715395454</deployedseed>
    <deployedseed>129361002</deployedseed>
    <deployedseed>1773346470</deployedseed>
  </question>

<!-- question: 806714  -->
  <question type="stack">
    <name>
      <text><![CDATA[Komplexe Zahlen: Polardarstellung von a+bi [{"DOMAINUID":"C41B581"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[Schreiben Sie die komplexe Zahl \(z = \displaystyle {@z@}\) als trigonometrische Darstellung und geben Sie die beschreibenden Größen (also Betrag \(r\) sowie Argument/Phasenwinkel&nbsp;<span>\(\varphi\)) dieser Zahl an.
<br><br>\(r=\,\) [[input:ans1]] [[validation:ans1]] und \(\varphi=\,\) [[input:ans2]] [[validation:ans2]] [[feedback:prt1]]</span><br>
<p></p>
<p><strong>Hinweise:</strong></p>
<ul>
    <li>Geben Sie die exakte Antwort ein (keine Dezimalzahlen).</li>
    <li>Falls nötig, schreiben Sie \(\pi\) als <strong>pi</strong> und \(\sqrt{a}\) als <strong>sqrt(a)</strong>.</li>
    <li>Geben Sie \(\varphi\) im Intervall von \((0; 2 \cdot \pi]\) ein.</li>
</ul>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p dir="ltr"><strong>Lösungsweg:</strong></p>
<p dir="ltr">Die komplexe Zahl \(z = \displaystyle {@z@}\) besteht aus \(\mathrm{Re}(z) = \displaystyle {@x@}\) und \(\mathrm{Im}(z) = \displaystyle {@y@}\) und liegt somit im {@s@}.Quadranten.</p>
<p dir="ltr">Dann ist \(r = \sqrt{(\mathrm{Re}(z))^2+(\mathrm{Im}(z))^2}\) \(= \displaystyle \sqrt{\left({@x@}\right)^{\!2}+\left({@y@}\right)^{\!2}} \) \(= \displaystyle \sqrt{{@x^2@}+{@y^2@}}\) \(= \displaystyle \sqrt{{@x^2+y^2@}} = {@loes_r@}\).</p>
<p dir="ltr">Da die komplexe Zahl \(z\) im {@s@}.Quadranten liegt, gilt:</p>
<p dir="ltr">\(\varphi =&nbsp;\displaystyle&nbsp; \arctan\!\left(\dfrac{\mathrm{Im}(z)}{\mathrm{Re}(z)}\right) + {@plus@} \) \(=&nbsp;\displaystyle&nbsp; \arctan\!\left(\dfrac{{@y@}}{{@x@}}\right) + {@plus@} \)&nbsp;\(=&nbsp;\displaystyle&nbsp; \arctan\!\left({@y_x@}\right) + {@plus@} \) \(= \displaystyle&nbsp;{@phi_y_x@} + {@plus@} = {@phi_y_x+plus@}\).</p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text>s: rand_with_step(1,4,1);
n: rand_with_step(1,6,1);

liste_r: [2,3,5,6,7,8];
r: liste_r[n];

liste_t: [1,5,-5,-1];
t: liste_t[s];

liste_z: [sqrt(3*r)+sqrt(r)*%i, -sqrt(3*r)+sqrt(r)*%i, -sqrt(3*r)-sqrt(r)*%i, sqrt(3*r)-sqrt(r)*%i ];
z: liste_z[s];

liste_tp: [%pi/6, (5*%pi)/6, (7*%pi)/6, (11*%pi)/6 ];
tp: liste_tp[s];

loes_r: sqrt(r+3*r);

x : realpart(z);
y : imagpart(z);
phi: atan(y/x);
liste_plus: [0,pi,pi,2*%pi];
plus: liste_plus[s];
y_x_liste: [1/sqrt(3),-1/sqrt(3),1/sqrt(3),-1/sqrt(3)];
y_x: y_x_liste[s];
phi_y_x: atan(y_x);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text><![CDATA[<p></p>
<p>&nbsp;</p>]]></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(z\,=\,{@z@},  (r,\varphi ) = ({@loes_r@},{@tp@})\)</text>
    </questionnote>
    <questiondescription format="moodle_auto_format">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>loes_r</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>tp</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>[ans1,ans2]</sans>
        <tans>[loes_r,tp]</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>1882708376</deployedseed>
    <deployedseed>2100283198</deployedseed>
    <deployedseed>176146169</deployedseed>
    <deployedseed>171496437</deployedseed>
    <deployedseed>591928281</deployedseed>
    <deployedseed>555577362</deployedseed>
    <deployedseed>1879863618</deployedseed>
    <deployedseed>276774745</deployedseed>
    <deployedseed>1337626174</deployedseed>
    <deployedseed>1580442860</deployedseed>
    <deployedseed>402296995</deployedseed>
    <deployedseed>774466248</deployedseed>
    <deployedseed>687648338</deployedseed>
    <deployedseed>460085769</deployedseed>
    <deployedseed>2078906329</deployedseed>
    <deployedseed>715395454</deployedseed>
    <deployedseed>129361002</deployedseed>
    <deployedseed>1773346470</deployedseed>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
    </tags>
  </question>

<!-- question: 807432  -->
  <question type="stack">
    <name>
      <text>Komplexe Zahlen: Potenz</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p>Sei die folgende komplexe Zahl gegeben</p><div class="editor-indent" style="margin-left: 30px;"><p>\(z=-{@a@}+{@a@}i\),</p></div><span style=""><span>deren Argument im Intervall \(]-\pi,\pi]\) liegt.<br><br><strong>Hinweis: </strong></span>Benutzen Sie für \(\sqrt{a}\) die Eingabeform <strong>sqrt(a)</strong>&nbsp;sowie für \(\pi \) die Eingabeform <strong>pi</strong>.&nbsp;</span><p><br></p><p>Berechnen Sie<br></p><p><span style="">&nbsp;</span></p><p></p><p><strong>(a)&nbsp;</strong>\(z\) in Exponentialform:</p><div class="editor-indent" style="margin-left: 30px;"><div><p>\(z=\) [[input:ans1]] \(\cdot \text{exp}\big(\)[[input:ans2]]\(\big)\) [[validation:ans1]][[validation:ans2]][[feedback:prt1]][[feedback:prt2]]</p></div></div><div class="editor-indent" style="margin-left: 30px;"><p></p></div><p><br></p><p><strong>(b)</strong> \(z^4\) in Exponentialform:</p><div class="editor-indent" style="margin-left: 30px;"><p>\(z^4=\) [[input:ans3]] \(\cdot \text{exp}\big(\)[[input:ans4]]\(\big)\) [[validation:ans3]][[validation:ans4]][[feedback:prt3]][[feedback:prt4]]</p><p><br></p></div><span style=""><p style=""><strong>(c)&nbsp;</strong>\(z^4\) in Standardform:</p></span><p></p><div class="editor-indent" style="margin-left: 30px;"><p><span style=""></span></p><p style=""><strong>Hinweis:</strong>&nbsp;<span>Für den Fall, dass kein Real-/Imaginärteil existiert, tragen Sie in das entsprechende Feld<strong>&nbsp;0</strong>&nbsp;ein.</span></p><p></p></div><p></p><div class="editor-indent" style="margin-left: 30px;"><span style=""><div style=""><p style="">\(z^4=\) [[input:ans5]] \(+i\cdot\) [[input:ans6]] [[validation:ans5]][[validation:ans6]][[feedback:prt5]][[feedback:prt6]]</p></div></span></div><span style=""><br></span><p></p><p></p><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<h4><strong>Lösung</strong></h4><p><br></p><p><span></span></p><p style=""><strong style="font-weight: bold;">(a)&nbsp;</strong>\(z\) in Exponentialform:</p><p style=""></p><ul><li><span><p style="">\(r=|z|=\sqrt{(-{@a@})^2+{@a@}^2}={@l1@}\)</p></span></li><li><p style="">\(\varphi=\text{arg}(z)=\arctan(\frac{-{@a@}}{{@a@}})+\pi=\frac{3 \pi}{4}\)</p></li></ul><p></p><p></p><div class="editor-indent" style="margin-left: 30px;"><p><span></span></p><div style=""><p style="">\(z=re^{\varphi i}={@l1@}e^{{@l2@}}\)&nbsp;</p></div><p></p></div><p><span></span></p><p style="font-weight: bold;"><br></p><p style=""></p><p><strong>(b)</strong>&nbsp;\(z^4\) in Exponentialform:</p><p></p><div class="editor-indent" style="margin-left: 30px;"><div><div><p>\(z^4=({@l1@}e^{{@l2@}})^4=({@l1@})^4e^{{@l2@}\cdot 4}={@l3@}e^{3\pi i}={@l3@}e^{{@l4@}}\)&nbsp;</p></div></div></div><div><p></p><div><p><br></p></div><p></p></div><p></p><div><p></p><p><strong>(c)&nbsp;</strong>\(z^4\) in Normalform:</p><div><p></p></div><p></p><p></p><p></p></div><div class="editor-indent" style="margin-left: 30px;"><div><p></p><div><div><div><p>\(z^4={@l3@}e^{{@l4@}}={@l3@}\big(\cos(\pi)+i\sin(\pi)\big)=-{@l3@}\)</p></div></div></div><p></p></div></div><div><p></p><div><p></p></div></div><p><br></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text>a: 2+rand(4)

l1: sqrt(2*a^2)
l2: 3*pi/4*%i
l3: sqrt(2*a^2)^4
l4: pi*%i
l5: -l3
l6: 0</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>Potenz</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>(</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>l1</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>l2</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>l3</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>algebraic</type>
      <tans>l4</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans5</name>
      <type>algebraic</type>
      <tans>l5</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans6</name>
      <type>algebraic</type>
      <tans>l6</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>l1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>l2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>3*pi/4</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.5</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt3</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>l3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt3-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt3-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt4</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>l4</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt4-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt4-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>pi</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.5</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt4-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt4-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt5</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans5</sans>
        <tans>l5</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt5-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt5-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt6</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans6</sans>
        <tans>l6</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt6-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt6-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>praxiserprobt</text>
</tag>
      <tag><text>te:3:polarform</text>
</tag>
      <tag><text>TE:1:Komplexe Zahlen</text>
</tag>
      <tag><text>te:2:Rechenregeln</text>
</tag>
      <tag><text>TE:3:Potenzen</text>
</tag>
      <tag><text>te:3:Normalform</text>
</tag>
      <tag><text>src:F07-INT</text>
</tag>
      <tag><text>Bloom:3</text>
</tag>
      <tag><text>Maier:1:2</text>
</tag>
      <tag><text>Maier:2:2</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:TaggingGeprueft</text>
</tag>
      <tag><text>qs:importIliasGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 806894  -->
  <question type="stack">
    <name>
      <text><![CDATA[Komplexe Zahlen: Summe, Produkt, konjugiert [{"DOMAINUID":"3326AB4"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben sind die komplexen Zahlen&nbsp;\(z_1 = {@z1@}\) und \(z_2 = {@z2@}\).</p>
<p></p>
<p>Berechnen Sie die folgenden Ausdrücke und schreiben Sie diese als arithmetische Darstellung (z.B. \(a+b\cdot\mathrm{i}\) mit \(a,b \in \mathbb{R}\)).</p>
<p>(1) \( z_1 + z_2 =\,\) [[input:ans1]] [[validation:ans1]] [[feedback:prt1]]</p>
<p>(2) \(z_1 - z_2=\,\) [[input:ans2]] [[validation:ans2]] [[feedback:prt2]]</p>
<p>(3) \(z_1 \cdot z_2=\,\) [[input:ans3]] [[validation:ans3]] [[feedback:prt3]]</p>
<p>(4) \(\dfrac{z_1}{z_2}=\,\) [[input:ans4]] [[validation:ans4]] [[feedback:prt4]]</p>
<p>(5) \(\overline{z_1}=\,\) [[input:ans5]] [[validation:ans5]] [[feedback:prt5]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;"><strong>Lösungsweg:</strong></p>
<p dir="ltr" style="text-align: left;"></p>
<p>(1) \( z_1 + z_2 =&nbsp; ({@z1@}) + ({@z2@}) = {@loes1@}\)&nbsp;</p>
<p>(2) \(z_1 - z_2 =&nbsp;({@z1@}) - ({@z2@}) =&nbsp; ({@z1@}) + ({@-z2@}) = {@loes2@}\)&nbsp;&nbsp;</p>
<p>(3) \(z_1 \cdot z_2 = ({@z1@}) \cdot ({@z2@}) =&nbsp;({@b*i*d*i+b*i*c@}) +&nbsp;({@a*d*i+a*c@})&nbsp;= {@loes3@}\)</p>
<p>(4) Mit \(\overline{z_2} =&nbsp;\overline{{@z2@}} = {@z2q@}\) und \(|z_2|^2 = ({@d@})^2+({@c@})^2 = {@d^2@}+{@c^2@} = {@d^2+c^2@}\)&nbsp;gilt:</p><p></p>
<p>\(\dfrac{z_1}{z_2} = \dfrac{z_1\cdot \overline{z_2}}{z_2 \cdot \overline{z_2}} = \dfrac{z_1\cdot \overline{z_2}}{|z_2|^2}=\dfrac{({@z1@})\cdot ({@z2q@})}{{@d^2+c^2@}}= \dfrac{{@-b*i*d*i+b*i*c@} + {@-a*d*i+a*c@}}{{@d^2+c^2@}}=\displaystyle {@loes4@}\)</p>
<p>(5) \(\overline{z_1}&nbsp;=&nbsp;\overline{{@z1@}} = {@loes5@}\)</p><br>
<p></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text>a: rand_with_prohib(-4,4,[0]);
b: rand_with_prohib(-9,9,[0]);

c: rand_with_prohib(-4,4,[0]);
d: rand_with_prohib(-9,9,[0]);

z1: b*%i + a;

z2: d*%i + c;
z2q: rectform(conjugate(z2));

loes1: rectform((z1)+(z2));
loes2: rectform((z1)-(z2));
loes3: rectform((z1)*(z2));
loes4: rectform( (z1)/(z2) );
loes41: combine(loes4);
loes5: rectform(conjugate(z1));</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\[({@z1@})+({@z2@})={@loes1@}\]
\[({@z1@})-({@z2@})={@loes2@}\]
\[({@z1@})*({@z2@})={@loes3@}\]
\[({@z1@})/({@z2@})={@loes4@}\]
\[\overline{{@z1@}}={@loes5@}\]</text>
    </questionnote>
    <questiondescription format="moodle_auto_format">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>loes1</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>1</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>loes2</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>1</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>loes3</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>1</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>algebraic</type>
      <tans>loes41</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>1</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans5</name>
      <type>algebraic</type>
      <tans>loes5</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>1</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>EqualComAss</answertest>
        <sans>ans1</sans>
        <tans>loes1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>member(i,listofvars(ans1))</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>EqualComAss</answertest>
        <sans>ans2</sans>
        <tans>loes2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>member(i,listofvars(ans1))</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt3</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>EqualComAss</answertest>
        <sans>ans3</sans>
        <tans>loes3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt3-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt3-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>member(i,listofvars(ans1))</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt3-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt3-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt4</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>EqualComAss</answertest>
        <sans>ans4</sans>
        <tans>loes4</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt4-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt4-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>EqualComAss</answertest>
        <sans>ans4</sans>
        <tans>loes41</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt4-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt4-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>member(i,listofvars(ans1))</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt4-3-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt4-3-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt5</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>EqualComAss</answertest>
        <sans>ans5</sans>
        <tans>loes5</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt5-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt5-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>member(i,listofvars(ans1))</sans>
        <tans>true</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt5-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt5-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>1383212669</deployedseed>
    <deployedseed>352628027</deployedseed>
    <deployedseed>955024823</deployedseed>
    <deployedseed>41396105</deployedseed>
    <deployedseed>722213416</deployedseed>
    <deployedseed>1538677150</deployedseed>
    <deployedseed>1982178503</deployedseed>
    <deployedseed>447570440</deployedseed>
    <deployedseed>1309904247</deployedseed>
    <deployedseed>2046594420</deployedseed>
    <deployedseed>1741211229</deployedseed>
    <deployedseed>1704330068</deployedseed>
    <deployedseed>715932749</deployedseed>
    <deployedseed>1809274355</deployedseed>
    <deployedseed>16422770</deployedseed>
    <deployedseed>158035824</deployedseed>
    <deployedseed>129036300</deployedseed>
    <deployedseed>787492258</deployedseed>
    <deployedseed>1383720776</deployedseed>
    <deployedseed>1488989221</deployedseed>
    <deployedseed>1884811243</deployedseed>
    <deployedseed>1735073238</deployedseed>
    <deployedseed>1400279207</deployedseed>
    <deployedseed>853397073</deployedseed>
    <deployedseed>1142383278</deployedseed>
    <deployedseed>1198405001</deployedseed>
    <deployedseed>1756227866</deployedseed>
    <deployedseed>305946352</deployedseed>
    <deployedseed>1746253211</deployedseed>
    <deployedseed>479253829</deployedseed>
    <deployedseed>818073895</deployedseed>
    <deployedseed>1706476828</deployedseed>
    <deployedseed>1069200220</deployedseed>
    <deployedseed>1372355046</deployedseed>
    <deployedseed>169721995</deployedseed>
    <deployedseed>31550986</deployedseed>
    <deployedseed>884032109</deployedseed>
    <deployedseed>1069758784</deployedseed>
    <deployedseed>1594468931</deployedseed>
    <deployedseed>838094929</deployedseed>
    <deployedseed>2064273711</deployedseed>
    <deployedseed>730469881</deployedseed>
    <deployedseed>287503949</deployedseed>
    <deployedseed>237011209</deployedseed>
    <deployedseed>528720951</deployedseed>
    <deployedseed>357668111</deployedseed>
    <deployedseed>1994599890</deployedseed>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
    </tags>
  </question>

<!-- question: 806732  -->
  <question type="stack">
    <name>
      <text><![CDATA[Komplexe Zahlen: Wurzel [{"DOMAINUID":"684855D"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben sind die komplexen Zahlen:</p>
<p>\[z_1=@z1@\]</p>
<p>\[z_2=@z2@\]</p>
<p> </p>
<p>Berechnen Sie den folgenden Ausdruck.</p>
<p>\[\Large\sqrt[@w@]{z_1\cdot z_2}\]</p>
<p> </p>
<p>Berechnen Sie die Antwort in der Polarform \[\large z= r\cdot e^{\,j\cdot(\varphi+\alpha\cdot k)}, k=0,1,...\] und geben Sie \(\,r\,\), \(\,\varphi\,\) und \(\,\alpha\,\) ein.</p>
<p> </p>
<p><strong>Hinweise:</strong></p>
<ul>
<li>Geben Sie die exakte Antworten ein. Keine Dezimalzahlen.</li>
<li>Schreiben Sie \(\pi\) als <strong>pi</strong>.</li>
<li>Schreiben Sie \(\large\sqrt[n]{a}\) als <strong>a^(1/n)</strong></li>
</ul>
<p> </p>
<p>\(r=\,\)[[input:ans1]] [[validation:ans1]]</p>
<p>\(\varphi=\,\)[[input:ans2]] [[validation:ans2]]</p>
<p>\(\alpha=\,\)[[input:ans3]] [[validation:ans3]]</p>
<p>[[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text>w: rand_with_step(3,4,1);

z1_re: rand_with_prohib(-5,5,[0]);
z1_im: rand([z1_re,-1*z1_re])
z1: (z1_re)+(z1_im)*%i;

z2_re: rand_with_prohib(-5,5,[0,z1_re,-z1_re]);
z2_im: rand([z2_re,-1*z2_re])
z2: (z2_re)+(z2_im)*%i;

z1_arg: carg(z1);
z1_abs: abs(z1);
z2_arg: carg(z2);
z2_abs: abs(z2);
labs: (z2_abs*(z1_abs))^(1/w);
larg: (1/w)*(z1_arg+z2_arg);
abstand: (1/w)*2*%pi;</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(\sqrt[@w@]{@z1@\cdot @z2@}=(@labs@,@larg@,@abstand@)\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>j</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>labs</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>larg</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>abstand</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>p: 0;
h: for i:-4 step 1 thru 4 do if larg+i*abstand-ans2=0 then p:1;</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>labs</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>\(r\) ist korrekt.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(r\) ist falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>p</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>\(\varphi\) ist korrekt.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(\varphi\) ist falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>abstand</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>3</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>\(\alpha\) ist korrekt.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>3</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(\alpha\) ist falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>[ans1,p,ans3]</sans>
        <tans>[labs,1,abstand]</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>319186769</deployedseed>
    <deployedseed>808332005</deployedseed>
    <deployedseed>1144714592</deployedseed>
    <deployedseed>108697833</deployedseed>
    <deployedseed>126793266</deployedseed>
    <deployedseed>2126030096</deployedseed>
    <deployedseed>1017678581</deployedseed>
    <deployedseed>891774482</deployedseed>
    <deployedseed>1909395835</deployedseed>
    <deployedseed>684225392</deployedseed>
    <deployedseed>638345987</deployedseed>
    <deployedseed>624883714</deployedseed>
    <deployedseed>674345996</deployedseed>
    <deployedseed>1778103106</deployedseed>
    <deployedseed>354046804</deployedseed>
    <deployedseed>754883998</deployedseed>
    <deployedseed>1026054642</deployedseed>
    <deployedseed>1289137452</deployedseed>
    <deployedseed>791122487</deployedseed>
    <deployedseed>583588491</deployedseed>
    <deployedseed>833006904</deployedseed>
    <deployedseed>856991826</deployedseed>
    <deployedseed>1928469458</deployedseed>
    <deployedseed>2103001651</deployedseed>
    <deployedseed>1685831077</deployedseed>
    <deployedseed>1357178056</deployedseed>
    <deployedseed>865493349</deployedseed>
    <deployedseed>14228774</deployedseed>
    <deployedseed>179784383</deployedseed>
    <deployedseed>1340676804</deployedseed>
    <deployedseed>1850742726</deployedseed>
  </question>

<!-- question: 806733  -->
  <question type="stack">
    <name>
      <text><![CDATA[Komplexe Zahlen: Wurzel [{"DOMAINUID":"684855D"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben sind die komplexen Zahlen:</p>
<p>\[z_1=@z1@\]</p>
<p>\[z_2=@z2@\]</p>
<p> </p>
<p>Berechnen Sie den folgenden Ausdruck.</p>
<p>\[\Large\sqrt[@w@]{z_1\cdot z_2}\]</p>
<p> </p>
<p>Berechnen Sie die Antwort in der Polarform \[\large z= r\cdot e^{\,j\cdot(\varphi+\alpha\cdot k)}, k=0,1,...\] und geben Sie \(\,r\,\), \(\,\varphi\,\) und \(\,\alpha\,\) ein.</p>
<p> </p>
<p><strong>Hinweise:</strong></p>
<ul>
<li>Geben Sie die exakte Antworten ein. Keine Dezimalzahlen.</li>
<li>Schreiben Sie \(\pi\) als <strong>pi</strong>.</li>
<li>Schreiben Sie \(\large\sqrt[n]{a}\) als <strong>a^(1/n)</strong></li>
</ul>
<p> </p>
<p>\(r=\,\)[[input:ans1]] [[validation:ans1]]</p>
<p>\(\varphi=\,\)[[input:ans2]] [[validation:ans2]]</p>
<p>\(\alpha=\,\)[[input:ans3]] [[validation:ans3]]</p>
<p>[[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text>w: rand_with_step(3,4,1);

z1_re: rand_with_prohib(-5,5,[0]);
z1_im: rand([z1_re,-1*z1_re])
z1: (z1_re)+(z1_im)*%i;

z2_re: rand_with_prohib(-5,5,[0,z1_re,-z1_re]);
z2_im: rand([z2_re,-1*z2_re])
z2: (z2_re)+(z2_im)*%i;

z1_arg: carg(z1);
z1_abs: abs(z1);
z2_arg: carg(z2);
z2_abs: abs(z2);
labs: (z2_abs*(z1_abs))^(1/w);
larg: (1/w)*(z1_arg+z2_arg);
abstand: (1/w)*2*%pi;</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(\sqrt[@w@]{@z1@\cdot @z2@}=(@labs@,@larg@,@abstand@)\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>j</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>labs</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>larg</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>abstand</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>p: 0;
h: for i:-4 step 1 thru 4 do if larg+i*abstand-ans2=0 then p:1;</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>labs</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>\(r\) ist korrekt.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(r\) ist falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>p</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>\(\varphi\) ist korrekt.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(\varphi\) ist falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>abstand</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>3</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>\(\alpha\) ist korrekt.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>3</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(\alpha\) ist falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>[ans1,p,ans3]</sans>
        <tans>[labs,1,abstand]</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>319186769</deployedseed>
    <deployedseed>808332005</deployedseed>
    <deployedseed>1144714592</deployedseed>
    <deployedseed>108697833</deployedseed>
    <deployedseed>126793266</deployedseed>
    <deployedseed>2126030096</deployedseed>
    <deployedseed>1017678581</deployedseed>
    <deployedseed>891774482</deployedseed>
    <deployedseed>1909395835</deployedseed>
    <deployedseed>684225392</deployedseed>
    <deployedseed>638345987</deployedseed>
    <deployedseed>624883714</deployedseed>
    <deployedseed>674345996</deployedseed>
    <deployedseed>1778103106</deployedseed>
    <deployedseed>354046804</deployedseed>
    <deployedseed>754883998</deployedseed>
    <deployedseed>1026054642</deployedseed>
    <deployedseed>1289137452</deployedseed>
    <deployedseed>791122487</deployedseed>
    <deployedseed>583588491</deployedseed>
    <deployedseed>833006904</deployedseed>
    <deployedseed>856991826</deployedseed>
    <deployedseed>1928469458</deployedseed>
    <deployedseed>2103001651</deployedseed>
    <deployedseed>1685831077</deployedseed>
    <deployedseed>1357178056</deployedseed>
    <deployedseed>865493349</deployedseed>
    <deployedseed>14228774</deployedseed>
    <deployedseed>179784383</deployedseed>
    <deployedseed>1340676804</deployedseed>
    <deployedseed>1850742726</deployedseed>
  </question>

<!-- question: 806961  -->
  <question type="stack">
    <name>
      <text><![CDATA[Komplexe Zahlen: Wurzel [{"DOMAINUID":"684855D"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben sind die komplexen Zahlen:</p>
<p>\[z_1=@z1@\]</p>
<p>\[z_2=@z2@\]</p>
<p> </p>
<p>Berechnen Sie den folgenden Ausdruck.</p>
<p>\[\Large\sqrt[@w@]{z_1\cdot z_2}\]</p>
<p> </p>
<p>Berechnen Sie die Antwort in der Polarform \[\large z= r\cdot e^{\,j\cdot(\varphi+\alpha\cdot k)}, k=0,1,...\] und geben Sie \(\,r\,\), \(\,\varphi\,\) und \(\,\alpha\,\) ein.</p>
<p> </p>
<p><strong>Hinweise:</strong></p>
<ul>
<li>Geben Sie die exakte Antworten ein. Keine Dezimalzahlen.</li>
<li>Schreiben Sie \(\pi\) als <strong>pi</strong>.</li>
<li>Schreiben Sie \(\large\sqrt[n]{a}\) als <strong>a^(1/n)</strong></li>
</ul>
<p> </p>
<p>\(r=\,\)[[input:ans1]] [[validation:ans1]]</p>
<p>\(\varphi=\,\)[[input:ans2]] [[validation:ans2]]</p>
<p>\(\alpha=\,\)[[input:ans3]] [[validation:ans3]]</p>
<p>[[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text>w: rand_with_step(3,4,1);

z1_re: rand_with_prohib(-5,5,[0]);
z1_im: rand([z1_re,-1*z1_re])
z1: (z1_re)+(z1_im)*%i;

z2_re: rand_with_prohib(-5,5,[0,z1_re,-z1_re]);
z2_im: rand([z2_re,-1*z2_re])
z2: (z2_re)+(z2_im)*%i;

z1_arg: carg(z1);
z1_abs: abs(z1);
z2_arg: carg(z2);
z2_abs: abs(z2);
labs: (z2_abs*(z1_abs))^(1/w);
larg: (1/w)*(z1_arg+z2_arg);
abstand: (1/w)*2*%pi;</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(\sqrt[@w@]{@z1@\cdot @z2@}=(@labs@,@larg@,@abstand@)\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>j</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>labs</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>larg</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>abstand</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>p: 0;
h: for i:-4 step 1 thru 4 do if larg+i*abstand-ans2=0 then p:1;</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>labs</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>\(r\) ist korrekt.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(r\) ist falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>p</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>\(\varphi\) ist korrekt.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(\varphi\) ist falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>abstand</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>3</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>\(\alpha\) ist korrekt.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>3</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(\alpha\) ist falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>[ans1,p,ans3]</sans>
        <tans>[labs,1,abstand]</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>319186769</deployedseed>
    <deployedseed>808332005</deployedseed>
    <deployedseed>1144714592</deployedseed>
    <deployedseed>108697833</deployedseed>
    <deployedseed>126793266</deployedseed>
    <deployedseed>2126030096</deployedseed>
    <deployedseed>1017678581</deployedseed>
    <deployedseed>891774482</deployedseed>
    <deployedseed>1909395835</deployedseed>
    <deployedseed>684225392</deployedseed>
    <deployedseed>638345987</deployedseed>
    <deployedseed>624883714</deployedseed>
    <deployedseed>674345996</deployedseed>
    <deployedseed>1778103106</deployedseed>
    <deployedseed>354046804</deployedseed>
    <deployedseed>754883998</deployedseed>
    <deployedseed>1026054642</deployedseed>
    <deployedseed>1289137452</deployedseed>
    <deployedseed>791122487</deployedseed>
    <deployedseed>583588491</deployedseed>
    <deployedseed>833006904</deployedseed>
    <deployedseed>856991826</deployedseed>
    <deployedseed>1928469458</deployedseed>
    <deployedseed>2103001651</deployedseed>
    <deployedseed>1685831077</deployedseed>
    <deployedseed>1357178056</deployedseed>
    <deployedseed>865493349</deployedseed>
    <deployedseed>14228774</deployedseed>
    <deployedseed>179784383</deployedseed>
    <deployedseed>1340676804</deployedseed>
    <deployedseed>1850742726</deployedseed>
  </question>

<!-- question: 806966  -->
  <question type="stack">
    <name>
      <text><![CDATA[Komplexe Zahlen: Wurzel [{"DOMAINUID":"684855D"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben sind die komplexen Zahlen:</p>
<p>\[z_1=@z1@\]</p>
<p>\[z_2=@z2@\]</p>
<p> </p>
<p>Berechnen Sie den folgenden Ausdruck.</p>
<p>\[\Large\sqrt[@w@]{z_1\cdot z_2}\]</p>
<p> </p>
<p>Berechnen Sie die Antwort in der Polarform \[\large z= r\cdot e^{\,j\cdot(\varphi+\alpha\cdot k)}, k=0,1,...\] und geben Sie \(\,r\,\), \(\,\varphi\,\) und \(\,\alpha\,\) ein.</p>
<p> </p>
<p><strong>Hinweise:</strong></p>
<ul>
<li>Geben Sie die exakte Antworten ein. Keine Dezimalzahlen.</li>
<li>Schreiben Sie \(\pi\) als <strong>pi</strong>.</li>
<li>Schreiben Sie \(\large\sqrt[n]{a}\) als <strong>a^(1/n)</strong></li>
</ul>
<p> </p>
<p>\(r=\,\)[[input:ans1]] [[validation:ans1]]</p>
<p>\(\varphi=\,\)[[input:ans2]] [[validation:ans2]]</p>
<p>\(\alpha=\,\)[[input:ans3]] [[validation:ans3]]</p>
<p>[[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text>w: rand_with_step(3,4,1);

z1_re: rand_with_prohib(-5,5,[0]);
z1_im: rand([z1_re,-1*z1_re])
z1: (z1_re)+(z1_im)*%i;

z2_re: rand_with_prohib(-5,5,[0,z1_re,-z1_re]);
z2_im: rand([z2_re,-1*z2_re])
z2: (z2_re)+(z2_im)*%i;

z1_arg: carg(z1);
z1_abs: abs(z1);
z2_arg: carg(z2);
z2_abs: abs(z2);
labs: (z2_abs*(z1_abs))^(1/w);
larg: (1/w)*(z1_arg+z2_arg);
abstand: (1/w)*2*%pi;</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(\sqrt[@w@]{@z1@\cdot @z2@}=(@labs@,@larg@,@abstand@)\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>j</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>labs</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>larg</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>abstand</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>p: 0;
h: for i:-4 step 1 thru 4 do if larg+i*abstand-ans2=0 then p:1;</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>labs</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>\(r\) ist korrekt.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(r\) ist falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>p</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>\(\varphi\) ist korrekt.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(\varphi\) ist falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>abstand</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>3</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>\(\alpha\) ist korrekt.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>3</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(\alpha\) ist falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>[ans1,p,ans3]</sans>
        <tans>[labs,1,abstand]</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>319186769</deployedseed>
    <deployedseed>808332005</deployedseed>
    <deployedseed>1144714592</deployedseed>
    <deployedseed>108697833</deployedseed>
    <deployedseed>126793266</deployedseed>
    <deployedseed>2126030096</deployedseed>
    <deployedseed>1017678581</deployedseed>
    <deployedseed>891774482</deployedseed>
    <deployedseed>1909395835</deployedseed>
    <deployedseed>684225392</deployedseed>
    <deployedseed>638345987</deployedseed>
    <deployedseed>624883714</deployedseed>
    <deployedseed>674345996</deployedseed>
    <deployedseed>1778103106</deployedseed>
    <deployedseed>354046804</deployedseed>
    <deployedseed>754883998</deployedseed>
    <deployedseed>1026054642</deployedseed>
    <deployedseed>1289137452</deployedseed>
    <deployedseed>791122487</deployedseed>
    <deployedseed>583588491</deployedseed>
    <deployedseed>833006904</deployedseed>
    <deployedseed>856991826</deployedseed>
    <deployedseed>1928469458</deployedseed>
    <deployedseed>2103001651</deployedseed>
    <deployedseed>1685831077</deployedseed>
    <deployedseed>1357178056</deployedseed>
    <deployedseed>865493349</deployedseed>
    <deployedseed>14228774</deployedseed>
    <deployedseed>179784383</deployedseed>
    <deployedseed>1340676804</deployedseed>
    <deployedseed>1850742726</deployedseed>
  </question>

<!-- question: 806971  -->
  <question type="stack">
    <name>
      <text><![CDATA[Komplexe Zahlen: Wurzel [{"DOMAINUID":"684855D"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben sind die komplexen Zahlen:</p>
<p>\[z_1=@z1@\]</p>
<p>\[z_2=@z2@\]</p>
<p> </p>
<p>Berechnen Sie den folgenden Ausdruck.</p>
<p>\[\Large\sqrt[@w@]{z_1\cdot z_2}\]</p>
<p> </p>
<p>Berechnen Sie die Antwort in der Polarform \[\large z= r\cdot e^{\,j\cdot(\varphi+\alpha\cdot k)}, k=0,1,...\] und geben Sie \(\,r\,\), \(\,\varphi\,\) und \(\,\alpha\,\) ein.</p>
<p> </p>
<p><strong>Hinweise:</strong></p>
<ul>
<li>Geben Sie die exakte Antworten ein. Keine Dezimalzahlen.</li>
<li>Schreiben Sie \(\pi\) als <strong>pi</strong>.</li>
<li>Schreiben Sie \(\large\sqrt[n]{a}\) als <strong>a^(1/n)</strong></li>
</ul>
<p> </p>
<p>\(r=\,\)[[input:ans1]] [[validation:ans1]]</p>
<p>\(\varphi=\,\)[[input:ans2]] [[validation:ans2]]</p>
<p>\(\alpha=\,\)[[input:ans3]] [[validation:ans3]]</p>
<p>[[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text>w: rand_with_step(3,4,1);

z1_re: rand_with_prohib(-5,5,[0]);
z1_im: rand([z1_re,-1*z1_re])
z1: (z1_re)+(z1_im)*%i;

z2_re: rand_with_prohib(-5,5,[0,z1_re,-z1_re]);
z2_im: rand([z2_re,-1*z2_re])
z2: (z2_re)+(z2_im)*%i;

z1_arg: carg(z1);
z1_abs: abs(z1);
z2_arg: carg(z2);
z2_abs: abs(z2);
labs: (z2_abs*(z1_abs))^(1/w);
larg: (1/w)*(z1_arg+z2_arg);
abstand: (1/w)*2*%pi;</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(\sqrt[@w@]{@z1@\cdot @z2@}=(@labs@,@larg@,@abstand@)\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>j</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>labs</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>larg</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>abstand</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>p: 0;
h: for i:-4 step 1 thru 4 do if larg+i*abstand-ans2=0 then p:1;</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>labs</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>\(r\) ist korrekt.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(r\) ist falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>p</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>\(\varphi\) ist korrekt.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(\varphi\) ist falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>abstand</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>3</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>\(\alpha\) ist korrekt.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>3</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(\alpha\) ist falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>[ans1,p,ans3]</sans>
        <tans>[labs,1,abstand]</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>319186769</deployedseed>
    <deployedseed>808332005</deployedseed>
    <deployedseed>1144714592</deployedseed>
    <deployedseed>108697833</deployedseed>
    <deployedseed>126793266</deployedseed>
    <deployedseed>2126030096</deployedseed>
    <deployedseed>1017678581</deployedseed>
    <deployedseed>891774482</deployedseed>
    <deployedseed>1909395835</deployedseed>
    <deployedseed>684225392</deployedseed>
    <deployedseed>638345987</deployedseed>
    <deployedseed>624883714</deployedseed>
    <deployedseed>674345996</deployedseed>
    <deployedseed>1778103106</deployedseed>
    <deployedseed>354046804</deployedseed>
    <deployedseed>754883998</deployedseed>
    <deployedseed>1026054642</deployedseed>
    <deployedseed>1289137452</deployedseed>
    <deployedseed>791122487</deployedseed>
    <deployedseed>583588491</deployedseed>
    <deployedseed>833006904</deployedseed>
    <deployedseed>856991826</deployedseed>
    <deployedseed>1928469458</deployedseed>
    <deployedseed>2103001651</deployedseed>
    <deployedseed>1685831077</deployedseed>
    <deployedseed>1357178056</deployedseed>
    <deployedseed>865493349</deployedseed>
    <deployedseed>14228774</deployedseed>
    <deployedseed>179784383</deployedseed>
    <deployedseed>1340676804</deployedseed>
    <deployedseed>1850742726</deployedseed>
  </question>

<!-- question: 806976  -->
  <question type="stack">
    <name>
      <text><![CDATA[Komplexe Zahlen: Wurzel [{"DOMAINUID":"684855D"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben sind die komplexen Zahlen:</p>
<p>\[z_1=@z1@\]</p>
<p>\[z_2=@z2@\]</p>
<p> </p>
<p>Berechnen Sie den folgenden Ausdruck.</p>
<p>\[\Large\sqrt[@w@]{z_1\cdot z_2}\]</p>
<p> </p>
<p>Berechnen Sie die Antwort in der Polarform \[\large z= r\cdot e^{\,j\cdot(\varphi+\alpha\cdot k)}, k=0,1,...\] und geben Sie \(\,r\,\), \(\,\varphi\,\) und \(\,\alpha\,\) ein.</p>
<p> </p>
<p><strong>Hinweise:</strong></p>
<ul>
<li>Geben Sie die exakte Antworten ein. Keine Dezimalzahlen.</li>
<li>Schreiben Sie \(\pi\) als <strong>pi</strong>.</li>
<li>Schreiben Sie \(\large\sqrt[n]{a}\) als <strong>a^(1/n)</strong></li>
</ul>
<p> </p>
<p>\(r=\,\)[[input:ans1]] [[validation:ans1]]</p>
<p>\(\varphi=\,\)[[input:ans2]] [[validation:ans2]]</p>
<p>\(\alpha=\,\)[[input:ans3]] [[validation:ans3]]</p>
<p>[[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text>w: rand_with_step(3,4,1);

z1_re: rand_with_prohib(-5,5,[0]);
z1_im: rand([z1_re,-1*z1_re])
z1: (z1_re)+(z1_im)*%i;

z2_re: rand_with_prohib(-5,5,[0,z1_re,-z1_re]);
z2_im: rand([z2_re,-1*z2_re])
z2: (z2_re)+(z2_im)*%i;

z1_arg: carg(z1);
z1_abs: abs(z1);
z2_arg: carg(z2);
z2_abs: abs(z2);
labs: (z2_abs*(z1_abs))^(1/w);
larg: (1/w)*(z1_arg+z2_arg);
abstand: (1/w)*2*%pi;</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(\sqrt[@w@]{@z1@\cdot @z2@}=(@labs@,@larg@,@abstand@)\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>j</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>labs</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>larg</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>abstand</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>p: 0;
h: for i:-4 step 1 thru 4 do if larg+i*abstand-ans2=0 then p:1;</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>labs</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>\(r\) ist korrekt.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(r\) ist falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>p</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>\(\varphi\) ist korrekt.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(\varphi\) ist falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>abstand</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>3</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>\(\alpha\) ist korrekt.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>3</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(\alpha\) ist falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>[ans1,p,ans3]</sans>
        <tans>[labs,1,abstand]</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>319186769</deployedseed>
    <deployedseed>808332005</deployedseed>
    <deployedseed>1144714592</deployedseed>
    <deployedseed>108697833</deployedseed>
    <deployedseed>126793266</deployedseed>
    <deployedseed>2126030096</deployedseed>
    <deployedseed>1017678581</deployedseed>
    <deployedseed>891774482</deployedseed>
    <deployedseed>1909395835</deployedseed>
    <deployedseed>684225392</deployedseed>
    <deployedseed>638345987</deployedseed>
    <deployedseed>624883714</deployedseed>
    <deployedseed>674345996</deployedseed>
    <deployedseed>1778103106</deployedseed>
    <deployedseed>354046804</deployedseed>
    <deployedseed>754883998</deployedseed>
    <deployedseed>1026054642</deployedseed>
    <deployedseed>1289137452</deployedseed>
    <deployedseed>791122487</deployedseed>
    <deployedseed>583588491</deployedseed>
    <deployedseed>833006904</deployedseed>
    <deployedseed>856991826</deployedseed>
    <deployedseed>1928469458</deployedseed>
    <deployedseed>2103001651</deployedseed>
    <deployedseed>1685831077</deployedseed>
    <deployedseed>1357178056</deployedseed>
    <deployedseed>865493349</deployedseed>
    <deployedseed>14228774</deployedseed>
    <deployedseed>179784383</deployedseed>
    <deployedseed>1340676804</deployedseed>
    <deployedseed>1850742726</deployedseed>
  </question>

<!-- question: 806981  -->
  <question type="stack">
    <name>
      <text><![CDATA[Komplexe Zahlen: Wurzel [{"DOMAINUID":"684855D"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben sind die komplexen Zahlen:</p>
<p>\[z_1=@z1@\]</p>
<p>\[z_2=@z2@\]</p>
<p> </p>
<p>Berechnen Sie den folgenden Ausdruck.</p>
<p>\[\Large\sqrt[@w@]{z_1\cdot z_2}\]</p>
<p> </p>
<p>Berechnen Sie die Antwort in der Polarform \[\large z= r\cdot e^{\,j\cdot(\varphi+\alpha\cdot k)}, k=0,1,...\] und geben Sie \(\,r\,\), \(\,\varphi\,\) und \(\,\alpha\,\) ein.</p>
<p> </p>
<p><strong>Hinweise:</strong></p>
<ul>
<li>Geben Sie die exakte Antworten ein. Keine Dezimalzahlen.</li>
<li>Schreiben Sie \(\pi\) als <strong>pi</strong>.</li>
<li>Schreiben Sie \(\large\sqrt[n]{a}\) als <strong>a^(1/n)</strong></li>
</ul>
<p> </p>
<p>\(r=\,\)[[input:ans1]] [[validation:ans1]]</p>
<p>\(\varphi=\,\)[[input:ans2]] [[validation:ans2]]</p>
<p>\(\alpha=\,\)[[input:ans3]] [[validation:ans3]]</p>
<p>[[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text>w: rand_with_step(3,4,1);

z1_re: rand_with_prohib(-5,5,[0]);
z1_im: rand([z1_re,-1*z1_re])
z1: (z1_re)+(z1_im)*%i;

z2_re: rand_with_prohib(-5,5,[0,z1_re,-z1_re]);
z2_im: rand([z2_re,-1*z2_re])
z2: (z2_re)+(z2_im)*%i;

z1_arg: carg(z1);
z1_abs: abs(z1);
z2_arg: carg(z2);
z2_abs: abs(z2);
labs: (z2_abs*(z1_abs))^(1/w);
larg: (1/w)*(z1_arg+z2_arg);
abstand: (1/w)*2*%pi;</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(\sqrt[@w@]{@z1@\cdot @z2@}=(@labs@,@larg@,@abstand@)\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>j</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>labs</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>larg</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>abstand</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>p: 0;
h: for i:-4 step 1 thru 4 do if larg+i*abstand-ans2=0 then p:1;</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>labs</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>\(r\) ist korrekt.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(r\) ist falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>p</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>\(\varphi\) ist korrekt.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(\varphi\) ist falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>abstand</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>3</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>\(\alpha\) ist korrekt.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>3</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(\alpha\) ist falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>[ans1,p,ans3]</sans>
        <tans>[labs,1,abstand]</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>319186769</deployedseed>
    <deployedseed>808332005</deployedseed>
    <deployedseed>1144714592</deployedseed>
    <deployedseed>108697833</deployedseed>
    <deployedseed>126793266</deployedseed>
    <deployedseed>2126030096</deployedseed>
    <deployedseed>1017678581</deployedseed>
    <deployedseed>891774482</deployedseed>
    <deployedseed>1909395835</deployedseed>
    <deployedseed>684225392</deployedseed>
    <deployedseed>638345987</deployedseed>
    <deployedseed>624883714</deployedseed>
    <deployedseed>674345996</deployedseed>
    <deployedseed>1778103106</deployedseed>
    <deployedseed>354046804</deployedseed>
    <deployedseed>754883998</deployedseed>
    <deployedseed>1026054642</deployedseed>
    <deployedseed>1289137452</deployedseed>
    <deployedseed>791122487</deployedseed>
    <deployedseed>583588491</deployedseed>
    <deployedseed>833006904</deployedseed>
    <deployedseed>856991826</deployedseed>
    <deployedseed>1928469458</deployedseed>
    <deployedseed>2103001651</deployedseed>
    <deployedseed>1685831077</deployedseed>
    <deployedseed>1357178056</deployedseed>
    <deployedseed>865493349</deployedseed>
    <deployedseed>14228774</deployedseed>
    <deployedseed>179784383</deployedseed>
    <deployedseed>1340676804</deployedseed>
    <deployedseed>1850742726</deployedseed>
  </question>

<!-- question: 806986  -->
  <question type="stack">
    <name>
      <text><![CDATA[Komplexe Zahlen: Wurzel [{"DOMAINUID":"684855D"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben sind die komplexen Zahlen:</p>
<p>\[z_1=@z1@\]</p>
<p>\[z_2=@z2@\]</p>
<p> </p>
<p>Berechnen Sie den folgenden Ausdruck.</p>
<p>\[\Large\sqrt[@w@]{z_1\cdot z_2}\]</p>
<p> </p>
<p>Berechnen Sie die Antwort in der Polarform \[\large z= r\cdot e^{\,j\cdot(\varphi+\alpha\cdot k)}, k=0,1,...\] und geben Sie \(\,r\,\), \(\,\varphi\,\) und \(\,\alpha\,\) ein.</p>
<p> </p>
<p><strong>Hinweise:</strong></p>
<ul>
<li>Geben Sie die exakte Antworten ein. Keine Dezimalzahlen.</li>
<li>Schreiben Sie \(\pi\) als <strong>pi</strong>.</li>
<li>Schreiben Sie \(\large\sqrt[n]{a}\) als <strong>a^(1/n)</strong></li>
</ul>
<p> </p>
<p>\(r=\,\)[[input:ans1]] [[validation:ans1]]</p>
<p>\(\varphi=\,\)[[input:ans2]] [[validation:ans2]]</p>
<p>\(\alpha=\,\)[[input:ans3]] [[validation:ans3]]</p>
<p>[[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text>w: rand_with_step(3,4,1);

z1_re: rand_with_prohib(-5,5,[0]);
z1_im: rand([z1_re,-1*z1_re])
z1: (z1_re)+(z1_im)*%i;

z2_re: rand_with_prohib(-5,5,[0,z1_re,-z1_re]);
z2_im: rand([z2_re,-1*z2_re])
z2: (z2_re)+(z2_im)*%i;

z1_arg: carg(z1);
z1_abs: abs(z1);
z2_arg: carg(z2);
z2_abs: abs(z2);
labs: (z2_abs*(z1_abs))^(1/w);
larg: (1/w)*(z1_arg+z2_arg);
abstand: (1/w)*2*%pi;</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(\sqrt[@w@]{@z1@\cdot @z2@}=(@labs@,@larg@,@abstand@)\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>j</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>labs</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>larg</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>abstand</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>p: 0;
h: for i:-4 step 1 thru 4 do if larg+i*abstand-ans2=0 then p:1;</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>labs</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>\(r\) ist korrekt.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(r\) ist falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>p</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>\(\varphi\) ist korrekt.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(\varphi\) ist falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>abstand</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>3</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>\(\alpha\) ist korrekt.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>3</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(\alpha\) ist falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>[ans1,p,ans3]</sans>
        <tans>[labs,1,abstand]</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>319186769</deployedseed>
    <deployedseed>808332005</deployedseed>
    <deployedseed>1144714592</deployedseed>
    <deployedseed>108697833</deployedseed>
    <deployedseed>126793266</deployedseed>
    <deployedseed>2126030096</deployedseed>
    <deployedseed>1017678581</deployedseed>
    <deployedseed>891774482</deployedseed>
    <deployedseed>1909395835</deployedseed>
    <deployedseed>684225392</deployedseed>
    <deployedseed>638345987</deployedseed>
    <deployedseed>624883714</deployedseed>
    <deployedseed>674345996</deployedseed>
    <deployedseed>1778103106</deployedseed>
    <deployedseed>354046804</deployedseed>
    <deployedseed>754883998</deployedseed>
    <deployedseed>1026054642</deployedseed>
    <deployedseed>1289137452</deployedseed>
    <deployedseed>791122487</deployedseed>
    <deployedseed>583588491</deployedseed>
    <deployedseed>833006904</deployedseed>
    <deployedseed>856991826</deployedseed>
    <deployedseed>1928469458</deployedseed>
    <deployedseed>2103001651</deployedseed>
    <deployedseed>1685831077</deployedseed>
    <deployedseed>1357178056</deployedseed>
    <deployedseed>865493349</deployedseed>
    <deployedseed>14228774</deployedseed>
    <deployedseed>179784383</deployedseed>
    <deployedseed>1340676804</deployedseed>
    <deployedseed>1850742726</deployedseed>
  </question>

<!-- question: 807429  -->
  <question type="stack">
    <name>
      <text>Komplexe Zahlen: z^4 = -a</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p></p><h4><span style="font-size: 14px; font-weight: normal;">Bestimmen Sie die Lösungen der Gleichung und geben Sie Ihre Lösungen in kartesischer Form an. Außerdem wählen Sie \( \varphi \in [0,2\pi [\) in der Form \( z_j = r \cdot (\cos (\varphi ) + \ i \cdot \sin (\varphi )) \).</span><br></h4><div class="editor-indent" style="margin-left: 30px;"><p><span>\( z^4= {@B@} \)</span></p></div><p><span><br></span></p><p><b><b>Hinweis:</b>&nbsp;</b>Falls kein Real- oder Imaginärpart existiert, tragen Sie in das Feld&nbsp;<span style="">0</span>&nbsp;ein.<br></p><p><span><b>Tipp:&nbsp;</b>Lösen Sie die Aufgabe mit Hilfe der Tabelle für trigonometrische Funktionen.</span></p><p><span><br></span></p><p><span>Lösung im Quadranten I:&nbsp; &nbsp; &nbsp;\(z_0 =\) [[input:ans1]]</span>&nbsp;\(+ \ i \cdot\) [[input:ans2]][[validation:ans1]] [[feedback:prt1]][[validation:ans2]] [[feedback:prt2]]</p><p><span>Lösung im Quadranten II:&nbsp; &nbsp; \(z_1 =\) [[input:ans3]]</span>&nbsp;\(+ \ i \cdot\) [[input:ans4]][[validation:ans3]] [[feedback:prt3]][[validation:ans4]] [[feedback:prt4]]</p><p><span>Lösung im Quadranten III:&nbsp; &nbsp;\(z_2 =\) [[input:ans5]]</span>&nbsp;\(+ \ i \cdot\) [[input:ans6]][[validation:ans5]] [[feedback:prt5]][[validation:ans6]] [[feedback:prt6]]</p><p><span>Lösung im Quadranten IV</span><span style="font-size: 0.9375rem;">:&nbsp; &nbsp;\(z_3 =\) [[input:ans7]] </span><span style="font-size: 0.9375rem;">\(+ \ i \cdot\) [[input:ans8]][[validation:ans7]] [[feedback:prt7]][[validation:ans8]] [[feedback:prt8]]</span></p><p><br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p></p>
<h4><strong>Lösung</strong></h4>
<p><br></p>
<div style="margin:1em; padding:1em; border:solid 1px #805926; background-color:#FFFFFF">
    <p style="text-align: center;">\(z_k = \sqrt[n]{r} e^{i \frac{\varphi}{n}}e^{i \frac{2 \pi k}{n}}\)&nbsp; &nbsp;für&nbsp; &nbsp;\(k=0,1,2,3\)</p>
</div>
<p>&nbsp;</p><ol><li>\(z^4={@B@}=r e^{i\varphi}\) in Exponentialform umformen:</li></ol><p>&nbsp; &nbsp; &nbsp; &nbsp; \(r=\sqrt{({@B@})^2+0^2}={@-B@}\)&nbsp; &nbsp;und&nbsp; &nbsp;\(\varphi=\pi\)&nbsp; (da {@B@} keinen Imaginärteil hat.)</p><p></p>
<p><br></p>
<p>&nbsp; &nbsp; &nbsp;2. \(\sqrt[4]{r}=\sqrt[4]{{@-B@}}={@A@}\)</p><p></p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\(\frac{\varphi}{4}=\frac{\pi}{4}\)&nbsp;</p><p></p><p></p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\(\frac{2\pi k}{4}=k \frac{\pi}{2}\)</p><p></p>
<p><br></p>
<p>&nbsp; &nbsp; &nbsp;3. Umrechnen in Normalform</p><p>&nbsp; &nbsp; &nbsp; &nbsp; \(z_k = {@-B@} e^{i \frac{\varphi}{4}}e^{i k \frac{\pi}{2}}\)<br></p><p><br></p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;\(z_0={@A@} e^{i \frac{\pi}{4}}e^{i 0 \frac{\pi}{2}}={@A@} \cdot [\cos(\frac{\pi}{4})+i \cdot \sin(\frac{\pi}{4})]\)</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \(={@lsg1@}\)</p>
<p></p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;\(z_1={@A@} e^{i \frac{\pi}{4}}e^{i 1 \frac{\pi}{2}}={@A@} \cdot [\cos(\frac{\pi}{4}+1 \cdot \frac{\pi}{2})+i \cdot \sin(\frac{\pi}{4}+1\cdot \frac{\pi}{2})]\)</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \(={@lsg2@}\)</p>
<p></p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;\(z_2={@A@} e^{i \frac{\pi}{4}}e^{i 2 \frac{\pi}{2}}={@A@} \cdot [\cos(\frac{\pi}{4}+2 \cdot \frac{\pi}{2})+i \cdot \sin(\frac{\pi}{4}+\pi)]\)</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \(={@lsg3@}\)</p>
<p></p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;\(z_3={@A@} e^{i \frac{\pi}{4}}e^{i 3 \frac{\pi}{2}}={@A@} \cdot [\cos(\frac{\pi}{4}+3 \cdot \frac{\pi}{2})+i \cdot \sin(\frac{\pi}{4}+3 \cdot \frac{\pi}{2})]\)</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \(={@lsg4@}\)</p><br>
<p></p><br>
<p></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2020120600</text>
    </stackversion>
    <questionvariables>
      <text>A:2+rand(4);
B:-A*A*A*A
lsg1:sqrt(2)/2*A+sqrt(2)/2*A*%i
lsg2:-sqrt(2)/2*A+sqrt(2)/2*A*%i
lsg3:-sqrt(2)/2*A-sqrt(2)/2*A*%i
lsg4:sqrt(2)/2*A-sqrt(2)/2*A*%i

Re1: realpart(lsg1)
Im1: imagpart(lsg1)
Re2: realpart(lsg2)
Im2: imagpart(lsg2)
Re3: realpart(lsg3)
Im3: imagpart(lsg3)
Re4: realpart(lsg4)
Im4: imagpart(lsg4)</text>
    </questionvariables>
    <specificfeedback format="html">
      <text><![CDATA[<h4><br></h4><br>]]></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>n</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>Re1</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>Im1</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>Re2</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>algebraic</type>
      <tans>Im2</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans5</name>
      <type>algebraic</type>
      <tans>Re3</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans6</name>
      <type>algebraic</type>
      <tans>Im3</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans7</name>
      <type>algebraic</type>
      <tans>Re4</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans8</name>
      <type>algebraic</type>
      <tans>Im4</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>Re1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>Im1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt3</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>Re2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt3-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt3-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt4</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>Im2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt4-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt4-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt5</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans5</sans>
        <tans>Re3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt5-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt5-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt6</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans6</sans>
        <tans>Im3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt6-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt6-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt7</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans7</sans>
        <tans>Re4</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt7-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt7-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt8</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans8</sans>
        <tans>Im4</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt8-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt8-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>TE:1:Komplexe Zahlen</text>
</tag>
      <tag><text>TE:2:Gleichungen</text>
</tag>
      <tag><text>te:3:Lösungsmenge</text>
</tag>
      <tag><text>te:3:Normalform</text>
</tag>
      <tag><text>src:F07-INT</text>
</tag>
      <tag><text>Bloom:3</text>
</tag>
      <tag><text>Maier:1:2</text>
</tag>
      <tag><text>Maier:2:2</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>praxiserprobt</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:TaggingGeprueft</text>
</tag>
      <tag><text>qs:importIliasGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 806962  -->
  <question type="stack">
    <name>
      <text><![CDATA[Konjugiert komplexe Zahl von Zahl in Exponentialform [{"DOMAINUID":"1B85502"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben ist in der komplexen Zahlenebene die Zahl \( z_1 = {@z1@} \)</p>
<p>
Verschieben Sie den blauen Punkt (\(z_2\))  so, dass \(z_2\,\) die
konjugierte komplexe Zahl von \(z_1\,\) ist.</p>

[[jsxgraph input-ref-ans1="stateRef"]]
// Create the board
var board = JXG.JSXGraph.initBoard(divid, {boundingbox: [-1.7, 1.5, 1.7, -1.5], axis: false, showNavigation: false, keepaspectratio: true, showCopyright:false });

// Create the JSXGraph-elements
var xaxis = board.create('axis', [[0,0], [1,0]], {name:'Re', withLabel: true, label: {position: 'rt',  offset: [-15, 20] }	});
var yaxis = board.create('axis', [[0,0], [0,1]], {name:'Im', withLabel: true, label: {position: 'rt', offset: [-20, 0] } });
var z1 = board.create('point', [{#var1#},{#var2#}],{style:5,color:'red',name:'z_1',fixed:true});
var z2 = board.create('point', [1,1], {style:5,color:'blue',name:'z_2', snapToGrid:false, snapSizeX:1, snapSizeY:1});
stack_jxg.bind_point(stateRef, z2);
var p = board.create('point', [0,0],{name:' ',size:0});
var q = board.create('point', [0,1],{name:' ',size:0});
var circ = board.create('circle', [p, q]);
// Create an empty curve
var ticks = board.create('curve', [[0], [0]], {strokeWidth: 1, 
              strokeColor: 'blue',
              strokeOpacity: 0.5});

// Make ticks out of the curve 
ticks.updateDataArray = function() {
    var cx = circ.center.X(),
        cy = circ.center.Y(),
        r = circ.Radius(),
        i, 
        ticklen = 0.07,           // Length of ticks in user space coordinates
        steps = 24,              // Number of ticks
        d = ticklen * 0.5,
        alpha = 2 * Math.PI / steps;

    this.dataX = [];
    this.dataY = [];
    for (i = 0; i < steps; i++) {
        // Start of a tick
        this.dataX.push( cx + (r - d)* Math.cos(i * alpha) );
        this.dataY.push( cy + (r - d) * Math.sin(i * alpha) );
        // End of tick
        this.dataX.push( cx + (r + d) * Math.cos(i * alpha) );
        this.dataY.push( cy + (r + d) * Math.sin(i * alpha) );
        // Interrupt the curve
        this.dataX.push( NaN );
        this.dataY.push( NaN );
    }
};
board.update();
board.unsuspendUpdate();
[[/jsxgraph]]

<div style="display:none;">[[input:ans1]][[validation:ans1]]</div>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text>Die konjugiert komplexe Zahl zu \( z_1 = {@z1@}\) ist \( z_2 = {@z2@}\)</text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2019090200</text>
    </stackversion>
    <questionvariables>
      <text>/* author: Frauke Sprengel, Hs Hannover */
simp : true;
phi : rand([1/3,1/4,1/6]);
phi : rand_with_step(-1,1,2)*(rand_with_step(0,1,1)-rand_with_step(0,1,1)/2+rand_with_step(-1,1,2)*phi);
simp : false;
z1 : e^(phi*pi*i);
z2 : e^(-phi*pi*i);
simp : true;
var1: float(cos(phi*pi));
var2: float(sin(phi*pi));
simp : false;
loesung: [var1,-var2];</text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>{@phi@}</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>0</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>(</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>numerical</type>
      <tans>loesung</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>NumRelative</answertest>
        <sans>ans1</sans>
        <tans>loesung</tans>
        <testoptions>0.05</testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>Mathematik</text>
</tag>
      <tag><text>Komplexe Zahlen</text>
</tag>
    </tags>
  </question>

<!-- question: 806967  -->
  <question type="stack">
    <name>
      <text><![CDATA[Konjugiert komplexe Zahl von Zahl in Exponentialform [{"DOMAINUID":"1B85502"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben ist in der komplexen Zahlenebene die Zahl \( z_1 = {@z1@} \)</p>
<p>
Verschieben Sie den blauen Punkt (\(z_2\))  so, dass \(z_2\,\) die
konjugierte komplexe Zahl von \(z_1\,\) ist.</p>

[[jsxgraph input-ref-ans1="stateRef"]]
// Create the board
var board = JXG.JSXGraph.initBoard(divid, {boundingbox: [-1.7, 1.5, 1.7, -1.5], axis: false, showNavigation: false, keepaspectratio: true, showCopyright:false });

// Create the JSXGraph-elements
var xaxis = board.create('axis', [[0,0], [1,0]], {name:'Re', withLabel: true, label: {position: 'rt',  offset: [-15, 20] }	});
var yaxis = board.create('axis', [[0,0], [0,1]], {name:'Im', withLabel: true, label: {position: 'rt', offset: [-20, 0] } });
var z1 = board.create('point', [{#var1#},{#var2#}],{style:5,color:'red',name:'z_1',fixed:true});
var z2 = board.create('point', [1,1], {style:5,color:'blue',name:'z_2', snapToGrid:false, snapSizeX:1, snapSizeY:1});
stack_jxg.bind_point(stateRef, z2);
var p = board.create('point', [0,0],{name:' ',size:0});
var q = board.create('point', [0,1],{name:' ',size:0});
var circ = board.create('circle', [p, q]);
// Create an empty curve
var ticks = board.create('curve', [[0], [0]], {strokeWidth: 1, 
              strokeColor: 'blue',
              strokeOpacity: 0.5});

// Make ticks out of the curve 
ticks.updateDataArray = function() {
    var cx = circ.center.X(),
        cy = circ.center.Y(),
        r = circ.Radius(),
        i, 
        ticklen = 0.07,           // Length of ticks in user space coordinates
        steps = 24,              // Number of ticks
        d = ticklen * 0.5,
        alpha = 2 * Math.PI / steps;

    this.dataX = [];
    this.dataY = [];
    for (i = 0; i < steps; i++) {
        // Start of a tick
        this.dataX.push( cx + (r - d)* Math.cos(i * alpha) );
        this.dataY.push( cy + (r - d) * Math.sin(i * alpha) );
        // End of tick
        this.dataX.push( cx + (r + d) * Math.cos(i * alpha) );
        this.dataY.push( cy + (r + d) * Math.sin(i * alpha) );
        // Interrupt the curve
        this.dataX.push( NaN );
        this.dataY.push( NaN );
    }
};
board.update();
board.unsuspendUpdate();
[[/jsxgraph]]

<div style="display:none;">[[input:ans1]][[validation:ans1]]</div>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text>Die konjugiert komplexe Zahl zu \( z_1 = {@z1@}\) ist \( z_2 = {@z2@}\)</text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2019090200</text>
    </stackversion>
    <questionvariables>
      <text>/* author: Frauke Sprengel, Hs Hannover */
simp : true;
phi : rand([1/3,1/4,1/6]);
phi : rand_with_step(-1,1,2)*(rand_with_step(0,1,1)-rand_with_step(0,1,1)/2+rand_with_step(-1,1,2)*phi);
simp : false;
z1 : e^(phi*pi*i);
z2 : e^(-phi*pi*i);
simp : true;
var1: float(cos(phi*pi));
var2: float(sin(phi*pi));
simp : false;
loesung: [var1,-var2];</text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>{@phi@}</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>0</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>(</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>numerical</type>
      <tans>loesung</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>NumRelative</answertest>
        <sans>ans1</sans>
        <tans>loesung</tans>
        <testoptions>0.05</testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>Mathematik</text>
</tag>
      <tag><text>Komplexe Zahlen</text>
</tag>
    </tags>
  </question>

<!-- question: 806972  -->
  <question type="stack">
    <name>
      <text><![CDATA[Konjugiert komplexe Zahl von Zahl in Exponentialform [{"DOMAINUID":"1B85502"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben ist in der komplexen Zahlenebene die Zahl \( z_1 = {@z1@} \)</p>
<p>
Verschieben Sie den blauen Punkt (\(z_2\))  so, dass \(z_2\,\) die
konjugierte komplexe Zahl von \(z_1\,\) ist.</p>

[[jsxgraph input-ref-ans1="stateRef"]]
// Create the board
var board = JXG.JSXGraph.initBoard(divid, {boundingbox: [-1.7, 1.5, 1.7, -1.5], axis: false, showNavigation: false, keepaspectratio: true, showCopyright:false });

// Create the JSXGraph-elements
var xaxis = board.create('axis', [[0,0], [1,0]], {name:'Re', withLabel: true, label: {position: 'rt',  offset: [-15, 20] }	});
var yaxis = board.create('axis', [[0,0], [0,1]], {name:'Im', withLabel: true, label: {position: 'rt', offset: [-20, 0] } });
var z1 = board.create('point', [{#var1#},{#var2#}],{style:5,color:'red',name:'z_1',fixed:true});
var z2 = board.create('point', [1,1], {style:5,color:'blue',name:'z_2', snapToGrid:false, snapSizeX:1, snapSizeY:1});
stack_jxg.bind_point(stateRef, z2);
var p = board.create('point', [0,0],{name:' ',size:0});
var q = board.create('point', [0,1],{name:' ',size:0});
var circ = board.create('circle', [p, q]);
// Create an empty curve
var ticks = board.create('curve', [[0], [0]], {strokeWidth: 1, 
              strokeColor: 'blue',
              strokeOpacity: 0.5});

// Make ticks out of the curve 
ticks.updateDataArray = function() {
    var cx = circ.center.X(),
        cy = circ.center.Y(),
        r = circ.Radius(),
        i, 
        ticklen = 0.07,           // Length of ticks in user space coordinates
        steps = 24,              // Number of ticks
        d = ticklen * 0.5,
        alpha = 2 * Math.PI / steps;

    this.dataX = [];
    this.dataY = [];
    for (i = 0; i < steps; i++) {
        // Start of a tick
        this.dataX.push( cx + (r - d)* Math.cos(i * alpha) );
        this.dataY.push( cy + (r - d) * Math.sin(i * alpha) );
        // End of tick
        this.dataX.push( cx + (r + d) * Math.cos(i * alpha) );
        this.dataY.push( cy + (r + d) * Math.sin(i * alpha) );
        // Interrupt the curve
        this.dataX.push( NaN );
        this.dataY.push( NaN );
    }
};
board.update();
board.unsuspendUpdate();
[[/jsxgraph]]

<div style="display:none;">[[input:ans1]][[validation:ans1]]</div>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text>Die konjugiert komplexe Zahl zu \( z_1 = {@z1@}\) ist \( z_2 = {@z2@}\)</text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2019090200</text>
    </stackversion>
    <questionvariables>
      <text>/* author: Frauke Sprengel, Hs Hannover */
simp : true;
phi : rand([1/3,1/4,1/6]);
phi : rand_with_step(-1,1,2)*(rand_with_step(0,1,1)-rand_with_step(0,1,1)/2+rand_with_step(-1,1,2)*phi);
simp : false;
z1 : e^(phi*pi*i);
z2 : e^(-phi*pi*i);
simp : true;
var1: float(cos(phi*pi));
var2: float(sin(phi*pi));
simp : false;
loesung: [var1,-var2];</text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>{@phi@}</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>0</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>(</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>numerical</type>
      <tans>loesung</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>NumRelative</answertest>
        <sans>ans1</sans>
        <tans>loesung</tans>
        <testoptions>0.05</testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>Mathematik</text>
</tag>
      <tag><text>Komplexe Zahlen</text>
</tag>
    </tags>
  </question>

<!-- question: 806977  -->
  <question type="stack">
    <name>
      <text><![CDATA[Konjugiert komplexe Zahl von Zahl in Exponentialform [{"DOMAINUID":"1B85502"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben ist in der komplexen Zahlenebene die Zahl \( z_1 = {@z1@} \)</p>
<p>
Verschieben Sie den blauen Punkt (\(z_2\))  so, dass \(z_2\,\) die
konjugierte komplexe Zahl von \(z_1\,\) ist.</p>

[[jsxgraph input-ref-ans1="stateRef"]]
// Create the board
var board = JXG.JSXGraph.initBoard(divid, {boundingbox: [-1.7, 1.5, 1.7, -1.5], axis: false, showNavigation: false, keepaspectratio: true, showCopyright:false });

// Create the JSXGraph-elements
var xaxis = board.create('axis', [[0,0], [1,0]], {name:'Re', withLabel: true, label: {position: 'rt',  offset: [-15, 20] }	});
var yaxis = board.create('axis', [[0,0], [0,1]], {name:'Im', withLabel: true, label: {position: 'rt', offset: [-20, 0] } });
var z1 = board.create('point', [{#var1#},{#var2#}],{style:5,color:'red',name:'z_1',fixed:true});
var z2 = board.create('point', [1,1], {style:5,color:'blue',name:'z_2', snapToGrid:false, snapSizeX:1, snapSizeY:1});
stack_jxg.bind_point(stateRef, z2);
var p = board.create('point', [0,0],{name:' ',size:0});
var q = board.create('point', [0,1],{name:' ',size:0});
var circ = board.create('circle', [p, q]);
// Create an empty curve
var ticks = board.create('curve', [[0], [0]], {strokeWidth: 1, 
              strokeColor: 'blue',
              strokeOpacity: 0.5});

// Make ticks out of the curve 
ticks.updateDataArray = function() {
    var cx = circ.center.X(),
        cy = circ.center.Y(),
        r = circ.Radius(),
        i, 
        ticklen = 0.07,           // Length of ticks in user space coordinates
        steps = 24,              // Number of ticks
        d = ticklen * 0.5,
        alpha = 2 * Math.PI / steps;

    this.dataX = [];
    this.dataY = [];
    for (i = 0; i < steps; i++) {
        // Start of a tick
        this.dataX.push( cx + (r - d)* Math.cos(i * alpha) );
        this.dataY.push( cy + (r - d) * Math.sin(i * alpha) );
        // End of tick
        this.dataX.push( cx + (r + d) * Math.cos(i * alpha) );
        this.dataY.push( cy + (r + d) * Math.sin(i * alpha) );
        // Interrupt the curve
        this.dataX.push( NaN );
        this.dataY.push( NaN );
    }
};
board.update();
board.unsuspendUpdate();
[[/jsxgraph]]

<div style="display:none;">[[input:ans1]][[validation:ans1]]</div>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text>Die konjugiert komplexe Zahl zu \( z_1 = {@z1@}\) ist \( z_2 = {@z2@}\)</text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2019090200</text>
    </stackversion>
    <questionvariables>
      <text>/* author: Frauke Sprengel, Hs Hannover */
simp : true;
phi : rand([1/3,1/4,1/6]);
phi : rand_with_step(-1,1,2)*(rand_with_step(0,1,1)-rand_with_step(0,1,1)/2+rand_with_step(-1,1,2)*phi);
simp : false;
z1 : e^(phi*pi*i);
z2 : e^(-phi*pi*i);
simp : true;
var1: float(cos(phi*pi));
var2: float(sin(phi*pi));
simp : false;
loesung: [var1,-var2];</text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>{@phi@}</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>0</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>(</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>numerical</type>
      <tans>loesung</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>NumRelative</answertest>
        <sans>ans1</sans>
        <tans>loesung</tans>
        <testoptions>0.05</testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>Mathematik</text>
</tag>
      <tag><text>Komplexe Zahlen</text>
</tag>
    </tags>
  </question>

<!-- question: 806982  -->
  <question type="stack">
    <name>
      <text><![CDATA[Konjugiert komplexe Zahl von Zahl in Exponentialform [{"DOMAINUID":"1B85502"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben ist in der komplexen Zahlenebene die Zahl \( z_1 = {@z1@} \)</p>
<p>
Verschieben Sie den blauen Punkt (\(z_2\))  so, dass \(z_2\,\) die
konjugierte komplexe Zahl von \(z_1\,\) ist.</p>

[[jsxgraph input-ref-ans1="stateRef"]]
// Create the board
var board = JXG.JSXGraph.initBoard(divid, {boundingbox: [-1.7, 1.5, 1.7, -1.5], axis: false, showNavigation: false, keepaspectratio: true, showCopyright:false });

// Create the JSXGraph-elements
var xaxis = board.create('axis', [[0,0], [1,0]], {name:'Re', withLabel: true, label: {position: 'rt',  offset: [-15, 20] }	});
var yaxis = board.create('axis', [[0,0], [0,1]], {name:'Im', withLabel: true, label: {position: 'rt', offset: [-20, 0] } });
var z1 = board.create('point', [{#var1#},{#var2#}],{style:5,color:'red',name:'z_1',fixed:true});
var z2 = board.create('point', [1,1], {style:5,color:'blue',name:'z_2', snapToGrid:false, snapSizeX:1, snapSizeY:1});
stack_jxg.bind_point(stateRef, z2);
var p = board.create('point', [0,0],{name:' ',size:0});
var q = board.create('point', [0,1],{name:' ',size:0});
var circ = board.create('circle', [p, q]);
// Create an empty curve
var ticks = board.create('curve', [[0], [0]], {strokeWidth: 1, 
              strokeColor: 'blue',
              strokeOpacity: 0.5});

// Make ticks out of the curve 
ticks.updateDataArray = function() {
    var cx = circ.center.X(),
        cy = circ.center.Y(),
        r = circ.Radius(),
        i, 
        ticklen = 0.07,           // Length of ticks in user space coordinates
        steps = 24,              // Number of ticks
        d = ticklen * 0.5,
        alpha = 2 * Math.PI / steps;

    this.dataX = [];
    this.dataY = [];
    for (i = 0; i < steps; i++) {
        // Start of a tick
        this.dataX.push( cx + (r - d)* Math.cos(i * alpha) );
        this.dataY.push( cy + (r - d) * Math.sin(i * alpha) );
        // End of tick
        this.dataX.push( cx + (r + d) * Math.cos(i * alpha) );
        this.dataY.push( cy + (r + d) * Math.sin(i * alpha) );
        // Interrupt the curve
        this.dataX.push( NaN );
        this.dataY.push( NaN );
    }
};
board.update();
board.unsuspendUpdate();
[[/jsxgraph]]

<div style="display:none;">[[input:ans1]][[validation:ans1]]</div>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text>Die konjugiert komplexe Zahl zu \( z_1 = {@z1@}\) ist \( z_2 = {@z2@}\)</text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2019090200</text>
    </stackversion>
    <questionvariables>
      <text>/* author: Frauke Sprengel, Hs Hannover */
simp : true;
phi : rand([1/3,1/4,1/6]);
phi : rand_with_step(-1,1,2)*(rand_with_step(0,1,1)-rand_with_step(0,1,1)/2+rand_with_step(-1,1,2)*phi);
simp : false;
z1 : e^(phi*pi*i);
z2 : e^(-phi*pi*i);
simp : true;
var1: float(cos(phi*pi));
var2: float(sin(phi*pi));
simp : false;
loesung: [var1,-var2];</text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>{@phi@}</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>0</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>(</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>numerical</type>
      <tans>loesung</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>NumRelative</answertest>
        <sans>ans1</sans>
        <tans>loesung</tans>
        <testoptions>0.05</testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>Mathematik</text>
</tag>
      <tag><text>Komplexe Zahlen</text>
</tag>
    </tags>
  </question>

<!-- question: 806987  -->
  <question type="stack">
    <name>
      <text><![CDATA[Konjugiert komplexe Zahl von Zahl in Exponentialform [{"DOMAINUID":"1B85502"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben ist in der komplexen Zahlenebene die Zahl \( z_1 = {@z1@} \)</p>
<p>
Verschieben Sie den blauen Punkt (\(z_2\))  so, dass \(z_2\,\) die
konjugierte komplexe Zahl von \(z_1\,\) ist.</p>

[[jsxgraph input-ref-ans1="stateRef"]]
// Create the board
var board = JXG.JSXGraph.initBoard(divid, {boundingbox: [-1.7, 1.5, 1.7, -1.5], axis: false, showNavigation: false, keepaspectratio: true, showCopyright:false });

// Create the JSXGraph-elements
var xaxis = board.create('axis', [[0,0], [1,0]], {name:'Re', withLabel: true, label: {position: 'rt',  offset: [-15, 20] }	});
var yaxis = board.create('axis', [[0,0], [0,1]], {name:'Im', withLabel: true, label: {position: 'rt', offset: [-20, 0] } });
var z1 = board.create('point', [{#var1#},{#var2#}],{style:5,color:'red',name:'z_1',fixed:true});
var z2 = board.create('point', [1,1], {style:5,color:'blue',name:'z_2', snapToGrid:false, snapSizeX:1, snapSizeY:1});
stack_jxg.bind_point(stateRef, z2);
var p = board.create('point', [0,0],{name:' ',size:0});
var q = board.create('point', [0,1],{name:' ',size:0});
var circ = board.create('circle', [p, q]);
// Create an empty curve
var ticks = board.create('curve', [[0], [0]], {strokeWidth: 1, 
              strokeColor: 'blue',
              strokeOpacity: 0.5});

// Make ticks out of the curve 
ticks.updateDataArray = function() {
    var cx = circ.center.X(),
        cy = circ.center.Y(),
        r = circ.Radius(),
        i, 
        ticklen = 0.07,           // Length of ticks in user space coordinates
        steps = 24,              // Number of ticks
        d = ticklen * 0.5,
        alpha = 2 * Math.PI / steps;

    this.dataX = [];
    this.dataY = [];
    for (i = 0; i < steps; i++) {
        // Start of a tick
        this.dataX.push( cx + (r - d)* Math.cos(i * alpha) );
        this.dataY.push( cy + (r - d) * Math.sin(i * alpha) );
        // End of tick
        this.dataX.push( cx + (r + d) * Math.cos(i * alpha) );
        this.dataY.push( cy + (r + d) * Math.sin(i * alpha) );
        // Interrupt the curve
        this.dataX.push( NaN );
        this.dataY.push( NaN );
    }
};
board.update();
board.unsuspendUpdate();
[[/jsxgraph]]

<div style="display:none;">[[input:ans1]][[validation:ans1]]</div>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text>Die konjugiert komplexe Zahl zu \( z_1 = {@z1@}\) ist \( z_2 = {@z2@}\)</text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2019090200</text>
    </stackversion>
    <questionvariables>
      <text>/* author: Frauke Sprengel, Hs Hannover */
simp : true;
phi : rand([1/3,1/4,1/6]);
phi : rand_with_step(-1,1,2)*(rand_with_step(0,1,1)-rand_with_step(0,1,1)/2+rand_with_step(-1,1,2)*phi);
simp : false;
z1 : e^(phi*pi*i);
z2 : e^(-phi*pi*i);
simp : true;
var1: float(cos(phi*pi));
var2: float(sin(phi*pi));
simp : false;
loesung: [var1,-var2];</text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>{@phi@}</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>0</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>(</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>numerical</type>
      <tans>loesung</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>NumRelative</answertest>
        <sans>ans1</sans>
        <tans>loesung</tans>
        <testoptions>0.05</testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>Mathematik</text>
</tag>
      <tag><text>Komplexe Zahlen</text>
</tag>
    </tags>
  </question>

<!-- question: 0  -->
  <question type="category">
    <category>
      <text>$course$/top/Polynomen</text>
    </category>
    <info format="html">
      <text></text>
    </info>
    <idnumber></idnumber>
  </question>

<!-- question: 806717  -->
  <question type="stack">
    <name>
      <text><![CDATA[Polynomdivision (Idee AP)-2 (Kopie) [{"DOMAINUID":"88CAE9F"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p>Führen Sie die nachstehende Polynomdivision durch:</p><p>\( p(x) = ({@p@}\)) : (\( x-{@x0@}\) )= [[input:ans1]] \(\cdot x^2 +\) [[input:ans2]]\( \cdot &nbsp;x +\) [[input:ans3]]</p><div><br></div><div>Entscheiden Sie, ob die folgende Aussage wahr oder falsch ist!</div><div>"Das obige Polynom \(p(x)\) lässt sich über den reellen Zahlen vollständig in Linearfaktoren zerlegen."</div><p>[[input:ans4]]</p><p><br></p><div><span style="line-height: 21px;"><span style="line-height: 20px;">[[validation:ans1]]</span><br></span></div><div><span style="line-height: 21px;"><span style="line-height: 20px;">[[validation:ans2]]</span><br></span></div><div><span style="line-height: 21px; display: inline; float: none;"><span style="line-height: 20px; display: inline; float: none;"><span style="display: inline; float: none;">[[validation:ans3]]</span><br></span></span></div><div><span style="line-height: 21px;"><span style="line-height: 20px;">[[validation:ans4]]</span></span></div>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[a : rand(4)+1;
b : rand(2)*8-5;
c : rand(4)+1;
v1 : rand(2)*2-1;
v2 : rand(2)*2-1;
x0 : c;
q : expand((x+v1*a)^2+b);
p : expand(q*(x-x0));
a3 : coeff(p,x,3);
a2 : coeff(p,x,2);
a1 : coeff(p,x,1);
a0 : coeff(p,x,0);
b3 : coeff(q,x,2);
b2 : coeff(q,x,1);
b1 : coeff(q,x,0);
ta4 : is (b<0)]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>a2</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>b3</tans>
      <boxsize>3</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>b2</tans>
      <boxsize>3</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>b1</tans>
      <boxsize>3</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>boolean</type>
      <tans>ta9</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>b3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.2000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Der führende Koeffizient des Polynoms ist falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>b2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.3000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>b1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.3000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>3</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>3</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>ta4</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.2000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-4-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-4-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 806719  -->
  <question type="stack">
    <name>
      <text><![CDATA[Polynomdivision (Idee AP)-2 (Kopie) [{"DOMAINUID":"88CAE9F"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p>Führen Sie die nachstehende Polynomdivision durch:</p><p>\( p(x) = ({@p@}\)) : (\( x-{@x0@}\) )= [[input:ans1]] \(\cdot x^2 +\) [[input:ans2]]\( \cdot &nbsp;x +\) [[input:ans3]]</p><div><br></div><div>Entscheiden Sie, ob die folgende Aussage wahr oder falsch ist!</div><div>"Das obige Polynom \(p(x)\) lässt sich über den reellen Zahlen vollständig in Linearfaktoren zerlegen."</div><p>[[input:ans4]]</p><p><br></p><div><span style="line-height: 21px;"><span style="line-height: 20px;">[[validation:ans1]]</span><br></span></div><div><span style="line-height: 21px;"><span style="line-height: 20px;">[[validation:ans2]]</span><br></span></div><div><span style="line-height: 21px; display: inline; float: none;"><span style="line-height: 20px; display: inline; float: none;"><span style="display: inline; float: none;">[[validation:ans3]]</span><br></span></span></div><div><span style="line-height: 21px;"><span style="line-height: 20px;">[[validation:ans4]]</span></span></div>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[a : rand(4)+1;
b : rand(2)*8-5;
c : rand(4)+1;
v1 : rand(2)*2-1;
v2 : rand(2)*2-1;
x0 : c;
q : expand((x+v1*a)^2+b);
p : expand(q*(x-x0));
a3 : coeff(p,x,3);
a2 : coeff(p,x,2);
a1 : coeff(p,x,1);
a0 : coeff(p,x,0);
b3 : coeff(q,x,2);
b2 : coeff(q,x,1);
b1 : coeff(q,x,0);
ta4 : is (b<0)]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>a2</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>b3</tans>
      <boxsize>3</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>b2</tans>
      <boxsize>3</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>b1</tans>
      <boxsize>3</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>boolean</type>
      <tans>ta9</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>b3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.2000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Der führende Koeffizient des Polynoms ist falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>b2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.3000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>b1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.3000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>3</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>3</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>ta4</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.2000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-4-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-4-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 806718  -->
  <question type="stack">
    <name>
      <text><![CDATA[Polynomdivision durchführen [{"DOMAINUID":"5EACA68"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[Berechnen Sie mittels Polynomdivision:<p>a)</p><div class="editor-indent" style="margin-left: 30px;"><p>\( ({@P3@} ) : ({@P2@}) \) <br>\(= \) [[input:ans1]] [[validation:ans1]]</p><p>[[feedback:prt1]]<br></p></div><p>b)</p><div class="editor-indent" style="margin-left: 30px;"><p>\( ({@P6@} ) : ({@P5@}) \) <br>\(= \) [[input:ans2]] [[validation:ans2]]</p><p>[[feedback:prt2]]<br></p></div><p>c)</p><div class="editor-indent" style="margin-left: 30px;"><p>\( ({@P9@} ) : ({@P8@}) \) <br>\(= \) [[input:ans3]] [[validation:ans3]]<br></p><p>[[feedback:prt3]]<br></p></div>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>4.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[P1:apply("+",makelist(rand_with_prohib(-5,5,[0])*x^(k-1),k,5));
P2:apply("+",makelist(rand_with_prohib(-5,5,[0])*x^(k-1),k,3));
P3:expand(P1*P2);

P4:apply("+",makelist(rand_with_prohib(-5,5,[0])*x^(k-1),k,5));
P5:apply("+",makelist(rand_with_prohib(-5,5,[0])*x^(k-1),k,2));
P6:expand(P4*P5);

P7:c*x^4+apply("+",makelist(rand_with_step(-3,3,1)*x^(k-1),k,2,3))+rand_with_prohib(-5,5,[0])*c;
P8:apply("+",makelist(rand_with_prohib(-5,5,[0])*x^(k-1),k,3));
P9:ratsimp(P7*P8);]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text><![CDATA[<br><br><br>]]></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>{@P1@}, {@P2@}, {@P3@}
{@P4@}, {@P5@}, {@P6@}
{@P7@}, {@P8@}, {@P9@}</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>P1</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>2</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>P4</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>2</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>P7</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>2</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>P1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Ihr Polynom in Aufgabenteil a) ist leider falsch.<br>Es gilt: \( ({@ans1@})\cdot({@P2@})=({@ratsimp(ans1*P2)@})\neq ({@P3@}) \).<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>P4</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p></p><p>Ihr Polynom in Aufgabenteil b) ist leider falsch.<br>Es gilt: \( ({@ans2@})\cdot({@P5@})=({@ratsimp(ans2*P5)@})\neq ({@P6@}) \).</p><p></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt3</name>
      <value>2.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>P7</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt3-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt3-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p></p><p>Ihr Polynom in Aufgabenteil c) ist leider falsch.<br>Es gilt: \( ({@ans3@})\cdot({@P8@})=({@ratsimp(ans3*P8)@})\neq ({@P9@}) \).</p><p></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 806720  -->
  <question type="stack">
    <name>
      <text><![CDATA[Polynomdivision durchführen [{"DOMAINUID":"5EACA68"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[Berechnen Sie mittels Polynomdivision:<p>a)</p><div class="editor-indent" style="margin-left: 30px;"><p>\( ({@P3@} ) : ({@P2@}) \) <br>\(= \) [[input:ans1]] [[validation:ans1]]</p><p>[[feedback:prt1]]<br></p></div><p>b)</p><div class="editor-indent" style="margin-left: 30px;"><p>\( ({@P6@} ) : ({@P5@}) \) <br>\(= \) [[input:ans2]] [[validation:ans2]]</p><p>[[feedback:prt2]]<br></p></div><p>c)</p><div class="editor-indent" style="margin-left: 30px;"><p>\( ({@P9@} ) : ({@P8@}) \) <br>\(= \) [[input:ans3]] [[validation:ans3]]<br></p><p>[[feedback:prt3]]<br></p></div>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>4.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[P1:apply("+",makelist(rand_with_prohib(-5,5,[0])*x^(k-1),k,5));
P2:apply("+",makelist(rand_with_prohib(-5,5,[0])*x^(k-1),k,3));
P3:expand(P1*P2);

P4:apply("+",makelist(rand_with_prohib(-5,5,[0])*x^(k-1),k,5));
P5:apply("+",makelist(rand_with_prohib(-5,5,[0])*x^(k-1),k,2));
P6:expand(P4*P5);

P7:c*x^4+apply("+",makelist(rand_with_step(-3,3,1)*x^(k-1),k,2,3))+rand_with_prohib(-5,5,[0])*c;
P8:apply("+",makelist(rand_with_prohib(-5,5,[0])*x^(k-1),k,3));
P9:ratsimp(P7*P8);]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text><![CDATA[<br><br><br>]]></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>{@P1@}, {@P2@}, {@P3@}
{@P4@}, {@P5@}, {@P6@}
{@P7@}, {@P8@}, {@P9@}</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>P1</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>2</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>P4</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>2</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>P7</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>2</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>P1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Ihr Polynom in Aufgabenteil a) ist leider falsch.<br>Es gilt: \( ({@ans1@})\cdot({@P2@})=({@ratsimp(ans1*P2)@})\neq ({@P3@}) \).<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>P4</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p></p><p>Ihr Polynom in Aufgabenteil b) ist leider falsch.<br>Es gilt: \( ({@ans2@})\cdot({@P5@})=({@ratsimp(ans2*P5)@})\neq ({@P6@}) \).</p><p></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt3</name>
      <value>2.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>P7</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt3-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt3-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p></p><p>Ihr Polynom in Aufgabenteil c) ist leider falsch.<br>Es gilt: \( ({@ans3@})\cdot({@P8@})=({@ratsimp(ans3*P8)@})\neq ({@P9@}) \).</p><p></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 0  -->
  <question type="category">
    <category>
      <text>$course$/top/LGS</text>
    </category>
    <info format="html">
      <text></text>
    </info>
    <idnumber></idnumber>
  </question>

<!-- question: 807161  -->
  <question type="stack">
    <name>
      <text><![CDATA[4.1a LGS: 3x3 [{"DOMAINUID":"02CB681"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Bestimmen Sie die Lösung des linearen Gleichungssystems<br><span style="font-size: 0.9375rem;">\( \left\{\begin{matrix} {@pm11@} \, {@abs11*x1@} &amp; {@pm12@} &amp; {@abs12*x2@} &amp; {@pm13@} &amp; {@abs13*x3@} &amp; = &amp; {@vektorB[1][1]@} \\&nbsp;&nbsp;<br></span><span style="font-size: 0.9375rem;">{@pm21@} \, {@abs21*x1@} &amp; {@pm22@} &amp; {@abs22*x2@} &amp; {@pm23@} &amp; {@abs23*x3@} &amp; = &amp; {@vektorB[2][1]@} \\&nbsp; <br>{@pm31@} \, {@abs31*x1@} &amp; {@pm32@} &amp; {@abs32*x2@} &amp; {@pm33@} &amp; {@abs33*x3@} &amp; = &amp; {@vektorB[3][1]@} \\&nbsp;<br>\end{matrix} \right.\)</span></p>
<p><span style="font-size: 0.9375rem;"><strong>Hinweise:</strong><br></span></p>
<ul style="">
    <li style=""><span style="font-size: 0.9375rem;">Geben Sie die Lösung in der Form eines transponierten Vektors \(\vec{x}^T =\) [\(x_1, x_2, x_3\)] ein.</span></li>
    <li style=""><span style="font-size: 0.9375rem;">Falls keine Lösung existiert, geben Sie als Lösung&nbsp;</span><span style="font-size: 0.9375rem;">[ ]</span><span style="font-size: 0.9375rem;">&nbsp;ein.</span></li>
</ul>
<p> \(\vec{x}^T=\,\) [[input:ans1]] [[validation:ans1]] [[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;"><strong>Lösungsweg:</strong></p><p dir="ltr" style="text-align: left;">Das vorgegebene Gleichungssystem lässt sich als erweiterte Matrix \((\mathbf{A}|\mathbf{b}) = {@erwA@}\) aufschreiben.</p><p dir="ltr" style="text-align: left;">Mit Hilfe des Eleminationsverfahren von Gauß wird diese Matrix auf folgende Dreiecksform überführt:</p><p dir="ltr" style="text-align: left;">\((\mathbf{\tilde{A}}|\mathbf{\tilde{b}})={@trA@}\).<br></p><p dir="ltr" style="text-align: left;">Somit lassen sich die gesuchten Variablen wie folgt berechnen:</p><p dir="ltr" style="text-align: left;">Aus der dritten Gleichung ist \(\qquad {@trA[3,3]@} \cdot x_3 = {@trA[3,4]@} \) \(\qquad \Longleftrightarrow \qquad x_3 = \dfrac{{@trA[3,4]@}}{{@trA[3,3]@}} = {@loes3@}\)<br></p><p dir="ltr" style="text-align: left;">Aus der zweiten Gleichung mit der Einsetzung von \(x_3\) ist \(\qquad&nbsp;{@trA[2,2]@} \cdot x_2 + \left({@trA[2,3]@}\right) \cdot \left({@loes3@}\right) = {@trA[2,4]@} \) \(\qquad \Longleftrightarrow \qquad x_2 = \dfrac{{@trA[2,4]@} - \left({@trA[2,3]@}\right) \cdot \left({@loes3@}\right)}{{@trA[2,2]@}} = \dfrac{{@trA[2,4]-trA[2,3]*loes3@}}{{@trA[2,2]@}} = {@loes2@}\)<br></p><p dir="ltr" style="text-align: left;">Aus der ersten Gleichung mit der Einsetzung von \(x_2\) und \(x_3\) ist \(\qquad&nbsp;{@trA[1,1]@} \cdot x_1 + \left({@trA[1,2]@}\right) \cdot \left({@loes2@}\right) + \left({@trA[1,3]@}\right) \cdot \left({@loes3@}\right) = {@trA[1,4]@} \) \(\qquad \Longleftrightarrow \qquad x_1 = \dfrac{{@trA[1,4]@} - \left({@trA[1,2]@}\right) \cdot \left({@loes2@}\right) - \left({@trA[1,3]@}\right) \cdot \left({@loes3@}\right)}{{@trA[1,1]@}} = \dfrac{{@trA[1,4]-trA[1,2]*loes2-trA[1,3]*loes3@}}{{@trA[1,1]@}} = {@loes1@}\)<br></p><p dir="ltr" style="text-align: left;">Somit ergibt sich den Lösungsvektor&nbsp;\(\vec{x} = {@matrix([loes1],[loes2],[loes3])@}\) und die Antwort \(\vec{x}^T = {@loes@}\).</p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[a: rand_with_prohib(-4,4,[0]);
b: rand_with_prohib(-4,4,[0]);
c: rand_with_prohib(-4,4,[0]);

d: rand_with_prohib(-4,4,[0]);
e: rand_with_prohib(-4,4,[0, b*d/a]);
f: rand_with_prohib(-4,4,[0]);

g: rand_with_prohib(-4,4,[0]);
h: rand_with_prohib(-4,4,[0,e*g/d]);
i:  rand_with_prohib(-5,5,[0,f*h/e,f*g/d,((a*f-c*d)*h+(c*e-b*f)*g)/(a*e-b*d)]);

A: matrix( [a,b,c],[d,e,f],[g,h,i]);
detA: determinant(A);
rangA: rank(A);

loes1: rand_with_prohib(-4,4,[0]);
loes2: rand_with_step(-4,4,1);
loes3: rand_with_step(-4,4,1);
loesmat: matrix([loes1],[loes2],[loes3]);

vektorB: A.loesmat;

loes: [loes1,loes2,loes3];

pm11: if signum(A[1][1])<0 then "- " else " "; 
abs11: abs(A[1][1]);
pm21: if signum(A[2][1])<0 then "- " else " "; 
abs21: abs(A[2][1]);
pm31: if signum(A[3][1])<0 then "- " else " "; 
abs31: abs(A[3][1]);
pm12: if signum(A[1][2])>0 then "+" else "-"; 
abs12: abs(A[1][2]);
pm13: if signum(A[1][3])>0 then "+" else "-"; 
abs13: abs(A[1][3]);
pm22: if signum(A[2][2])>0 then "+" else "-"; 
abs22: abs(A[2][2]);
pm23: if signum(A[2][3])>0 then "+" else "-"; 
abs23: abs(A[2][3]);
pm32: if signum(A[3][2])>0 then "+" else "-"; 
abs32: abs(A[3][2]);
pm33: if signum(A[3][3])>0 then "+" else "-"; 
abs33: abs(A[3][3]);

erwA: matrix( [a,b,c,vektorB[1][1]],[d,e,f,vektorB[2][1]],[g,h,i,vektorB[3][1]]);
trA: triangularize(erwA);]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\({@A@} \cdot \vec{x}={@vektorB@}\)
\(det(A)={@detA@}, Rang(A)={@rangA@}\)
\[L={@loes@}\]</text>
    </questionnote>
    <questiondescription format="moodle_auto_format">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>(</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>loes</tans>
      <boxsize>50</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>ansm: if length(ans1)=3 then matrix([ans1[1]],[ans1[2]],[ans1[3]]);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>A.ansm</sans>
        <tans> vektorB</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>1892464231</deployedseed>
    <deployedseed>1040885938</deployedseed>
    <deployedseed>1414909774</deployedseed>
    <deployedseed>868861813</deployedseed>
    <deployedseed>1115691451</deployedseed>
    <deployedseed>1471205768</deployedseed>
    <deployedseed>1752924508</deployedseed>
    <deployedseed>920083174</deployedseed>
    <deployedseed>377403241</deployedseed>
    <deployedseed>445774165</deployedseed>
    <deployedseed>950481106</deployedseed>
    <deployedseed>614252968</deployedseed>
    <deployedseed>581490534</deployedseed>
    <deployedseed>1745929992</deployedseed>
    <deployedseed>1916519018</deployedseed>
    <deployedseed>1438784629</deployedseed>
    <deployedseed>1561197374</deployedseed>
    <deployedseed>415254026</deployedseed>
    <deployedseed>662819701</deployedseed>
    <deployedseed>2144253276</deployedseed>
    <deployedseed>1840138966</deployedseed>
    <deployedseed>1555108795</deployedseed>
    <deployedseed>1795377181</deployedseed>
    <deployedseed>792888682</deployedseed>
    <deployedseed>2060769467</deployedseed>
    <deployedseed>357655106</deployedseed>
    <deployedseed>23908224</deployedseed>
    <deployedseed>1197481085</deployedseed>
    <deployedseed>254590376</deployedseed>
    <deployedseed>1075026400</deployedseed>
    <deployedseed>1130244286</deployedseed>
    <deployedseed>801497541</deployedseed>
    <deployedseed>381935837</deployedseed>
    <deployedseed>2134841116</deployedseed>
    <deployedseed>1266961649</deployedseed>
    <deployedseed>413126785</deployedseed>
    <deployedseed>807640007</deployedseed>
    <deployedseed>1523687873</deployedseed>
    <deployedseed>1624098175</deployedseed>
    <deployedseed>1658492070</deployedseed>
    <deployedseed>1265561985</deployedseed>
    <deployedseed>1104780757</deployedseed>
    <deployedseed>402953583</deployedseed>
    <deployedseed>688113409</deployedseed>
    <deployedseed>1423253198</deployedseed>
    <deployedseed>1374845965</deployedseed>
    <deployedseed>1891443890</deployedseed>
    <deployedseed>2756716732</deployedseed>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
    </tags>
  </question>

<!-- question: 806978  -->
  <question type="stack">
    <name>
      <text><![CDATA[5.1b  LGS 3x3, Eine Nullzeile [{"DOMAINUID":"21EADBF"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Bestimmen Sie alle Lösungen des Gleichungssystems:</p>
<p>\[ \begin{matrix}  @A[1][1]*x1@ &amp; @pm12@@A[1][2]*x2@ &amp; @pm13@@A[1][3]*x3@ &amp; = &amp; @A[1][4]@ \\  @A[2][1]*x1@ &amp; @pm22@@A[2][2]*x2@ &amp; @pm23@@A[2][3]*x3@ &amp; = &amp; @A[2][4]@ \\  @A[3][1]*x1@ &amp; @pm32@@A[3][2]*x2@ &amp; @pm33@@A[3][3]*x3@ &amp; = &amp; @A[3][4]@ \\ \end{matrix} \]</p>
<p> </p>
<p><strong>Hinweise: </strong></p>
<ul>
<li>Geben Sie die Lösungen in der Form \([x_1, x_2, x_3]\) ein. Bitte die eckigen Klammern nicht vergessen.</li>
<li>Wenn es keine Lösung gibt, dann geben Sie bitte [ ] ein.</li>
</ul>
<p> </p>
<p>\(L=\) [[input:ans1]] [[validation:ans1]] [[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[a11: rand_with_prohib(-5,5,[0]);
a12: rand_with_prohib(-5,5,[0]);
a13: rand_with_prohib(-5,5,[0]);

a21: 0;
a22: rand_with_prohib(-5,5,[0]);
a23: rand_with_prohib(-5,5,[0]);

a31: 0;
a32: 0;
a33: 0;


b1: rand_with_prohib(-5,5,[0]);
b2: rand_with_prohib(-5,5,[0]);
b3: 0;

A1: matrix([a11,a12,a13,b1],[a21,a22,a23,b2],[a31,a32,a33,b3]);

s1: rand_with_prohib(-2,2,[0]);
A2: rowop(A1,3,1,s1);

s2: rand_with_prohib(-2,2,[0]);
A3: rowop(A2,3,2,s2);

s3: rand_with_prohib(-2,2,[0]);
A: rowop(A3,2,1,s3);

matA: submatrix(A,4);
vektorB: col(A,4);

pm12: if A[1][2]>0 then "+" else " ";
pm13: if A[1][3]>0 then "+" else " ";
pm22: if A[2][2]>0 then "+" else " ";
pm23: if A[2][3]>0 then "+" else " ";
pm32: if A[3][2]>0 then "+" else " ";
pm33: if A[3][3]>0 then "+" else " ";

gl1: A[1][1]*x1+A[1][2]*x2+A[1][3]*x3=A[1][4];
gl2: A[2][1]*x1+A[2][2]*x2+A[2][3]*x3=A[2][4];
gl3: A[3][1]*x1+A[3][2]*x2+A[3][3]*x3=A[3][4];
ls: solve([gl1,gl2,gl3],[x1,x2,x3]);

loes: expand( [ rhs(ls[1][1]) , rhs(ls[1][2]), rhs(ls[1][3]) ] );]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\[@A@\]
Lösung: \(@loes@\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>loes</tans>
      <boxsize>40</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>ansm: if length(ans1)=3 then matrix([ans1[1]],[ans1[2]],[ans1[3]]);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>matA.ansm</sans>
        <tans>vektorB</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>length(listofvars(ans1))</sans>
        <tans>0</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Ihre Antwort \(@ans1@\) ist eine spezifische Lösung des Gleichungssystems.</p>
<p>Gefragt wird nach der allgemeinen Lösung.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>1.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>1788287284</deployedseed>
    <deployedseed>576492072</deployedseed>
    <deployedseed>1885153380</deployedseed>
    <deployedseed>408123529</deployedseed>
    <deployedseed>1408428442</deployedseed>
    <deployedseed>1476357967</deployedseed>
    <deployedseed>1268122836</deployedseed>
    <deployedseed>1371991493</deployedseed>
    <deployedseed>655297154</deployedseed>
    <deployedseed>1519211889</deployedseed>
    <deployedseed>186710872</deployedseed>
    <deployedseed>1281589498</deployedseed>
    <deployedseed>525493515</deployedseed>
    <deployedseed>1563792141</deployedseed>
    <deployedseed>465380207</deployedseed>
    <deployedseed>1356128424</deployedseed>
    <deployedseed>801802172</deployedseed>
    <deployedseed>892089591</deployedseed>
    <deployedseed>2078093997</deployedseed>
    <deployedseed>1705384004</deployedseed>
    <deployedseed>81436082</deployedseed>
    <deployedseed>788667439</deployedseed>
    <deployedseed>1236107602</deployedseed>
    <deployedseed>676839239</deployedseed>
    <deployedseed>1510060679</deployedseed>
    <deployedseed>140957626</deployedseed>
    <deployedseed>874775886</deployedseed>
    <deployedseed>621743218</deployedseed>
    <deployedseed>1384631502</deployedseed>
    <deployedseed>1829741886</deployedseed>
    <deployedseed>1394027782</deployedseed>
    <deployedseed>385779974</deployedseed>
    <deployedseed>249073495</deployedseed>
    <deployedseed>446650460</deployedseed>
    <deployedseed>1245254111</deployedseed>
    <deployedseed>977125031</deployedseed>
    <deployedseed>1721048361</deployedseed>
    <deployedseed>462931861</deployedseed>
    <deployedseed>310873125</deployedseed>
    <deployedseed>708647801</deployedseed>
    <deployedseed>370613688</deployedseed>
    <deployedseed>2045424244</deployedseed>
    <deployedseed>678855505</deployedseed>
    <deployedseed>256337017</deployedseed>
    <deployedseed>844753091</deployedseed>
    <deployedseed>860645529</deployedseed>
    <deployedseed>1786446724</deployedseed>
    <deployedseed>371901984</deployedseed>
    <deployedseed>1192076959</deployedseed>
    <deployedseed>761547006</deployedseed>
    <deployedseed>1824188025</deployedseed>
    <deployedseed>83119314</deployedseed>
    <deployedseed>681107344</deployedseed>
    <deployedseed>148097582</deployedseed>
    <deployedseed>1336833604</deployedseed>
    <deployedseed>1822804994</deployedseed>
    <deployedseed>369822542</deployedseed>
    <deployedseed>112177314</deployedseed>
    <deployedseed>1927058873</deployedseed>
    <deployedseed>1899219269</deployedseed>
    <deployedseed>968769161</deployedseed>
    <deployedseed>815074938</deployedseed>
  </question>

<!-- question: 806983  -->
  <question type="stack">
    <name>
      <text><![CDATA[5.1b  LGS 3x3, Eine Nullzeile [{"DOMAINUID":"21EADBF"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Bestimmen Sie alle Lösungen des Gleichungssystems:</p>
<p>\[ \begin{matrix}  @A[1][1]*x1@ &amp; @pm12@@A[1][2]*x2@ &amp; @pm13@@A[1][3]*x3@ &amp; = &amp; @A[1][4]@ \\  @A[2][1]*x1@ &amp; @pm22@@A[2][2]*x2@ &amp; @pm23@@A[2][3]*x3@ &amp; = &amp; @A[2][4]@ \\  @A[3][1]*x1@ &amp; @pm32@@A[3][2]*x2@ &amp; @pm33@@A[3][3]*x3@ &amp; = &amp; @A[3][4]@ \\ \end{matrix} \]</p>
<p> </p>
<p><strong>Hinweise: </strong></p>
<ul>
<li>Geben Sie die Lösungen in der Form \([x_1, x_2, x_3]\) ein. Bitte die eckigen Klammern nicht vergessen.</li>
<li>Wenn es keine Lösung gibt, dann geben Sie bitte [ ] ein.</li>
</ul>
<p> </p>
<p>\(L=\) [[input:ans1]] [[validation:ans1]] [[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[a11: rand_with_prohib(-5,5,[0]);
a12: rand_with_prohib(-5,5,[0]);
a13: rand_with_prohib(-5,5,[0]);

a21: 0;
a22: rand_with_prohib(-5,5,[0]);
a23: rand_with_prohib(-5,5,[0]);

a31: 0;
a32: 0;
a33: 0;


b1: rand_with_prohib(-5,5,[0]);
b2: rand_with_prohib(-5,5,[0]);
b3: 0;

A1: matrix([a11,a12,a13,b1],[a21,a22,a23,b2],[a31,a32,a33,b3]);

s1: rand_with_prohib(-2,2,[0]);
A2: rowop(A1,3,1,s1);

s2: rand_with_prohib(-2,2,[0]);
A3: rowop(A2,3,2,s2);

s3: rand_with_prohib(-2,2,[0]);
A: rowop(A3,2,1,s3);

matA: submatrix(A,4);
vektorB: col(A,4);

pm12: if A[1][2]>0 then "+" else " ";
pm13: if A[1][3]>0 then "+" else " ";
pm22: if A[2][2]>0 then "+" else " ";
pm23: if A[2][3]>0 then "+" else " ";
pm32: if A[3][2]>0 then "+" else " ";
pm33: if A[3][3]>0 then "+" else " ";

gl1: A[1][1]*x1+A[1][2]*x2+A[1][3]*x3=A[1][4];
gl2: A[2][1]*x1+A[2][2]*x2+A[2][3]*x3=A[2][4];
gl3: A[3][1]*x1+A[3][2]*x2+A[3][3]*x3=A[3][4];
ls: solve([gl1,gl2,gl3],[x1,x2,x3]);

loes: expand( [ rhs(ls[1][1]) , rhs(ls[1][2]), rhs(ls[1][3]) ] );]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\[@A@\]
Lösung: \(@loes@\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>loes</tans>
      <boxsize>40</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>ansm: if length(ans1)=3 then matrix([ans1[1]],[ans1[2]],[ans1[3]]);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>matA.ansm</sans>
        <tans>vektorB</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>length(listofvars(ans1))</sans>
        <tans>0</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Ihre Antwort \(@ans1@\) ist eine spezifische Lösung des Gleichungssystems.</p>
<p>Gefragt wird nach der allgemeinen Lösung.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>1.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>1788287284</deployedseed>
    <deployedseed>576492072</deployedseed>
    <deployedseed>1885153380</deployedseed>
    <deployedseed>408123529</deployedseed>
    <deployedseed>1408428442</deployedseed>
    <deployedseed>1476357967</deployedseed>
    <deployedseed>1268122836</deployedseed>
    <deployedseed>1371991493</deployedseed>
    <deployedseed>655297154</deployedseed>
    <deployedseed>1519211889</deployedseed>
    <deployedseed>186710872</deployedseed>
    <deployedseed>1281589498</deployedseed>
    <deployedseed>525493515</deployedseed>
    <deployedseed>1563792141</deployedseed>
    <deployedseed>465380207</deployedseed>
    <deployedseed>1356128424</deployedseed>
    <deployedseed>801802172</deployedseed>
    <deployedseed>892089591</deployedseed>
    <deployedseed>2078093997</deployedseed>
    <deployedseed>1705384004</deployedseed>
    <deployedseed>81436082</deployedseed>
    <deployedseed>788667439</deployedseed>
    <deployedseed>1236107602</deployedseed>
    <deployedseed>676839239</deployedseed>
    <deployedseed>1510060679</deployedseed>
    <deployedseed>140957626</deployedseed>
    <deployedseed>874775886</deployedseed>
    <deployedseed>621743218</deployedseed>
    <deployedseed>1384631502</deployedseed>
    <deployedseed>1829741886</deployedseed>
    <deployedseed>1394027782</deployedseed>
    <deployedseed>385779974</deployedseed>
    <deployedseed>249073495</deployedseed>
    <deployedseed>446650460</deployedseed>
    <deployedseed>1245254111</deployedseed>
    <deployedseed>977125031</deployedseed>
    <deployedseed>1721048361</deployedseed>
    <deployedseed>462931861</deployedseed>
    <deployedseed>310873125</deployedseed>
    <deployedseed>708647801</deployedseed>
    <deployedseed>370613688</deployedseed>
    <deployedseed>2045424244</deployedseed>
    <deployedseed>678855505</deployedseed>
    <deployedseed>256337017</deployedseed>
    <deployedseed>844753091</deployedseed>
    <deployedseed>860645529</deployedseed>
    <deployedseed>1786446724</deployedseed>
    <deployedseed>371901984</deployedseed>
    <deployedseed>1192076959</deployedseed>
    <deployedseed>761547006</deployedseed>
    <deployedseed>1824188025</deployedseed>
    <deployedseed>83119314</deployedseed>
    <deployedseed>681107344</deployedseed>
    <deployedseed>148097582</deployedseed>
    <deployedseed>1336833604</deployedseed>
    <deployedseed>1822804994</deployedseed>
    <deployedseed>369822542</deployedseed>
    <deployedseed>112177314</deployedseed>
    <deployedseed>1927058873</deployedseed>
    <deployedseed>1899219269</deployedseed>
    <deployedseed>968769161</deployedseed>
    <deployedseed>815074938</deployedseed>
  </question>

<!-- question: 807158  -->
  <question type="stack">
    <name>
      <text><![CDATA[5.1b  LGS 3x3, Eine Nullzeile [{"DOMAINUID":"21EADBF"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Bestimmen Sie alle Lösungen des Gleichungssystems:</p>
<p>\[ \begin{matrix}  @A[1][1]*x1@ &amp; @pm12@@A[1][2]*x2@ &amp; @pm13@@A[1][3]*x3@ &amp; = &amp; @A[1][4]@ \\  @A[2][1]*x1@ &amp; @pm22@@A[2][2]*x2@ &amp; @pm23@@A[2][3]*x3@ &amp; = &amp; @A[2][4]@ \\  @A[3][1]*x1@ &amp; @pm32@@A[3][2]*x2@ &amp; @pm33@@A[3][3]*x3@ &amp; = &amp; @A[3][4]@ \\ \end{matrix} \]</p>
<p> </p>
<p><strong>Hinweise: </strong></p>
<ul>
<li>Geben Sie die Lösungen in der Form \([x_1, x_2, x_3]\) ein. Bitte die eckigen Klammern nicht vergessen.</li>
<li>Wenn es keine Lösung gibt, dann geben Sie bitte [ ] ein.</li>
</ul>
<p> </p>
<p>\(L=\) [[input:ans1]] [[validation:ans1]] [[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[a11: rand_with_prohib(-5,5,[0]);
a12: rand_with_prohib(-5,5,[0]);
a13: rand_with_prohib(-5,5,[0]);

a21: 0;
a22: rand_with_prohib(-5,5,[0]);
a23: rand_with_prohib(-5,5,[0]);

a31: 0;
a32: 0;
a33: 0;


b1: rand_with_prohib(-5,5,[0]);
b2: rand_with_prohib(-5,5,[0]);
b3: 0;

A1: matrix([a11,a12,a13,b1],[a21,a22,a23,b2],[a31,a32,a33,b3]);

s1: rand_with_prohib(-2,2,[0]);
A2: rowop(A1,3,1,s1);

s2: rand_with_prohib(-2,2,[0]);
A3: rowop(A2,3,2,s2);

s3: rand_with_prohib(-2,2,[0]);
A: rowop(A3,2,1,s3);

matA: submatrix(A,4);
vektorB: col(A,4);

pm12: if A[1][2]>0 then "+" else " ";
pm13: if A[1][3]>0 then "+" else " ";
pm22: if A[2][2]>0 then "+" else " ";
pm23: if A[2][3]>0 then "+" else " ";
pm32: if A[3][2]>0 then "+" else " ";
pm33: if A[3][3]>0 then "+" else " ";

gl1: A[1][1]*x1+A[1][2]*x2+A[1][3]*x3=A[1][4];
gl2: A[2][1]*x1+A[2][2]*x2+A[2][3]*x3=A[2][4];
gl3: A[3][1]*x1+A[3][2]*x2+A[3][3]*x3=A[3][4];
ls: solve([gl1,gl2,gl3],[x1,x2,x3]);

loes: expand( [ rhs(ls[1][1]) , rhs(ls[1][2]), rhs(ls[1][3]) ] );]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\[@A@\]
Lösung: \(@loes@\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>loes</tans>
      <boxsize>40</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>ansm: if length(ans1)=3 then matrix([ans1[1]],[ans1[2]],[ans1[3]]);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>matA.ansm</sans>
        <tans>vektorB</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>length(listofvars(ans1))</sans>
        <tans>0</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Ihre Antwort \(@ans1@\) ist eine spezifische Lösung des Gleichungssystems.</p>
<p>Gefragt wird nach der allgemeinen Lösung.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>1.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>1788287284</deployedseed>
    <deployedseed>576492072</deployedseed>
    <deployedseed>1885153380</deployedseed>
    <deployedseed>408123529</deployedseed>
    <deployedseed>1408428442</deployedseed>
    <deployedseed>1476357967</deployedseed>
    <deployedseed>1268122836</deployedseed>
    <deployedseed>1371991493</deployedseed>
    <deployedseed>655297154</deployedseed>
    <deployedseed>1519211889</deployedseed>
    <deployedseed>186710872</deployedseed>
    <deployedseed>1281589498</deployedseed>
    <deployedseed>525493515</deployedseed>
    <deployedseed>1563792141</deployedseed>
    <deployedseed>465380207</deployedseed>
    <deployedseed>1356128424</deployedseed>
    <deployedseed>801802172</deployedseed>
    <deployedseed>892089591</deployedseed>
    <deployedseed>2078093997</deployedseed>
    <deployedseed>1705384004</deployedseed>
    <deployedseed>81436082</deployedseed>
    <deployedseed>788667439</deployedseed>
    <deployedseed>1236107602</deployedseed>
    <deployedseed>676839239</deployedseed>
    <deployedseed>1510060679</deployedseed>
    <deployedseed>140957626</deployedseed>
    <deployedseed>874775886</deployedseed>
    <deployedseed>621743218</deployedseed>
    <deployedseed>1384631502</deployedseed>
    <deployedseed>1829741886</deployedseed>
    <deployedseed>1394027782</deployedseed>
    <deployedseed>385779974</deployedseed>
    <deployedseed>249073495</deployedseed>
    <deployedseed>446650460</deployedseed>
    <deployedseed>1245254111</deployedseed>
    <deployedseed>977125031</deployedseed>
    <deployedseed>1721048361</deployedseed>
    <deployedseed>462931861</deployedseed>
    <deployedseed>310873125</deployedseed>
    <deployedseed>708647801</deployedseed>
    <deployedseed>370613688</deployedseed>
    <deployedseed>2045424244</deployedseed>
    <deployedseed>678855505</deployedseed>
    <deployedseed>256337017</deployedseed>
    <deployedseed>844753091</deployedseed>
    <deployedseed>860645529</deployedseed>
    <deployedseed>1786446724</deployedseed>
    <deployedseed>371901984</deployedseed>
    <deployedseed>1192076959</deployedseed>
    <deployedseed>761547006</deployedseed>
    <deployedseed>1824188025</deployedseed>
    <deployedseed>83119314</deployedseed>
    <deployedseed>681107344</deployedseed>
    <deployedseed>148097582</deployedseed>
    <deployedseed>1336833604</deployedseed>
    <deployedseed>1822804994</deployedseed>
    <deployedseed>369822542</deployedseed>
    <deployedseed>112177314</deployedseed>
    <deployedseed>1927058873</deployedseed>
    <deployedseed>1899219269</deployedseed>
    <deployedseed>968769161</deployedseed>
    <deployedseed>815074938</deployedseed>
  </question>

<!-- question: 807167  -->
  <question type="stack">
    <name>
      <text><![CDATA[5.2a  LGS 3x3 mit Parameter a, eine eindeutige Lösung [{"DOMAINUID":"D08F340"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben ist das lineare Gleichungssystem</p><p>\(\begin{matrix}</p><span>{@pm11@}&nbsp; {@abs11*x1@} &amp; {@pm12@} &amp; {@abs12*x2@} &amp; {@pm13@} &amp; {@abs13*x3@} &amp; = &amp; {@A[1][4]@} \\&nbsp;&nbsp;<br></span>{@pm21@}&nbsp; {@abs21*x1@} &amp; {@pm22@} &amp; {@abs22*x2@} &amp; + &amp; {@A[2][3]*x3@} &amp; = &amp; {@A[2][4]@} \\&nbsp;<br>{@pm31@}&nbsp; {@abs31*x1@} &amp; + &amp; {@A[3][2]*x2@} &amp; {@pm33@} &amp; {@abs33*x3@} &amp; = &amp; {@A[3][4]@}&nbsp;<p><span style="font-size: 0.9375rem;">\end{matrix}\)&nbsp;</span></p><p><span style="font-size: 0.9375rem;">mit der Konstante \(a \in \mathbb{R}\).<br></span></p>
<p>Für welche Werte des Parameters \(a \in \mathbb{R}\) besitzt das Gleichungssystem eine eindeutige Lösung:</p>
<p></p><span style="font-size: 0.9375rem;">\(a \neq\)&nbsp;[[input:ans2]]&nbsp;[[validation:ans2]] und \(a \neq\) [[input:ans3]] [[validation:ans3]]&nbsp;</span><span style="font-size: 0.9375rem;">[[feedback:prt2]]</span><br>
<p></p>
<p>Geben Sie diese Lösung in Abhängigkeit des Parameters \(a\) an.</p>
<p><strong></strong></p><strong>Hinweis:&nbsp;<span style="font-size: 0.9375rem; font-weight: 400;">Geben Sie die Lösung in der Form eines transponierten Vektors: \(\vec{x}^T =\) [\(x_1, x_2, x_3\)] ein.</span><br></strong><span><br></span>
<p> \(\vec{x}^T=\,\) [[input:ans1]] [[validation:ans1]] [[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p dir="ltr"><strong>Lösungsweg:</strong></p>
<p dir="ltr">Das vorgegebene Gleichungssystem lässt sich als erweiterte Matrix \((\mathbf{A}|\mathbf{b}) = {@erwA@}\) aufschreiben.</p>
<p dir="ltr">Mit Hilfe des Eleminationsverfahren von Gauß wird diese Matrix auf folgende Dreiecksform überführt:</p>
<p dir="ltr">\((\mathbf{\tilde{A}}|\mathbf{\tilde{b}})={@trA@}\).</p><p dir="ltr">Wir betrachten die dritte Gleichung&nbsp;\(({@trA[3,3]@}) \cdot x_3 = {@trA[3,4]@} \).</p><p dir="ltr">Falls \({@trA[3,3]@} \neq 0 \quad \Longleftrightarrow \quad a \neq {@v1@}\) bzw. \(a \neq {@v2@}\), so&nbsp;besitzt das Gleichungssystem eine eindeutige Lösung.</p>
<p dir="ltr"></p>Aus der dritten Gleichung mit \({@trA[3,3]@} \neq 0\) ist \(\qquad ({@trA[3,3]@}) \cdot x_3 = {@trA[3,4]@} \) \(\qquad \Longleftrightarrow \qquad x_3 = \dfrac{{@trA[3,4]@}}{{@trA[3,3]@}} = \displaystyle {@expand(rhs(ls[1][3]))@}\)<br><br><p dir="ltr">Aus der zweiten Gleichung mit der Einsetzung von \(x_3\) ist \(\qquad&nbsp;{@trA[2,2]@} \cdot x_2 + \left({@trA[2,3]@}\right) \cdot \left({@expand(rhs(ls[1][3]))@}\right) = {@trA[2,4]@} \) \(\qquad \Longleftrightarrow \qquad x_2 = \dfrac{{@trA[2,4]@} - \left({@trA[2,3]@}\right) \cdot \left({@expand(rhs(ls[1][3]))@}\right)}{{@trA[2,2]@}} = \dfrac{{@trA[2,4]-trA[2,3]*expand(rhs(ls[1][3]))@}}{{@trA[2,2]@}} = \displaystyle {@expand(rhs(ls[1][2]))@}\)<br></p><p dir="ltr">Aus der ersten Gleichung mit der Einsetzung von \(x_2\) und \(x_3\) ist \(\qquad&nbsp;{@trA[1,1]@} \cdot x_1 + \left({@trA[1,2]@}\right) \cdot \left({@expand(rhs(ls[1][2]))@}\right) + \left({@trA[1,3]@}\right) \cdot \left({@expand(rhs(ls[1][3]))@}\right) = {@trA[1,4]@} \) \(\qquad \Longleftrightarrow \qquad x_1 = \dfrac{{@trA[1,4]@} - \left({@trA[1,2]@}\right) \cdot \left({@expand(rhs(ls[1][2]))@}\right) - \left({@trA[1,3]@}\right) \cdot \left({@expand(rhs(ls[1][3]))@}\right)}{{@trA[1,1]@}} = \dfrac{{@trA[1,4]-trA[1,2]*expand(rhs(ls[1][2]))-trA[1,3]*expand(rhs(ls[1][3]))@}}{{@trA[1,1]@}} = \displaystyle {@expand(rhs(ls[1][1]))@}\)</p><p dir="ltr"><span style="font-size: 0.9375rem;">Somit ergibt sich in Abhängigkeit des Parameters \(a\) den Lösungsvektor&nbsp;\(\vec{x} = {@matrix([expand(rhs(ls[1][1]))],[expand(rhs(ls[1][2]))],[expand(rhs(ls[1][3]))])@}\) und die Antwort \(\vec{x}^T = {@loes@}\).</span><br></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[v2: rand_with_prohib(-4,4,[0,-1]);
v3: rand_with_prohib(-2,2,[0,-1-v2]);
v1: -1-v2-v3;

a11: 1;
a12: 1;
a13: -1;

a21: 0;
a22: 1;
a23: a+1;

a31: 0;
a32: 0;
a33: (a-v1)*(a-v2);


b1: 1;
b2: 1;
b3: a-v1;

A1: matrix([a11,a12,a13,b1],[a21,a22,a23,b2],[a31,a32,a33,b3]);

A2: rowop(A1,3,2,(a+v3));
A3: rowop(A2,3,1,-v3);
A4: rowop(A3,2,1,-1); 
A: expand( rowop(A4,3,3,2) );

gl1: A[1][1]*x1+A[1][2]*x2+A[1][3]*x3=A[1][4];
gl2: A[2][1]*x1+A[2][2]*x2+A[2][3]*x3=A[2][4];
gl3: A[3][1]*x1+A[3][2]*x2+A[3][3]*x3=A[3][4];
ls: solve([gl1,gl2,gl3],[x1,x2,x3]);

matA: submatrix(A,4);
vektorB: col(A,4);

pm11: if signum(A[1][1])<0 then "- " else " "; 
abs11: abs(A[1][1]);
pm21: if signum(A[2][1])<0 then "- " else " "; 
abs21: abs(A[2][1]);
pm31: if signum(A[3][1])<0 then "- " else " "; 
abs31: abs(A[3][1]);
pm12: if signum(A[1][2])>0 then "+" else "-"; 
abs12: abs(A[1][2]);
pm13: if signum(A[1][3])>0 then "+" else "-"; 
abs13: abs(A[1][3]);
pm22: if signum(A[2][2])>0 then "+" else "-"; 
abs22: abs(A[2][2]);
pm23: if signum(A[2][3])>0 then "+" else "-"; 
abs23: abs(A[2][3]);
pm32: if signum(A[3][2])>0 then "+" else "-"; 
abs32: abs(A[3][2]);
pm33: if signum(A[3][3])>0 then "+" else "-"; 
abs33: abs(A[3][3]);

gl1: A[1][1]*x1+A[1][2]*x2+A[1][3]*x3=A[1][4];
gl2: A[2][1]*x1+A[2][2]*x2+A[2][3]*x3=A[2][4];
gl3: A[3][1]*x1+A[3][2]*x2+A[3][3]*x3=A[3][4];
ls: solve([gl1,gl2,gl3],[x1,x2,x3]);

loes: expand( [ rhs(ls[1][1]) , rhs(ls[1][2]), rhs(ls[1][3]) ] );

erwA: matrix( [A[1,1],A[1,2],A[1,3],A[1,4]],[A[2,1],A[2,2],A[2,3],A[2,4]],[A[3,1],A[3,2],A[3,3],A[3,4]]);
trA: triangularize(erwA);]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\[{@A@}\]
Eindeutige Lösung für \(a\neq{@v1@}\) und \(a \neq {@v2@}\), Lösung: \({@loes@}\)</text>
    </questionnote>
    <questiondescription format="moodle_auto_format">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>(</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>loes</tans>
      <boxsize>40</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>v1</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>v2</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>ansm: if length(ans1)=3 then matrix([ans1[1]],[ans1[2]],[ans1[3]]);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>matA.ansm</sans>
        <tans>vektorB</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>listofvars(ansm)</sans>
        <tans>[a]</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>{ans2,ans3}</sans>
        <tans>{v1,v2}</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-0-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-0-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>1788287284</deployedseed>
    <deployedseed>576492072</deployedseed>
    <deployedseed>1476357967</deployedseed>
    <deployedseed>1268122836</deployedseed>
    <deployedseed>1371991493</deployedseed>
    <deployedseed>655297154</deployedseed>
    <deployedseed>186710872</deployedseed>
    <deployedseed>1281589498</deployedseed>
    <deployedseed>525493515</deployedseed>
    <deployedseed>1563792141</deployedseed>
    <deployedseed>801802172</deployedseed>
    <deployedseed>2078093997</deployedseed>
    <deployedseed>1192076959</deployedseed>
    <deployedseed>1336833604</deployedseed>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
    </tags>
  </question>

<!-- question: 806979  -->
  <question type="stack">
    <name>
      <text><![CDATA[5.2d LGS 3x3 mit Parameter a, Eine eindeutige Lösung [{"DOMAINUID":"4A80009"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben ist das lineare Gleichungssystem</p>
<p>\[ \begin{matrix} @a11*x1@ &amp; + &amp;  @a12*x2@ &amp; + &amp; @a13*x3@ &amp; = &amp; @a14@ \\ @a21*x1@ &amp;+ &amp; @a22*x2@ &amp; + &amp; @a23*x3@ &amp; = &amp; @a24@ \\<br />@a31*x1@ &amp;+ &amp; @a32*x2@ &amp; + &amp; @a33*x3@ &amp; = &amp; @a34@ \\ \end{matrix} \]</p>
<p>mit der Konstante \(a \in \mathbb{R}\).</p>
<p> </p>
<p>Für welchen Wert des Parameters \(a \in \mathbb{R}\) ist das System unlösbar?</p>
<p>\(a = \) [[input:ans1]] [[validation:ans1]] [[feedback:prt1]]</p>
<p> </p>
<p>Lösen Sie das Gleichungssystem und geben Sie die Lösung in Abhängigkeit des Parameters \(a\) an.</p>
<p>\(x_1=\) [[input:ans2]] [[validation:ans2]]</p>
<p>\(x_2=\) [[input:ans3]] [[validation:ans3]]</p>
<p>\(x_3=\) [[input:ans4]] [[validation:ans4]]</p>
<p>[[feedback:prt2]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text>ansa: rand_with_step(-5,5,1);
b11: a;
b12: rand_with_step(-4,-1,1);
b13: 1;
b14: 0;
b21: 0;
b22: a-ansa;
b23: 0;
b24: rand_with_prohib(-5,5,[0]);
b31: 1;
b32: 0;
b33: 0;
b34: rand([1,2])
B: matrix([b11,b12,b13,b14],[b21,b22,b23,b24],[b31,b32,b33,b34]);
m1: rand_with_step(1,3,1);
B2: rowop(B,2,3,m1);
m2: rand_with_step(-4,-2,1);
B3: rowop(B2,3,2,m2);
m3: rand_with_step(1,3,1);
B4: rowop(B3,2,1,m3);
a11:B4[1,1];
a12:B4[1,2];
a13: B4[1,3];
a14: B4[1,4];
a21: B4[2,1];
a22: B4[2,2];
a23: B4[2,3];
a24: B4[2,4];
a31: B4[3,1];
a32: B4[3,2];
a33: B4[3,3];
a34: B4[3,4];
g1: a11*x1+a12*x2+a13*x3=a14;
g2: a21*x1+a22*x2+a23*x3=a24;
g3: a31*x1+a32*x2+a33*x3=a34;
solx: b34;
soly: b24/(a-ansa);
solz: -1*a*solx-b12*soly;</text>
    </questionvariables>
    <specificfeedback format="html">
      <text><![CDATA[<p></p>
<p></p>]]></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(@g1@\)
\(@g2@\)
\(@g3@\)

Nicht lösbar, wenn \(a=@ansa@\)

Lösung: 
\(x_1=@solx@\)
\(x_2=@soly@\)
\(x_3=@solz@\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>ansa</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>solx</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>soly</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>algebraic</type>
      <tans>solz</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>ansa</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>studa: [ans2,ans3,ans4];
loes: [solx,soly,solz];</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>studa</sans>
        <tans>loes</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>762981691</deployedseed>
    <deployedseed>615494245</deployedseed>
    <deployedseed>1912087001</deployedseed>
    <deployedseed>388899144</deployedseed>
    <deployedseed>1114383343</deployedseed>
    <deployedseed>1982915372</deployedseed>
    <deployedseed>1821015661</deployedseed>
    <deployedseed>202362039</deployedseed>
    <deployedseed>436605394</deployedseed>
    <deployedseed>631539845</deployedseed>
    <deployedseed>146497151</deployedseed>
    <deployedseed>713044638</deployedseed>
    <deployedseed>252521667</deployedseed>
    <deployedseed>309749402</deployedseed>
    <deployedseed>685240683</deployedseed>
    <deployedseed>2103346159</deployedseed>
    <deployedseed>341589404</deployedseed>
    <deployedseed>1171178770</deployedseed>
    <deployedseed>185748767</deployedseed>
    <deployedseed>677616056</deployedseed>
    <deployedseed>249875737</deployedseed>
    <deployedseed>1562091133</deployedseed>
    <deployedseed>246487514</deployedseed>
    <deployedseed>116140804</deployedseed>
    <deployedseed>683422375</deployedseed>
    <deployedseed>276795014</deployedseed>
    <deployedseed>1588101762</deployedseed>
    <deployedseed>1538277379</deployedseed>
    <deployedseed>1250306008</deployedseed>
    <deployedseed>1660916988</deployedseed>
    <deployedseed>741760401</deployedseed>
    <deployedseed>178877753</deployedseed>
    <deployedseed>1532564938</deployedseed>
    <deployedseed>1805996623</deployedseed>
    <deployedseed>1989042334</deployedseed>
    <deployedseed>1480720917</deployedseed>
    <deployedseed>1142288497</deployedseed>
    <deployedseed>1843659555</deployedseed>
    <deployedseed>1061111534</deployedseed>
    <deployedseed>1787858709</deployedseed>
    <deployedseed>579006402</deployedseed>
    <deployedseed>112894164</deployedseed>
    <deployedseed>1035928632</deployedseed>
    <deployedseed>999443945</deployedseed>
    <deployedseed>984819812</deployedseed>
    <deployedseed>84206640</deployedseed>
    <deployedseed>1191304256</deployedseed>
    <deployedseed>1881434225</deployedseed>
    <deployedseed>1216909269</deployedseed>
    <deployedseed>1074029547</deployedseed>
  </question>

<!-- question: 806984  -->
  <question type="stack">
    <name>
      <text><![CDATA[5.2d LGS 3x3 mit Parameter a, Eine eindeutige Lösung [{"DOMAINUID":"4A80009"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben ist das lineare Gleichungssystem</p>
<p>\[ \begin{matrix} @a11*x1@ &amp; + &amp;  @a12*x2@ &amp; + &amp; @a13*x3@ &amp; = &amp; @a14@ \\ @a21*x1@ &amp;+ &amp; @a22*x2@ &amp; + &amp; @a23*x3@ &amp; = &amp; @a24@ \\<br />@a31*x1@ &amp;+ &amp; @a32*x2@ &amp; + &amp; @a33*x3@ &amp; = &amp; @a34@ \\ \end{matrix} \]</p>
<p>mit der Konstante \(a \in \mathbb{R}\).</p>
<p> </p>
<p>Für welchen Wert des Parameters \(a \in \mathbb{R}\) ist das System unlösbar?</p>
<p>\(a = \) [[input:ans1]] [[validation:ans1]] [[feedback:prt1]]</p>
<p> </p>
<p>Lösen Sie das Gleichungssystem und geben Sie die Lösung in Abhängigkeit des Parameters \(a\) an.</p>
<p>\(x_1=\) [[input:ans2]] [[validation:ans2]]</p>
<p>\(x_2=\) [[input:ans3]] [[validation:ans3]]</p>
<p>\(x_3=\) [[input:ans4]] [[validation:ans4]]</p>
<p>[[feedback:prt2]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text>ansa: rand_with_step(-5,5,1);
b11: a;
b12: rand_with_step(-4,-1,1);
b13: 1;
b14: 0;
b21: 0;
b22: a-ansa;
b23: 0;
b24: rand_with_prohib(-5,5,[0]);
b31: 1;
b32: 0;
b33: 0;
b34: rand([1,2])
B: matrix([b11,b12,b13,b14],[b21,b22,b23,b24],[b31,b32,b33,b34]);
m1: rand_with_step(1,3,1);
B2: rowop(B,2,3,m1);
m2: rand_with_step(-4,-2,1);
B3: rowop(B2,3,2,m2);
m3: rand_with_step(1,3,1);
B4: rowop(B3,2,1,m3);
a11:B4[1,1];
a12:B4[1,2];
a13: B4[1,3];
a14: B4[1,4];
a21: B4[2,1];
a22: B4[2,2];
a23: B4[2,3];
a24: B4[2,4];
a31: B4[3,1];
a32: B4[3,2];
a33: B4[3,3];
a34: B4[3,4];
g1: a11*x1+a12*x2+a13*x3=a14;
g2: a21*x1+a22*x2+a23*x3=a24;
g3: a31*x1+a32*x2+a33*x3=a34;
solx: b34;
soly: b24/(a-ansa);
solz: -1*a*solx-b12*soly;</text>
    </questionvariables>
    <specificfeedback format="html">
      <text><![CDATA[<p></p>
<p></p>]]></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(@g1@\)
\(@g2@\)
\(@g3@\)

Nicht lösbar, wenn \(a=@ansa@\)

Lösung: 
\(x_1=@solx@\)
\(x_2=@soly@\)
\(x_3=@solz@\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>ansa</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>solx</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>soly</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>algebraic</type>
      <tans>solz</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>ansa</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>studa: [ans2,ans3,ans4];
loes: [solx,soly,solz];</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>studa</sans>
        <tans>loes</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>762981691</deployedseed>
    <deployedseed>615494245</deployedseed>
    <deployedseed>1912087001</deployedseed>
    <deployedseed>388899144</deployedseed>
    <deployedseed>1114383343</deployedseed>
    <deployedseed>1982915372</deployedseed>
    <deployedseed>1821015661</deployedseed>
    <deployedseed>202362039</deployedseed>
    <deployedseed>436605394</deployedseed>
    <deployedseed>631539845</deployedseed>
    <deployedseed>146497151</deployedseed>
    <deployedseed>713044638</deployedseed>
    <deployedseed>252521667</deployedseed>
    <deployedseed>309749402</deployedseed>
    <deployedseed>685240683</deployedseed>
    <deployedseed>2103346159</deployedseed>
    <deployedseed>341589404</deployedseed>
    <deployedseed>1171178770</deployedseed>
    <deployedseed>185748767</deployedseed>
    <deployedseed>677616056</deployedseed>
    <deployedseed>249875737</deployedseed>
    <deployedseed>1562091133</deployedseed>
    <deployedseed>246487514</deployedseed>
    <deployedseed>116140804</deployedseed>
    <deployedseed>683422375</deployedseed>
    <deployedseed>276795014</deployedseed>
    <deployedseed>1588101762</deployedseed>
    <deployedseed>1538277379</deployedseed>
    <deployedseed>1250306008</deployedseed>
    <deployedseed>1660916988</deployedseed>
    <deployedseed>741760401</deployedseed>
    <deployedseed>178877753</deployedseed>
    <deployedseed>1532564938</deployedseed>
    <deployedseed>1805996623</deployedseed>
    <deployedseed>1989042334</deployedseed>
    <deployedseed>1480720917</deployedseed>
    <deployedseed>1142288497</deployedseed>
    <deployedseed>1843659555</deployedseed>
    <deployedseed>1061111534</deployedseed>
    <deployedseed>1787858709</deployedseed>
    <deployedseed>579006402</deployedseed>
    <deployedseed>112894164</deployedseed>
    <deployedseed>1035928632</deployedseed>
    <deployedseed>999443945</deployedseed>
    <deployedseed>984819812</deployedseed>
    <deployedseed>84206640</deployedseed>
    <deployedseed>1191304256</deployedseed>
    <deployedseed>1881434225</deployedseed>
    <deployedseed>1216909269</deployedseed>
    <deployedseed>1074029547</deployedseed>
  </question>

<!-- question: 807157  -->
  <question type="stack">
    <name>
      <text><![CDATA[Komplexe Zahlen: Wurzel [{"DOMAINUID":"684855D"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben sind die komplexen Zahlen:</p>
<p>\[z_1=@z1@\]</p>
<p>\[z_2=@z2@\]</p>
<p> </p>
<p>Berechnen Sie den folgenden Ausdruck.</p>
<p>\[\Large\sqrt[@w@]{z_1\cdot z_2}\]</p>
<p> </p>
<p>Berechnen Sie die Antwort in der Polarform \[\large z= r\cdot e^{\,j\cdot(\varphi+\alpha\cdot k)}, k=0,1,...\] und geben Sie \(\,r\,\), \(\,\varphi\,\) und \(\,\alpha\,\) ein.</p>
<p> </p>
<p><strong>Hinweise:</strong></p>
<ul>
<li>Geben Sie die exakte Antworten ein. Keine Dezimalzahlen.</li>
<li>Schreiben Sie \(\pi\) als <strong>pi</strong>.</li>
<li>Schreiben Sie \(\large\sqrt[n]{a}\) als <strong>a^(1/n)</strong></li>
</ul>
<p> </p>
<p>\(r=\,\)[[input:ans1]] [[validation:ans1]]</p>
<p>\(\varphi=\,\)[[input:ans2]] [[validation:ans2]]</p>
<p>\(\alpha=\,\)[[input:ans3]] [[validation:ans3]]</p>
<p>[[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text>w: rand_with_step(3,4,1);

z1_re: rand_with_prohib(-5,5,[0]);
z1_im: rand([z1_re,-1*z1_re])
z1: (z1_re)+(z1_im)*%i;

z2_re: rand_with_prohib(-5,5,[0,z1_re,-z1_re]);
z2_im: rand([z2_re,-1*z2_re])
z2: (z2_re)+(z2_im)*%i;

z1_arg: carg(z1);
z1_abs: abs(z1);
z2_arg: carg(z2);
z2_abs: abs(z2);
labs: (z2_abs*(z1_abs))^(1/w);
larg: (1/w)*(z1_arg+z2_arg);
abstand: (1/w)*2*%pi;</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(\sqrt[@w@]{@z1@\cdot @z2@}=(@labs@,@larg@,@abstand@)\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>j</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>labs</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>larg</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>abstand</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>p: 0;
h: for i:-4 step 1 thru 4 do if larg+i*abstand-ans2=0 then p:1;</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>labs</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>\(r\) ist korrekt.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(r\) ist falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>p</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>\(\varphi\) ist korrekt.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(\varphi\) ist falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>abstand</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>3</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>\(\alpha\) ist korrekt.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>3</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>\(\alpha\) ist falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>[ans1,p,ans3]</sans>
        <tans>[labs,1,abstand]</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>319186769</deployedseed>
    <deployedseed>808332005</deployedseed>
    <deployedseed>1144714592</deployedseed>
    <deployedseed>108697833</deployedseed>
    <deployedseed>126793266</deployedseed>
    <deployedseed>2126030096</deployedseed>
    <deployedseed>1017678581</deployedseed>
    <deployedseed>891774482</deployedseed>
    <deployedseed>1909395835</deployedseed>
    <deployedseed>684225392</deployedseed>
    <deployedseed>638345987</deployedseed>
    <deployedseed>624883714</deployedseed>
    <deployedseed>674345996</deployedseed>
    <deployedseed>1778103106</deployedseed>
    <deployedseed>354046804</deployedseed>
    <deployedseed>754883998</deployedseed>
    <deployedseed>1026054642</deployedseed>
    <deployedseed>1289137452</deployedseed>
    <deployedseed>791122487</deployedseed>
    <deployedseed>583588491</deployedseed>
    <deployedseed>833006904</deployedseed>
    <deployedseed>856991826</deployedseed>
    <deployedseed>1928469458</deployedseed>
    <deployedseed>2103001651</deployedseed>
    <deployedseed>1685831077</deployedseed>
    <deployedseed>1357178056</deployedseed>
    <deployedseed>865493349</deployedseed>
    <deployedseed>14228774</deployedseed>
    <deployedseed>179784383</deployedseed>
    <deployedseed>1340676804</deployedseed>
    <deployedseed>1850742726</deployedseed>
  </question>

<!-- question: 807430  -->
  <question type="stack">
    <name>
      <text>Lineares Gleichungssystem: Gauß-Algorithmus</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Bestimmen Sie für&nbsp;<br></p><p style="">\({@A@}={@m@}\) und &nbsp; \(b={@b@}\)<br></p>die Lösung des linearen Gleichungssystems \( A\cdot x=b  \)<div class="editor-indent" style="margin-left: 30px;"><h5><ul><li><span style="font-weight: normal;">\({@x1@}=\) [[input:ans1]] [[validation:ans1]][[feedback:prt1]]</span></li><li><span style="font-weight: normal;">\({@x2@}=\) [[input:ans2]] [[validation:ans2]][[feedback:prt2]]</span></li><li><span style="font-weight: normal;">\({@x3@}=\) [[input:ans3]] [[validation:ans3]][[feedback:prt3]]</span></li><li><span style="font-weight: normal;">\({@x4@}=\) [[input:ans4]] [[validation:ans4]][[feedback:prt4]]</span></li></ul></h5></div><p></p><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<h4><strong>Lösung</strong></h4><p><br></p><p>Mit Gauss:</p><p>\(\left(\begin{array}{cccc|c}-1&amp;1&amp;-1&amp;1&amp;{@A1@}\\1&amp;1&amp;1&amp;1&amp;{@A1+1@}\\8&amp;4&amp;2&amp;1&amp;{@A1+2@}\\0&amp;0&amp;0&amp;1&amp;{@A1+3@}\end{array}\right)\xrightarrow{II+I, III+8I}\left(\begin{array}{cccc|c}-1&amp;1&amp;-1&amp;1&amp;{@A1@}\\0&amp;2&amp;0&amp;2&amp;{@2*A1+1@}\\0&amp;12&amp;-6&amp;9&amp;{@9*A1+2@}\\0&amp;0&amp;0&amp;1&amp;{@A1+3@} \end{array}\right)\xrightarrow{III-6II}\left(\begin{array}{cccc|c}-1&amp;1&amp;-1&amp;1&amp; {@A1@}\\0&amp;2&amp;0&amp;2&amp;{@2*A1+1@}\\0&amp;0&amp;-6&amp;-3&amp;{@-3*A1-4@}\\0&amp;0&amp;0&amp;1&amp;{@A1+3@}\end{array}\right)\)</p><p><br></p><p><strong>IV</strong><strong>: </strong>\(x_4={@A1+3@}\)</p><p><br></p><p><strong>III</strong><strong>: </strong>\(-6x_3-3x_4={@-3*A1-4@}\) mit IV:</p><p>&nbsp; &nbsp; &nbsp;\(-6x_3-3\cdot {@A1+3@}={@-3*A1-4@}\)&nbsp; &nbsp; \(\Leftrightarrow\)&nbsp; &nbsp;\(x_3={@t3@}\)</p><p><br></p><p><strong>II:</strong> \(2x_2+2x_4={@2*A1+1@}\)&nbsp; mit IV:</p><p>&nbsp; &nbsp; \(2x_2+2\cdot {@t4@}={@2*A1+1@}\)&nbsp; &nbsp; \(\Leftrightarrow\)&nbsp; &nbsp;\(x_2={@t2@}\)<br></p><p><br></p><p><strong>I: </strong>\(-x_1+x_2-x_3+x_4={@A1@}\)&nbsp; mit II, III, IV:</p><p>&nbsp; &nbsp;\(-x_1+{@t2@}-{@t3@}+{@t4@}={@A1@}\)&nbsp; &nbsp; \(\Leftrightarrow\)&nbsp; &nbsp;\(x_1={@t1@}\)</p><p><br></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text>A1:rand(10);
A2:1+rand(30);
m : matrix( [-1,1,-1,1],[1,1,1,1],[8,4,2,1],[0,0,0,1] )

b : matrix([A1],[A1+1],[A1+2],[A1+3]);

ta:linsolve_by_lu(m,b)
tbb:ta[1];
t1:tbb[1,1];
t2:tbb[2,1];
t3:tbb[3,1];
t4:tbb[4,1];

/* Liste erzeugen */
liste:makelist(tbb);
f1:tbb[1,1];
f2:tbb[2,1];
f3:tbb[3,1];
f4:tbb[4,1];</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>n</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>(</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>t1</tans>
      <boxsize>4</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>t2</tans>
      <boxsize>4</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>t3</tans>
      <boxsize>4</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>algebraic</type>
      <tans>t4</tans>
      <boxsize>4</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>NumRelative</answertest>
        <sans>ans1</sans>
        <tans>t1</tans>
        <testoptions>0.05</testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>NumRelative</answertest>
        <sans>ans2</sans>
        <tans>t2</tans>
        <testoptions>0.05</testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt3</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>NumRelative</answertest>
        <sans>ans3</sans>
        <tans>t3</tans>
        <testoptions>0.05</testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt3-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt3-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt4</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>NumRelative</answertest>
        <sans>ans4</sans>
        <tans>t4</tans>
        <testoptions>0.05</testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt4-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt4-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>TE:1:Lineare Algebra</text>
</tag>
      <tag><text>TE:2:Lineare Gleichungssysteme</text>
</tag>
      <tag><text>te:3:Lösungsmenge</text>
</tag>
      <tag><text>TE:3:Gauß-Algorithmus</text>
</tag>
      <tag><text>src:F07-INT</text>
</tag>
      <tag><text>Bloom:3</text>
</tag>
      <tag><text>Maier:1:2</text>
</tag>
      <tag><text>Maier:2:2</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>praxiserprobt</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:TaggingGeprueft</text>
</tag>
      <tag><text>qs:importIliasGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 0  -->
  <question type="category">
    <category>
      <text>$course$/top/Matritzen</text>
    </category>
    <info format="html">
      <text></text>
    </info>
    <idnumber></idnumber>
  </question>

<!-- question: 807954  -->
  <question type="multichoice">
    <name>
      <text>Inverse ex nicht 2</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Welche der folgenden Matrizen ist invers zu \(A\)?<br></p>$$A=\begin{pmatrix} 1 &amp; 0 &amp; 0\\ 0 &amp; 2 &amp; 2\\ 1 &amp; 0 &amp; 1\end{pmatrix}$$]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<h4>Lösung</h4><p><br></p><p>\(\left(\begin{array}{ccc|ccc}1&amp;0&amp;0&amp;1&amp;0&amp;0\\0&amp;2&amp;2&amp;0&amp;1&amp;0\\1&amp;0&amp;1&amp;0&amp;0&amp;1\end{array}\right)\xrightarrow{III-I}\left(\begin{array}{ccc|ccc}1&amp;0&amp;0&amp;1&amp;0&amp;0\\0&amp;2&amp;2&amp;0&amp;1&amp;0\\0&amp;0&amp;1&amp;-1&amp;0&amp;1\end{array}\right)\)</p><p>\(\xrightarrow{II:2}\left(\begin{array}{ccc|ccc}1&amp;0&amp;0&amp;1&amp;0&amp;0\\0&amp;1&amp;1&amp;0&amp;\frac{1}{2}&amp;0\\0&amp;0&amp;1&amp;-1&amp;0&amp;1\end{array}\right)\xrightarrow{II-III}\left(\begin{array}{ccc|ccc}1&amp;0&amp;0&amp;1&amp;0&amp;0\\0&amp;1&amp;0&amp;1&amp;\frac{1}{2}&amp;-1\\0&amp;0&amp;1&amp;-1&amp;0&amp;1\end{array}\right)\)<br></p><p><br></p><p>\(A^{-1}=\left(\begin{matrix} 1 &amp;0 &amp; 0 \\1 &amp; \frac{1}{2} &amp; -1\\-1 &amp;0 &amp;1 \end{matrix}\right)\)</p><p><br></p><p>Alternativ \(A \cdot A^{-1}=A^{-1} \cdot A=E\) überprüfen!</p><p><br></p><p><br></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text></text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text></text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text></text>
    </incorrectfeedback>
    <answer fraction="100" format="html">
      <text><![CDATA[<p>\(\begin{pmatrix} 1 &amp; 0 &amp; 0 \\ 1 &amp; \frac{1}{2} &amp; -1 \\ -1 &amp; 0 &amp; 1 \end{pmatrix}\)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>\(\begin{pmatrix} 1 &amp; 0 &amp; 0\\ 2 &amp; 1 &amp; -2\\ 1 &amp; 0 &amp; -1\end{pmatrix}\)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>\(\begin{pmatrix} 1 &amp; 0&amp; 0\\ 0 &amp; 1 &amp; 0\\ 0 &amp; 0 &amp; 1 \end{pmatrix}\)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[\(\begin{pmatrix} 1 &amp; 0 &amp; 0 \\ 0 &amp; \frac{1}{2} &amp; 0 \\ 0 &amp; 0 &amp; 1 \end{pmatrix}\)]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>TE:1:Lineare Algebra</text>
</tag>
      <tag><text>TE:2:Matrizen</text>
</tag>
      <tag><text>TE:3:Multiplikation</text>
</tag>
      <tag><text>TE:3:Inverse Matrix</text>
</tag>
      <tag><text>src:F07-INT</text>
</tag>
      <tag><text>Bloom:3</text>
</tag>
      <tag><text>Maier:1:2</text>
</tag>
      <tag><text>Maier:2:2</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>praxiserprobt</text>
</tag>
      <tag><text>ILIAS-Import-Error</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:TaggingGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 807647  -->
  <question type="stack">
    <name>
      <text><![CDATA[Invertierbarkeit einer 3x3 Matrix [{"DOMAINUID":"8F3E565"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben ist die Matrix \(\mathbf{A}\) in Abhängigkeit von Parameter \(p\).</p>
<p>\(\mathbf{A}\,=\, \left({@B@}\right) \)</p>
<p>Für welche \(p\) besitzt \(\mathbf{A}\) keine Inverse \(\mathbf{A}^{-1}\)&nbsp;?</p>
<p><em></em></p><p><strong>Hinweis:</strong>&nbsp;Geben Sie die Antwort komma-getrennt mit geschweiften Klammern in der Form einer Lösungsmenge \(\mathbb{L}_{p} = \{p_1, p_2, p_3\}\) ein.</p><p>\(\mathbb{L}_{p} = \)&nbsp;[[input:ans1]]&nbsp;[[validation:ans1]] [[feedback:prt1]]</p><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p><strong>Lösungsweg:</strong></p>
<p>Für die Inverse einer Matrix&nbsp;\( \mathbf{A} \) gilt:&nbsp;<span style="font-size: 0.9375rem;">\(\mathbf{A}^{-1}\) existiert \(\Leftrightarrow \det(\mathbf{A}) \neq 0 \).</span></p>
<p>Folglich müssen wir alle Werte berechnen, für die \(&nbsp;\det(\mathbf{A}) = 0 \) gilt, da für diese entsprechend keine Inverse existiert.</p>
<p>Wir berechnen die Determinante mithilfe des Satzes von Sarrus:</p>
<p>\(\qquad \det(\mathbf{A}) = \left( {@p+a11+q@} \cdot ({@p+a22+q@}) \cdot ({@p+a33+q@}) \right) + \left( {@a12@} \cdot ({@a23@}) \cdot ({@a31@}) \right) + \left( {@a13@} \cdot ({@a21@}) \cdot ({@a32@}) \right) \) \(- \left( {@a31@} \cdot ({@p+a22+q@}) \cdot ({@a13@}) \right) - \left( {@a32@} \cdot ({@a23@}) \cdot ({@p+a11+q@}) \right) - \left( {@p+a33+q@} \cdot ({@a21@}) \cdot ({@a12@}) \right) \) \(= {@a@} + {@b@} +&nbsp;{@c@} - {@d@} - {@e@} - {@f@} \) \( = {@simplify(a+b+c-d-e-f)@}\)</p>
<p>Wir lösen nun folgende Gleichung:</p>
<p>\(\qquad \det(\mathbf{A}) =&nbsp;{@simplify(a+b+c-d-e-f)@} = 0 \)</p>
<p>Durch Ausprobieren erhalten wir als eine mögliche Lösung \( p_{1} = {@loes1@} \). Mithilfe der Polynomdivision können wir nun die restlichen Nullstellen berechnen:</p>
<p>\(\qquad ( {@simplify(a+b+c-d-e-f)@}) : ({@p-loes1@}) =&nbsp; {@poly@} \)</p>
<p>Mithilfe der \(pq-Formel \) oder \(abc-Formel\) können die restlichen Lösungen berechnet werden:</p>
<p>\( \qquad p_{2} = {@loes2@} \)</p>
<p>\( \qquad &nbsp;p_{3} = {@loes3@}&nbsp;\)</p>
<p>Damit existiert für \( p = {@loesung@} \) keine Inverse \(&nbsp;\mathbf{A}^{-1} \).</p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text>a11: -1;a12: -1;a13: 1;a21: 5;a22: -7;a23: 1;a31: 2;a32: -2;a33: rand(2);q: rand_with_step(-4,4,1);B: matrix( [a11+p+q,a12,a13], [a21,a22+p+q,a23], [a31,a32,a33+p+q ]);a: simplify((p+a11+q)*(p+a22+q)*(p+a33+q));b: simplify(a12*a23*a31);c: simplify(a13*a21*a32);d: simplify(a31*(p+a22+q)*a13);e: simplify(a32*a23*(p+a11+q));f: simplify((p+a33+q)*a21*a12);detB: determinant(B);loes: solve( [detB] , [p] );loes1: rhs(loes[1]);loes2: rhs(loes[2]);loes3: rhs(loes[3]);loesung: {loes1,loes2,loes3};poly: lhs(divide(simplify(a+b+c-d-e-f),(p-loes1))[1]);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(\mathbf{A}\,=\, {@B@} \)\(Lösungen={@loesung@}\)</text>
    </questionnote>
    <questiondescription format="moodle_auto_format">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p><em><strong>Ihre Antwort ist korrekt.</strong></em></p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p><em><strong>Ihre Antwort ist teilweise korrekt.</strong></em></p>
<p><strong>Lösung:</strong></p>
<p>\(p\,=\,\) {@loesung@}</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p><em><strong>Ihre Antwort ist nicht korrekt.</strong></em></p>
<p><strong>Lösung:</strong></p>
<p>\(p\,=\,\) {@loesung@}</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens></matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>loesung</tans>
      <boxsize>40</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>2</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>mengeans:ans1;
mengetans:{loes1,loes2,loes3};
schnitt:intersection(mengeans,mengetans);
anzahlans:cardinality(schnitt);</text>
      </feedbackvariables>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>anzahlans</sans>
        <tans>2</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.6700000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>anzahlans</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.3300000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>{loes1,loes2,loes3}</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>+</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-4-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-4-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>3858772</deployedseed>
    <deployedseed>58885936</deployedseed>
    <deployedseed>120043604</deployedseed>
    <deployedseed>497076192</deployedseed>
    <deployedseed>527844555</deployedseed>
    <deployedseed>843152400</deployedseed>
    <deployedseed>1017529452</deployedseed>
    <deployedseed>1087281775</deployedseed>
    <deployedseed>1211510016</deployedseed>
    <deployedseed>1435663474</deployedseed>
    <deployedseed>1435858504</deployedseed>
    <deployedseed>1502168211</deployedseed>
    <deployedseed>1723052341</deployedseed>
    <deployedseed>1839609200</deployedseed>
    <deployedseed>1863563988</deployedseed>
    <deployedseed>2032444744</deployedseed>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
    </tags>
  </question>

<!-- question: 807646  -->
  <question type="stack">
    <name>
      <text><![CDATA[LinAlg_009_Matrizen_Inverse_2x2 [{"DOMAINUID":"843F971"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Bestimmen Sie die inverse Matrix zu \(\mathbf{M} = {@M@}\).</p><p></p><span style="font-size: 0.9375rem;">\(\mathbf{M}^{-1} = \) [[input:ans1]] [[validation:ans1]]</span><br><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;"><strong>Lösungsweg:</strong></p><p dir="ltr" style="text-align: left;">Man kann die inverse Matrix \(\mathbf{M}^{-1}\) z.B. mit Hilfe der&nbsp;Unterdeterminanten-Methode bestimmen.</p><p dir="ltr" style="text-align: left;">(1) Berechnung der Determinante der ursprünglichen Matrix \(\mathbf{M}\).&nbsp;</p><p dir="ltr" style="text-align: left;">\(\det(\mathbf{M}) = {@M[1][1]@} \cdot ({@M[2][2]@}) - ({@M[2][1]@}) \cdot ({@M[1][2]@})\) \(= {@M[1][1]*M[2][2]@} - ({@M[2][1]*M[1][2]@})\) \(= {@determinant(M)@}\)</p><p dir="ltr" style="text-align: left;">(2) Bestimmung aller Unterdeterminanten&nbsp;der ursprünglichen Matrix \(\mathbf{M}\).&nbsp;</p><p dir="ltr" style="text-align: left;"></p><ul><li>\(M_{11} = (-1)^{1+1} \cdot&nbsp;({@M[2][2]@}) = {@M[2][2]@}\)</li><li>\(M_{12} = (-1)^{1+2} \cdot&nbsp;({@M[2][1]@}) = {@-M[2][1]@}\)</li><li>\(M_{21} = (-1)^{2+1} \cdot&nbsp;({@M[1][2]@}) = {@-M[1][2]@}\)</li><li>\(M_{22} = (-1)^{2+2} \cdot&nbsp;({@M[1][1]@}) = {@M[1][1]@}\)</li></ul><p></p><p dir="ltr" style="text-align: left;">(3) Bestimmung der gesuchten&nbsp;inversen Matrix \(\mathbf{M}^{-1}\).</p><p dir="ltr" style="text-align: left;">\(\mathbf{M}^{-1} = \dfrac{1}{{@determinant(M)@}} \cdot {@Trans@}^T\) \(= {@1/determinant(M)@} \cdot {@TransT@}\) \(={@LSG@}\)<br></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text>a:rand_with_step(-4,4,1);
b:rand_with_step(-4,4,1);
Tri1:matrix([1,a],[0,1]);
Tri2:matrix([1,0],[b,1]);
d1:rand_with_prohib(-1,1,[0]);
d2:rand_with_prohib(-1,1,[0]);
D:matrix([d1,0],[0,d2]);
M:D.Tri1.Tri2;
LSG:invert(M);
Trans:matrix([M[2][2],-M[2][1]],[-M[1][2],M[1][1]]);
TransT:transpose(Trans);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>Rand aktiv</text>
    </questionnote>
    <questiondescription format="moodle_auto_format">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span>&nbsp;Richtig.]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-adjust"></i></span>&nbsp;Teilweise richtig.]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa fa-times"></i></span>&nbsp;Falsch.]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>(</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>matrix</type>
      <tans>LSG</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>N:ans1.M;
I:matrix([1,0],[0,1]);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>LSG</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Korrekt!&nbsp;</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Die Matrix \({@ans1@}\) ist nicht die Inverse von \({@M@}\), denn</p><p>\({@ans1@} \cdot {@M@} = {@N@} \neq {@I@} \).</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>Musterlösung</text>
</tag>
      <tag><text>Rückmeldebaum</text>
</tag>
    </tags>
  </question>

<!-- question: 807943  -->
  <question type="stack">
    <name>
      <text>Lineare Algebra: Inverse</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<strong><span style="font-size:20px;"><strong></strong></span></strong><span style="font-size: 20px;"></span><span><span style="font-size: 16px;"></span></span><p style="">Berechnen Sie die Inverse der folgenden Matrizen.&nbsp;</p><b>a)</b> \(A = \begin{bmatrix}
1 &amp; {@a@} &amp; 0  \\
{@a@}&amp; 1 &amp; {@a@}  \\
0 &amp; {@a@} &amp; 1  \\
\end{bmatrix} \)<p>&nbsp;<br data-cke-eol="1"></p><p></p><div class="editor-indent" style="margin-left: 30px;"><div class="editor-indent" style="margin-left: 30px;"><p>&nbsp; &nbsp; &nbsp; &nbsp;[[input:ans1]]&nbsp; [[input:ans2]]&nbsp; [[input:ans3]]&nbsp;</p></div></div><div class="editor-indent" style="margin-left: 30px;"><p>\(A^{-1} =\) [[input:ans4]]&nbsp; [[input:ans5]]&nbsp; [[input:ans6]]</p></div><div class="editor-indent" style="margin-left: 30px;"><div class="editor-indent" style="margin-left: 30px;"><p>&nbsp; &nbsp; &nbsp; &nbsp;[[input:ans7]]&nbsp; [[input:ans8]]&nbsp; [[input:ans9]]&nbsp;</p><p>[[validation:ans1]][[validation:ans2]][[validation:ans3]]</p><p>[[validation:ans4]][[validation:ans5]][[validation:ans6]]</p><p>[[validation:ans7]][[validation:ans8]][[validation:ans9]]</p><p></p><p>[[feedback:prt1]]&nbsp;[[feedback:prt2]][[feedback:prt3]]<br></p><p>[[feedback:prt4]][[feedback:prt5]][[feedback:prt6]]<br></p><p>[[feedback:prt7]][[feedback:prt8]][[feedback:prt9]]</p><br><p></p><p></p><p><br></p></div></div><p></p><p><span><span><b>b)</b> \(B = \begin{bmatrix} \dfrac{1}{{@b@}}  &amp; - \dfrac{{@bplus1@}}{{@b@}} &amp; 1 \\ 0&amp; \dfrac{{@bplus1@}}{{@b@}}&amp;-1\\ 0 &amp; -1 &amp; 1 \\ \end{bmatrix} \)</span></span></p><p><span><span><br></span></span></p><div class="editor-indent" style="margin-left: 30px;"><p></p><div><div><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [[input:ans10]]&nbsp; [[input:ans11]]&nbsp; [[input:ans12]]</p></div></div><p></p><p></p><div><span>\(B^{-1} =\) [[input:ans13]]&nbsp; [[input:ans14]]&nbsp; [[input:ans15]]</span></div><p></p><p></p><div><div><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [[input:ans16]]&nbsp; [[input:ans17]]&nbsp; [[input:ans18]]&nbsp;</p></div></div></div><div class="editor-indent" style="margin-left: 30px;"><div class="editor-indent" style="margin-left: 30px;"><p>[[validation:ans10]][[validation:ans11]][[validation:ans12]]</p></div><div class="editor-indent" style="margin-left: 30px;"><p>[[validation:ans13]][[validation:ans14]][[validation:ans15]]</p></div><div class="editor-indent" style="margin-left: 30px;"><p>[[validation:ans16]][[validation:ans17]][[validation:ans18]]</p><p></p><p>[[feedback:prt10]][[feedback:prt11]][[feedback:prt12]]<br></p><p>[[feedback:prt13]][[feedback:prt14]][[feedback:prt15]]<br></p><p>[[feedback:prt16]][[feedback:prt17]][[feedback:prt18]]</p><br><p></p></div></div><p></p><p><b>Hinweis:</b>&nbsp;Geben Sie die Werte gegebenfalls in Brüchen an.</p><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p><b>Musterlösung:</b></p><p><br></p><p><b>a)</b>&nbsp;\(A = \begin{bmatrix} 1 &amp; {@a@} &amp; 0 \\ {@a@}&amp; 1 &amp; {@a@} \\ 0 &amp; {@a@} &amp; 1 \\ \end{bmatrix} \)<br></p><p>&nbsp; &nbsp; Mit Gauss:</p><p><br></p><div class="editor-indent" style="margin-left: 30px;"><p>\(\left[ \begin{array}{ccc|ccc} 1 &amp; {@a@} &amp; 0 &amp; 1 &amp; 0 &amp; 0 \\ {@a@} &amp; 1 &amp; {@a@} &amp; 0 &amp; 1 &amp; 0 \\ 0 &amp; {@a@} &amp; 1 &amp; 0 &amp; 0 &amp;1 \end{array}\right] \xrightarrow{II-{@a@}I} \left[ \begin{array}{ccc|ccc} 1 &amp; {@a@} &amp; 0 &amp; 1 &amp; 0 &amp; 0 \\ 0 &amp; {@a1@} &amp; {@a@} &amp; {@a2@} &amp; 1 &amp; 0 \\ 0 &amp; {@a@} &amp; 1 &amp; 0 &amp; 0 &amp;1 \end{array}\right] \xrightarrow{II/({@a1@}), III/({@a@})}\)</p></div><div class="editor-indent" style="margin-left: 30px;"><p>\(\left[ \begin{array}{ccc|ccc} 1 &amp; {@a@} &amp; 0 &amp; 1 &amp; 0 &amp; 0 \\ 0 &amp; 1 &amp; {@a3@} &amp; {@a4@} &amp; {@a10@} &amp; 0 \\ 0 &amp; 1 &amp; {@a5@} &amp; 0 &amp; 0 &amp; {@a5@} \end{array}\right] \xrightarrow{III-II} \left[ \begin{array}{ccc|ccc} 1 &amp; {@a@} &amp; 0 &amp; 1 &amp; 0 &amp; 0 \\ 0 &amp; 1 &amp; {@a3@} &amp; {@a4@} &amp; {@a10@} &amp; 0 \\ 0 &amp; 0 &amp; {@a6@} &amp; {@a3@} &amp; {@a4@} &amp; {@a5@} \end{array}\right] \xrightarrow{III \cdot ({@a11@})}\)</p><p>\(\left[ \begin{array}{ccc|ccc} 1 &amp; {@a@} &amp; 0 &amp; 1 &amp; 0 &amp; 0 \\ 0 &amp; 1 &amp; {@a3@} &amp; {@a4@} &amp; {@a10@} &amp; 0 \\ 0 &amp; 0 &amp; 1 &amp; {@a7@} &amp; {@a8@} &amp; {@a9@} \end{array}\right]\xrightarrow{II - ({@a3@} \cdot III)} \left[ \begin{array}{ccc|ccc} 1 &amp; {@a@} &amp; 0 &amp; 1 &amp; 0 &amp; 0 \\ 0 &amp; 1 &amp; 0 &amp; {@a12@} &amp; {@a13@} &amp; {@a14@} \\ 0 &amp; 0 &amp; 1 &amp; {@a7@} &amp; {@a8@} &amp; {@a9@} \end{array}\right] \xrightarrow{I- {@a@}II}\)</p><p>\(\left[ \begin{array}{ccc|ccc} 1 &amp; 0 &amp; 0 &amp; {@a15@} &amp; {@a16@} &amp; {@a17@} \\ 0 &amp; 1 &amp; 0 &amp; {@a12@} &amp; {@a13@} &amp; {@a14@} \\ 0 &amp; 0 &amp; 1 &amp; {@a7@} &amp; {@a8@} &amp; {@a9@} \end{array}\right]\)</p><p><br></p></div><span style="">&nbsp; &nbsp; &nbsp; Das heißt:</span><p><span style="">&nbsp; &nbsp; &nbsp; \( A^{-1}=\left[ \begin{array}{ccc} {@a15@} &amp; {@a16@} &amp; {@a17@} \\ {@a12@} &amp; {@a13@} &amp; {@a14@} \\ {@a7@} &amp; {@a8@} &amp; {@a9@} \end{array}\right]\)</span></p><p><span style=""><br></span></p><p><span style=""><br></span><span style=""><b>b)</b>&nbsp;\(B = \begin{bmatrix} {@b1@} &amp; - {@b2@} &amp; 1 \\ 0&amp; {@b2@}&amp;-1\\ 0 &amp; -1 &amp; 1 \\ \end{bmatrix} \)<br></span></p><p>&nbsp; &nbsp; &nbsp;Mit Gauss:</p><p>&nbsp; &nbsp;</p><div class="editor-indent" style="margin-left: 30px;"><p>\(\left[ \begin{array}{ccc|ccc} {@b1@} &amp; - {@b2@} &amp; 1 &amp; 1 &amp; 0 &amp; 0 \\ 0&amp; {@b2@}&amp;-1 &amp; 0 &amp; 1 &amp; 0 \\ 0 &amp; -1 &amp; 1 &amp; 0 &amp; 0 &amp;1 \end{array}\right] \xrightarrow{I+II} \left[ \begin{array}{ccc|ccc} {@b1@} &amp; 0 &amp; 0 &amp; 1 &amp; 1 &amp; 0 \\ 0&amp; {@b2@}&amp;-1 &amp; 0 &amp; 1 &amp; 0 \\ 0 &amp; -1 &amp; 1 &amp; 0 &amp; 0 &amp;1 \end{array}\right] \xrightarrow{{@b@}I, III+{@b3@}II}\)</p><p>\(\left[ \begin{array}{ccc|ccc} 1 &amp; 0 &amp; 0 &amp; {@b@} &amp; {@b@} &amp; 0 \\ 0&amp; {@b2@} &amp; -1 &amp; 0 &amp; 1 &amp; 0 \\ 0 &amp; 0 &amp; {@b4@} &amp; 0 &amp; {@b3@} &amp;1 \end{array}\right] \xrightarrow{{@b3@}II, {@b7@}III} \left[ \begin{array}{ccc|ccc} 1 &amp; 0 &amp; 0 &amp; {@b@} &amp; {@b@} &amp; 0 \\ 0&amp; 1 &amp; {@b5@} &amp; 0 &amp; {@b3@} &amp; 0 \\ 0 &amp; 0 &amp; 1 &amp; 0 &amp; {@b6@} &amp; {@b7@} \end{array}\right] \xrightarrow{II+{@b3@}III}\)</p><p>\(\left[ \begin{array}{ccc|ccc} 1 &amp; 0 &amp; 0 &amp; {@b@} &amp; {@b@} &amp; 0 \\ 0&amp; 1 &amp; 0 &amp; 0 &amp; {@b8@} &amp; {@b9@} \\ 0 &amp; 0 &amp; 1 &amp; 0 &amp; {@b6@} &amp; {@b7@} \end{array}\right]\)</p></div><span style=""><br></span><p></p><p><span style="">&nbsp; &nbsp; &nbsp; &nbsp;Das heißt:&nbsp;</span></p><p><span style="">&nbsp; &nbsp; &nbsp; &nbsp;\(B^{-1}=\left[ \begin{array}{ccc} {@b@} &amp; {@b@} &amp; 0 \\ 0 &amp; {@b8@} &amp; {@b9@} \\ 0 &amp; {@b6@} &amp; {@b7@} \end{array}\right]\)</span></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text>a:rand_with_step(2,5,1);
b:rand_with_step(1,5,1);
bplus1:b+1;

a1: 1-a^2
a2:-a
a3: a/(1-a^2)
a4: -a3
a5: 1/a
a6: a5-a3
a7:a3/a6
a10: 1/a1
a8: -a10/a6
a9: a5/a6
a11: 1/a6
a12: a4-a7*a3
a13: a10-a3*a8
a14: -a3*a9
a15: 1-a*a12
a16:-a*a13
a17: -a*a14

b1: 1/b
b2: (1+b)/b
b3: b/(1+b)
b4:1-b/(1+b)
b5:-b3
b6: b3/b4
b7: 1/b4
b8:  b3+b3*b6
b9: b7*b3</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>n</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>(</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>(a^2-1)/(2*a^2-1)</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans10</name>
      <type>algebraic</type>
      <tans>b</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans11</name>
      <type>algebraic</type>
      <tans>b</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans12</name>
      <type>algebraic</type>
      <tans>0</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans13</name>
      <type>algebraic</type>
      <tans>0</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans14</name>
      <type>algebraic</type>
      <tans>b</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans15</name>
      <type>algebraic</type>
      <tans>b</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans16</name>
      <type>algebraic</type>
      <tans>0</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans17</name>
      <type>algebraic</type>
      <tans>b</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans18</name>
      <type>algebraic</type>
      <tans>b+1</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>a/(2*a^2-1)</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>-a^2/(2*a^2-1)</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>algebraic</type>
      <tans>a/(2*a^2-1)</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans5</name>
      <type>algebraic</type>
      <tans>-1/(2*a^2-1)</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans6</name>
      <type>algebraic</type>
      <tans>a/(2*a^2-1)</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans7</name>
      <type>algebraic</type>
      <tans>-a^2/(2*a^2-1)</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans8</name>
      <type>algebraic</type>
      <tans>a/(2*a^2-1)</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans9</name>
      <type>algebraic</type>
      <tans>(a^2-1)/(2*a^2-1)</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>(a^2-1)/(2*a^2-1)</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt10</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans10</sans>
        <tans>b</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt10-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt10-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt11</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans11</sans>
        <tans>b</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt11-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt11-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt12</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans12</sans>
        <tans>0</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt12-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt12-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt13</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans13</sans>
        <tans>0</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt13-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt13-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt14</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans14</sans>
        <tans>b</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt14-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt14-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt15</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans15</sans>
        <tans>b</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt15-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt15-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt16</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans16</sans>
        <tans>0</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt16-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt16-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt17</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans17</sans>
        <tans>b</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt17-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt17-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt18</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans18</sans>
        <tans>b+1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt18-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt18-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>a/(2*a^2-1)</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt3</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>-a^2/(2*a^2-1)</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt3-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt3-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt4</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>a/(2*a^2-1)</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt4-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt4-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt5</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans5</sans>
        <tans>-1/(2*a^2-1)</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt5-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt5-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt6</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans6</sans>
        <tans>a/(2*a^2-1)</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt6-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt6-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt7</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans7</sans>
        <tans>-a^2/(2*a^2-1)</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt7-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt7-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt8</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans8</sans>
        <tans>a/(2*a^2-1)</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt8-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt8-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt9</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans9</sans>
        <tans>(a^2-1)/(2*a^2-1)</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt9-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt9-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>TE:1:Lineare Algebra</text>
</tag>
      <tag><text>TE:2:Matrizen</text>
</tag>
      <tag><text>TE:3:Gauß-Algorithmus</text>
</tag>
      <tag><text>TE:3:Inverse Matrix</text>
</tag>
      <tag><text>src:F07-INT</text>
</tag>
      <tag><text>Bloom:3</text>
</tag>
      <tag><text>Maier:1:2</text>
</tag>
      <tag><text>Maier:2:2</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>praxiserprobt</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:TaggingGeprueft</text>
</tag>
      <tag><text>qs:importIliasGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 0  -->
  <question type="category">
    <category>
      <text>$course$/top/Vektorraum</text>
    </category>
    <info format="html">
      <text></text>
    </info>
    <idnumber></idnumber>
  </question>

<!-- question: 807648  -->
  <question type="multichoice">
    <name>
      <text>Untervektorraum R^2</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<h4><span style="font-size: 14px; font-weight: normal;">Welche der folgenden Mengen sind Untervektorräume des \(\mathbb{R}^2\)</span><br></h4>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<h4><b>Lösung</b></h4><p><b><br></b></p><p><span>Definition eines Untervektorraums (für \(\mathbb{R}\)):</span></p><p><span>Eine nichtleere Teilmenge \(M_i\) eines \(\mathbb{R}\)-Vektorraums \(\mathbb{R}^2\) heißt Untervektorraum, falls gilt:</span></p><p><span><b>(a)</b> \(u_1\), \(u_2 \in M_i \Rightarrow u_1+u_2 \in M_i\)</span></p><p><span><b>(b)</b> \(\lambda \in \mathbb{R}\), \(u \in M_i \Rightarrow \lambda \cdot u \in M_i\)</span></p><p><span><br></span></p><p>Um zu zeigen, dass \(M_i\) ein Untervektorraum von \(\mathbb{R}^2\) ist, müssen die Eigenschaften allgemein nachgeprüft werden.</p><p>Lässt sich ein Gegenbeispiel finden, ist \(M_i\) kein Untervektorraum von \(\mathbb{R}^2\).</p><p><br></p><p>\(M_1=\Big\{\begin{pmatrix} 0 \\ 0 \\ \end{pmatrix} \Big\}\)<br></p><div class="editor-indent" style="margin-left: 30px;"><p>(a)&nbsp; \(\begin{pmatrix} 0 \\ 0 \\ \end{pmatrix}+\begin{pmatrix} 0 \\ 0 \\ \end{pmatrix}=\begin{pmatrix} 0 \\ 0 \\ \end{pmatrix}\)</p><p>&nbsp; &nbsp; &nbsp; &nbsp;Da die Menge nur ein Element besitzt, ist die erste Eigenschaft erfüllt.</p><p>(b) \(\lambda\cdot\begin{pmatrix} 0 \\ 0 \\ \end{pmatrix}=\begin{pmatrix} 0 \\ 0 \\ \end{pmatrix}\in M_1\) für alle \(\lambda \in \mathbb{R}\)</p></div><div class="editor-indent" style="margin-left: 30px;"><div class="editor-indent" style="margin-left: 30px;"><p>Die Menge hat kein weiteres Element und damit ist auch diese Eigenschaft überprüft.</p></div><div class="editor-indent" style="margin-left: 30px;"><p>Die Menge, die nur den Nullvektor enthält, beschreibt immer den kleinsten Untervektorraum. Allgemein muss der Nullvektor in jedem Untervektorraum enthalten sein.</p></div></div><p><br></p><p>\(M_2=\Big\{\begin{pmatrix} 2 \\ 2 \\ \end{pmatrix} \Big\}\)<br></p><div class="editor-indent" style="margin-left: 30px;"><p>Gegenbeispiel zu (b):</p><p>Für \(\lambda=0: \ 0\cdot\begin{pmatrix} 2 \\ 2 \\ \end{pmatrix}=\begin{pmatrix} 0 \\ 0 \\ \end{pmatrix}\notin M_2\)</p><p>Damit ist \(M_2\) kein Untervektorraum des \(\mathbb{R}^2\).</p></div><p>&nbsp; &nbsp; &nbsp;</p><p>\(M_3=\Big\{\begin{pmatrix} 0 \\ 0 \\ \end{pmatrix},\begin{pmatrix} 2 \\ 2 \\ \end{pmatrix} \Big\}\)<br></p><div class="editor-indent" style="margin-left: 30px;"><p>Gebenbeispiel zu (b):</p><p></p><p>Für \(\lambda=3: \ 3\cdot\begin{pmatrix} 2 \\ 2 \\ \end{pmatrix}=\begin{pmatrix} 6 \\ 6 \\ \end{pmatrix}\notin M_3\)</p><p></p><p></p><p>Damit ist \(M_3\) kein Untervektorraum des \(\mathbb{R}^2\).</p><p></p></div><p>&nbsp;</p><p>\(M_4=\Big\{\begin{pmatrix} x \\ y \\ \end{pmatrix} \in \mathbb{R}^2 | \ y=-x^2 \Big\}\)<br></p><div class="editor-indent" style="margin-left: 30px;"><p>Gegenbeispiel zu (a):</p></div><div class="editor-indent" style="margin-left: 30px;"><p>Die Vektoren&nbsp;\(\begin{pmatrix} 1 \\ -1 \\ \end{pmatrix}, \ \begin{pmatrix} -1 \\ -1 \\ \end{pmatrix}\) sind beides Elemente von \(M_4\). Aber \(\begin{pmatrix} 1 \\ -1 \\ \end{pmatrix}+\begin{pmatrix} -1 \\ -1 \\ \end{pmatrix}=\begin{pmatrix} 0 \\ -2 \\ \end{pmatrix}\) liegt nicht in der Menge (\(-2 \neq-(0)^2\)).</p><p>Damit ist \(M_4\) kein Untervektorraum des \(\mathbb{R}^2\).</p></div><p><br></p><p>\(M_5=\Big\{\begin{pmatrix} x \\ y \\ \end{pmatrix} \in \mathbb{R}^2 | \ y=-2x \Big\}\)<br></p><div class="editor-indent" style="margin-left: 30px;"><p>(a) Seien \(\begin{pmatrix} x_1 \\ y_1 \\ \end{pmatrix},\begin{pmatrix} x_2 \\ y_2 \\ \end{pmatrix} \in M_5\).&nbsp;</p></div><div class="editor-indent" style="margin-left: 30px;"><div class="editor-indent" style="margin-left: 30px;"><p>Damit gilt&nbsp; \(y_1=-2x_1\) und \(y_2=-2x_2\).</p></div><div class="editor-indent" style="margin-left: 30px;"><span style="">Nun wird überprüft, ob der Vektor \(\begin{pmatrix} x_1 \\ y_1 \\ \end{pmatrix}+\begin{pmatrix} x_2 \\ y_2 \\ \end{pmatrix}=\begin{pmatrix} x_1+x_2 \\ y_1+y_2 \\ \end{pmatrix}\) auch wieder in \(M_5\) liegt:</span></div><div class="editor-indent" style="margin-left: 30px;"><span style=""><br></span></div></div><div class="editor-indent" style="margin-left: 30px;"><div class="editor-indent" style="margin-left: 30px;"><div class="editor-indent" style="margin-left: 30px;">\((y_1+y_2)=-2(x_1+x_2)=-2x_1-2x_2=y_1+y_2\)</div></div></div><div class="editor-indent" style="margin-left: 30px;"><div class="editor-indent" style="margin-left: 30px;"><br></div><div class="editor-indent" style="margin-left: 30px;"><p>Die Menge ist bezüglich der Addition abgeschlossen. (Es macht keinen Unterschied, ob man erst die Vektoren addiert und dann in die Bedingung einsetzt oder die Vektoren einzeln in die Bedingung einsetzt und danach addiert.)</p></div></div><div class="editor-indent" style="margin-left: 30px;"><p>(b) Sei \(\lambda \in \mathbb{R}\) und&nbsp;\(\begin{pmatrix} x \\ y \\ \end{pmatrix} \in M_5\) (Es gilt also \(y=-2x\)).</p></div><div class="editor-indent" style="margin-left: 30px;"><div class="editor-indent" style="margin-left: 30px;"><p>Äquivalent zu (a):</p></div><div class="editor-indent" style="margin-left: 30px;"><p>Es wird überprüft, ob für \(\lambda \in \mathbb{R}\) der Vektor \(\lambda \cdot \begin{pmatrix} x \\ y \\ \end{pmatrix}=\begin{pmatrix} \lambda \cdot x \\ \lambda \cdot y \\ \end{pmatrix}\) wieder in \(M_5\) liegt:</p><p><br></p></div></div><div class="editor-indent" style="margin-left: 30px;"><div class="editor-indent" style="margin-left: 30px;"><div class="editor-indent" style="margin-left: 30px;"><p>\((\lambda \cdot y)=-2(\lambda \cdot x)=\lambda \cdot (-2x)=\lambda \cdot (y)\)</p></div></div></div><div class="editor-indent" style="margin-left: 30px;"><div class="editor-indent" style="margin-left: 30px;"><p><br></p></div><div class="editor-indent" style="margin-left: 30px;"><p>Die Menge ist auch bezüglich der Skalarmultiplikation abgeschlossen. (Es macht wieder keinen Unterschied, ob man den Vektor erst mit \(\lambda\) multipliziert und danach in die Bedingung einsetzt oder ob man den Vektor einsetzt und anschließend mit \(\lambda\) multipliziert.)</p></div></div><div class="editor-indent" style="margin-left: 30px;"><p>Damit ist \(M_5\) ein Untervektorraum des \(\mathbb{R}^2\).</p></div><p><br></p><p>\(M_6=\Big\{\begin{pmatrix} x \\ y \\ \end{pmatrix} \in \mathbb{R}^2 | \ y=-2x+1 \Big\}\)<br></p><div class="editor-indent" style="margin-left: 30px;"><p>Gegenbeispiel zu (a):</p><div><p>Die Vektoren&nbsp;\(\begin{pmatrix} 0 \\ 1 \\ \end{pmatrix}, \ \begin{pmatrix} 1 \\ -1 \\ \end{pmatrix}\) sind beides Elemente von \(M_6\). Aber \(\begin{pmatrix} 0 \\ 1 \\ \end{pmatrix}+\begin{pmatrix} 1 \\ -1 \\ \end{pmatrix}=\begin{pmatrix} 1 \\ 0 \\ \end{pmatrix}\) liegt nicht in der Menge (\(0 \neq-2\cdot 1+1\)).</p></div><div><p>Damit ist \(M_6\) kein Untervektorraum des \(\mathbb{R}^2\)</p></div></div><p></p><br><p></p>]]></text>
    </generalfeedback>
    <defaultgrade>2.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>false</single>
    <shuffleanswers>false</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Die Antwort ist richtig.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Die Antwort ist teilweise richtig.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Die Antwort ist falsch.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="50" format="html">
      <text><![CDATA[<p>\(M_1=\Big\{\begin{pmatrix} 0 \\ 0 \\ \end{pmatrix} \Big\}\)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text><![CDATA[<p>\(M_2=\Big\{\begin{pmatrix} 2 \\ 2 \\ \end{pmatrix} \Big\}\)<br></p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text><![CDATA[<p>\(M_3=\Big\{\begin{pmatrix} 0 \\ 0 \\ \end{pmatrix},\begin{pmatrix} 2 \\ 2 \\ \end{pmatrix} \Big\}\)<br></p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text><![CDATA[<p>\(M_4=\Big\{\begin{pmatrix} x \\ y \\ \end{pmatrix} \in \mathbb{R}^2 | \ y=-x^2 \Big\}\)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="50" format="html">
      <text><![CDATA[<p>\(M_5=\Big\{\begin{pmatrix} x \\ y \\ \end{pmatrix} \in \mathbb{R}^2 | \ y=-2x \Big\}\)<br></p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text><![CDATA[<p>\(M_6=\Big\{\begin{pmatrix} x \\ y \\ \end{pmatrix} \in \mathbb{R}^2 | \ y=-2x+1 \Big\}\)<br></p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>TE:1:Lineare Algebra</text>
</tag>
      <tag><text>te:2:Vektorraum</text>
</tag>
      <tag><text>te:3:Untervektorraum</text>
</tag>
      <tag><text>src:F07-INT</text>
</tag>
      <tag><text>Bloom:2</text>
</tag>
      <tag><text>Maier:1:3</text>
</tag>
      <tag><text>Maier:2:2</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>ILIAS-Import-Error</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:TaggingGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 809210  -->
  <question type="stack">
    <name>
      <text><![CDATA[2.4: Für welche p sind die 3 Vektoren linear abhängig oder unabhängig (R3) [{"DOMAINUID":"3D1E524"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Geben sind die Vektoren <br />\(\vec{a_1}=\begin{pmatrix}@a1@\\@a2@ \\@a3@ \end{pmatrix},\quad \vec{a_2}=\begin{pmatrix}@x1@\\@x2@ \\@x3@ \end{pmatrix} \quad\) und \( \quad \vec{a_3}=\begin{pmatrix}@b1@\\@b2@ \\p\end{pmatrix}\)</p>
<p><br />Geben Sie einen Wert des Parameters \(p \in \mathbb{R}\) ein, so dass \(\vec{a_1}, \vec{a_2}\) und \(\vec{a_3}\) linear abhängig sind.</p>
<p>\(p_1=\)[[input:ans1]] [[validation:ans1]] [[feedback:prt1]]</p>
<p></p>
<p>Geben Sie noch einen Wert des Parameters \(p \in \mathbb{R}\) ein, so dass \(\vec{a_1}, \vec{a_2}\) und \(\vec{a_3}\) linear unabhängig sind.</p>
<p>\(p_2=\)[[input:ans2]] [[validation:ans2]] [[feedback:prt2]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text>a1: rand_with_prohib(-3,3,[0]);
a2: rand_with_prohib(-3,3,[0]);
a3: rand_with_step(-3,3,1);

b1: rand_with_prohib(-3,3,[0]);
b2: 0;
b3: rand_with_prohib(-3,3,[0]);

va: [a1,a2,a3];
vb: [b1,b2,b3];

M1: matrix([a1,a2,a3],[b1,b2,b3]);
R1: rank(M1);

n: rand_with_prohib(-3,3,[0]);
m: rand_with_prohib(-3,3,[0]);

vx: n*va+m*vb;

x1: vx[1];
x2: vx[2];
x3: vx[3];</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(\vec{a_1}=\begin{pmatrix}@a1@\\@a2@ \\@a3@ \end{pmatrix}, \vec{a_2}=\begin{pmatrix}@x1@\\@x2@ \\@x3@ \end{pmatrix} \) und \( \vec{a_3}=\begin{pmatrix}@b1@\\@b2@ \\p\end{pmatrix}, p1=@b3@\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>b3</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>2*b3</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>b3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>ansb: [b1,b2,ans2];

gl1: 0=c1*va[1]+c2*vx[1]+c3*ansb[1];
gl2: 0=c1*va[2]+c2*vx[2]+c3*ansb[2];
gl3: 0=c1*va[3]+c2*vx[3]+c3*ansb[3];
loesung: solve([gl1,gl2,gl3],[c1,c2,c3]);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>b3</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-0-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>1.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-0-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 809214  -->
  <question type="stack">
    <name>
      <text><![CDATA[2.4: Für welche p sind die 3 Vektoren linear abhängig oder unabhängig (R3) [{"DOMAINUID":"3D1E524"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Geben sind die Vektoren <br />\(\vec{a_1}=\begin{pmatrix}@a1@\\@a2@ \\@a3@ \end{pmatrix},\quad \vec{a_2}=\begin{pmatrix}@x1@\\@x2@ \\@x3@ \end{pmatrix} \quad\) und \( \quad \vec{a_3}=\begin{pmatrix}@b1@\\@b2@ \\p\end{pmatrix}\)</p>
<p><br />Geben Sie einen Wert des Parameters \(p \in \mathbb{R}\) ein, so dass \(\vec{a_1}, \vec{a_2}\) und \(\vec{a_3}\) linear abhängig sind.</p>
<p>\(p_1=\)[[input:ans1]] [[validation:ans1]] [[feedback:prt1]]</p>
<p></p>
<p>Geben Sie noch einen Wert des Parameters \(p \in \mathbb{R}\) ein, so dass \(\vec{a_1}, \vec{a_2}\) und \(\vec{a_3}\) linear unabhängig sind.</p>
<p>\(p_2=\)[[input:ans2]] [[validation:ans2]] [[feedback:prt2]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text>a1: rand_with_prohib(-3,3,[0]);
a2: rand_with_prohib(-3,3,[0]);
a3: rand_with_step(-3,3,1);

b1: rand_with_prohib(-3,3,[0]);
b2: 0;
b3: rand_with_prohib(-3,3,[0]);

va: [a1,a2,a3];
vb: [b1,b2,b3];

M1: matrix([a1,a2,a3],[b1,b2,b3]);
R1: rank(M1);

n: rand_with_prohib(-3,3,[0]);
m: rand_with_prohib(-3,3,[0]);

vx: n*va+m*vb;

x1: vx[1];
x2: vx[2];
x3: vx[3];</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(\vec{a_1}=\begin{pmatrix}@a1@\\@a2@ \\@a3@ \end{pmatrix}, \vec{a_2}=\begin{pmatrix}@x1@\\@x2@ \\@x3@ \end{pmatrix} \) und \( \vec{a_3}=\begin{pmatrix}@b1@\\@b2@ \\p\end{pmatrix}, p1=@b3@\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>b3</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>2*b3</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>b3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>ansb: [b1,b2,ans2];

gl1: 0=c1*va[1]+c2*vx[1]+c3*ansb[1];
gl2: 0=c1*va[2]+c2*vx[2]+c3*ansb[2];
gl3: 0=c1*va[3]+c2*vx[3]+c3*ansb[3];
loesung: solve([gl1,gl2,gl3],[c1,c2,c3]);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>b3</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-0-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>1.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-0-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 809218  -->
  <question type="stack">
    <name>
      <text><![CDATA[2.4: Für welche p sind die 3 Vektoren linear abhängig oder unabhängig (R3) [{"DOMAINUID":"3D1E524"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Geben sind die Vektoren <br />\(\vec{a_1}=\begin{pmatrix}@a1@\\@a2@ \\@a3@ \end{pmatrix},\quad \vec{a_2}=\begin{pmatrix}@x1@\\@x2@ \\@x3@ \end{pmatrix} \quad\) und \( \quad \vec{a_3}=\begin{pmatrix}@b1@\\@b2@ \\p\end{pmatrix}\)</p>
<p><br />Geben Sie einen Wert des Parameters \(p \in \mathbb{R}\) ein, so dass \(\vec{a_1}, \vec{a_2}\) und \(\vec{a_3}\) linear abhängig sind.</p>
<p>\(p_1=\)[[input:ans1]] [[validation:ans1]] [[feedback:prt1]]</p>
<p></p>
<p>Geben Sie noch einen Wert des Parameters \(p \in \mathbb{R}\) ein, so dass \(\vec{a_1}, \vec{a_2}\) und \(\vec{a_3}\) linear unabhängig sind.</p>
<p>\(p_2=\)[[input:ans2]] [[validation:ans2]] [[feedback:prt2]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text>a1: rand_with_prohib(-3,3,[0]);
a2: rand_with_prohib(-3,3,[0]);
a3: rand_with_step(-3,3,1);

b1: rand_with_prohib(-3,3,[0]);
b2: 0;
b3: rand_with_prohib(-3,3,[0]);

va: [a1,a2,a3];
vb: [b1,b2,b3];

M1: matrix([a1,a2,a3],[b1,b2,b3]);
R1: rank(M1);

n: rand_with_prohib(-3,3,[0]);
m: rand_with_prohib(-3,3,[0]);

vx: n*va+m*vb;

x1: vx[1];
x2: vx[2];
x3: vx[3];</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(\vec{a_1}=\begin{pmatrix}@a1@\\@a2@ \\@a3@ \end{pmatrix}, \vec{a_2}=\begin{pmatrix}@x1@\\@x2@ \\@x3@ \end{pmatrix} \) und \( \vec{a_3}=\begin{pmatrix}@b1@\\@b2@ \\p\end{pmatrix}, p1=@b3@\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>b3</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>2*b3</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>b3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>ansb: [b1,b2,ans2];

gl1: 0=c1*va[1]+c2*vx[1]+c3*ansb[1];
gl2: 0=c1*va[2]+c2*vx[2]+c3*ansb[2];
gl3: 0=c1*va[3]+c2*vx[3]+c3*ansb[3];
loesung: solve([gl1,gl2,gl3],[c1,c2,c3]);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>b3</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-0-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>1.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-0-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 809355  -->
  <question type="stack">
    <name>
      <text>Lineare Algebra: Basiswechsel R^3 2</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<h4><span style="font-size: 14px; font-weight: normal;">Betrachten Sie den Vektorraum \( \mathbb{R}^3\) mit den Basen</span></h4><h4><span style="font-size: 14px; font-weight: normal;">\(\mathcal{B}_1=\{e_1,e_2,e_3\}\).&nbsp;</span><br></h4>
<p>\(\mathcal{B}_2=\big\{{@uv@},{@vv@},{@wv@}\big\}\)</p><p><br></p>
<p>Berechnen Sie die Koordinaten des Vektors</p>
<p>&nbsp;</p>
<p>\({x} = {@xv@} \)</p>
<p>&nbsp;</p>
<p>in der Basis \(\mathcal{B}_2\), das heißt</p><p><br></p>
<p>\({x}\,=\,a_1{@uv@}+a_2{@vv@}+a_3{@wv@}\)</p>
<p>&nbsp;&nbsp;</p>
<p>\(a_1=\) [[input:ans1]][[validation:ans1]][[feedback:prt1]]</p>
<p>\(a_2=\) [[input:ans2]][[validation:ans2]][[feedback:prt2]]</p>
<p>\(a_3=\) [[input:ans3]][[validation:ans3]][[feedback:prt3]]</p>
<p><br></p>
<p>&nbsp;</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<h4><b>Lösung</b></h4><p><b><br></b></p><p>Der Vektor&nbsp;\({x} = {@xv@}\) soll in Koordinaten \(a\) bezüglich der gegebenen Basis&nbsp; \(\mathcal{B}_2\) umgerechnet werden \(\Big({a}=T^{-1}\cdot {x}\Big)\).</p><p>\(T\) stellt die Transformationsmatrix dar, die in den Spalten die gegebenen Basisvektoren hat:</p><div class="editor-indent" style="margin-left: 30px;"><p>\(T={@M@}\)</p><p><br></p></div><p>Daraus lässt sich die Inverse \(T^{-1}={@Minv@}\) berechnen.</p><p><br></p><p>\({\lambda}=\begin{bmatrix} a_1\\ a_2\\ a_3 \end{bmatrix}=T^{-1}\cdot {x}\)<br></p><p><br></p><p>&nbsp; &nbsp; &nbsp;\(={@Minv@} \cdot {@xv@}\)</p><p><br></p><p>&nbsp; &nbsp; &nbsp;\(=\begin{bmatrix} {@Bx1@}\\{@Bx2@}\\{@Bx3@} \end{bmatrix}\)</p><p><br></p><p>Koordinaten bezüglich der Basis&nbsp;\(\mathcal{B}_2\): \(({@Bx1@},{@Bx2@},{@Bx3@})\)<br></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2020120600</text>
    </stackversion>
    <questionvariables>
      <text>u1: 1+rand(3)
u2: -1-rand(4)
u3: 0
uv: matrix([u1],[u2],[u3]);
v1: 1
v2: 1+rand(3)
v3: 1
vv: matrix([v1],[v2],[v3]);
w1: -1-rand(3)
w2: 0
w3: 1+rand(3)
wv: matrix([w1],[w2],[w3]);

M: matrix([u1,v1,w1], [u2,v2,w2], [u3,v3,w3]);

r: rank(M);


x1: rand_with_step(-9,9,1);
x2: rand_with_step(-9,9,1);
x3: rand_with_step(-9,9,1);
xv: matrix([x1],[x2],[x3]);
Minv: invert(M);

Bx1: (Minv.[x1,x2,x3])[1][1];
Bx2: (Minv.[x1,x2,x3])[2][1];
Bx3: (Minv.[x1,x2,x3])[3][1];</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(Rang={@r@}, \lambda_1={@Bx1@}, \lambda_2={@Bx2@}. \lambda_3={@Bx3@}\)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>(</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>Bx1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>Bx2</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>Bx3</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>loes: [Bx1,Bx2,Bx3];
antwort: [ans1,ans2,ans3];</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>Bx1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>Bx2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt3</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>Bx3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt3-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt3-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>Bloom:3</text>
</tag>
      <tag><text>Maier:1:2</text>
</tag>
      <tag><text>Maier:2:3</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>praxiserprobt</text>
</tag>
      <tag><text>TE:1:Lineare Algebra</text>
</tag>
      <tag><text>te:2:Vektorraum</text>
</tag>
      <tag><text>TE:3:Basiswechsel</text>
</tag>
      <tag><text>src:F07-INT</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:importIliasGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 809354  -->
  <question type="stack">
    <name>
      <text>Lineare Algebra: Dimension</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Welche Dimension hat der Untervektorraum des \(\mathbb{R}^4\), der von den folgenden Vektoren erzeugt wird?</p><p><br></p><p></p><p>\(v = \begin{bmatrix} {@a@} \\ -1\\ 2 \\ 3\\ \end{bmatrix}, w = \begin{bmatrix} {0} \\ {0}\\ {2}\\-1 \end{bmatrix}, s = \begin{bmatrix} {0} \\ 2\\ {4} \\ {1} \end{bmatrix}, t = \begin{bmatrix} {@minus2@} \\ {8}\\ {6} \\ {-2} \end{bmatrix} \)<br></p><p><br></p><p></p><p>Die Dimension beträgt [[input:ans1]]. [[validation:ans1]][[feedback:prt1]]</p><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<h4>Lösung</h4><p><br></p><p>Die Dimension entspricht der Anzahl der linear unabhängigen Vektoren.&nbsp;</p><p>Das heißt: Die Dimension ist gleich dem Rang der Matrix, die \(v, \ w, \ s, \ t\) als Spalten besitzt.</p><p>Umformung der Matrix in Zeilenstufenform:</p><p><br></p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \({@A@}\xrightarrow{ \frac{I}{{@a@}},\frac{III}{2}}{@B@}\xrightarrow{II+I, III-I, IV-3I}{@C@}\)</p><p>\(\xrightarrow{IV+III}{@D@}\xrightarrow{\frac{II}{2},\frac{IV}{3}, II \leftrightarrow III}{@E@}\xrightarrow{IV-III}{@F@}\)</p><p><br></p><p>Der Bildraum hat somit die Dimension 3.</p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text>a:rand_with_step(1,5,1);
minus2:-2*a;
A: matrix([a,0,0,minus2],[-1,0,2,8],[2,2,4,6],[3,-1,1,-2])
B: matrix([1,0,0,-2],[-1,0,2,8],[1,1,2,3],[3,-1,1,-2])
C: matrix([1,0,0,-2],[0,0,2,6],[0,1,2,5],[0,-1,1,4])
D: matrix([1,0,0,-2],[0,0,2,6],[0,1,2,5],[0,0,3,9])
E: matrix([1,0,0,-2],[0,1,2,5], [0,0,1,3], [0,0,1,3])
F: matrix([1,0,0,-2],[0,1,2,5], [0,0,1,3], [0,0,0,0])</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>n</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>(</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>3</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>TE:1:Lineare Algebra</text>
</tag>
      <tag><text>te:2:Vektorraum</text>
</tag>
      <tag><text>TE:3:Dimension</text>
</tag>
      <tag><text>src:F07-INT</text>
</tag>
      <tag><text>Bloom:2</text>
</tag>
      <tag><text>Maier:1:3</text>
</tag>
      <tag><text>Maier:2:1</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>praxiserprobt</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:TaggingGeprueft</text>
</tag>
      <tag><text>qs:importIliasGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 809356  -->
  <question type="stack">
    <name>
      <text>Lineare Algebra: Erzeugendensystem, Basis</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p>Es werden die folgenden Vektoren betrachtet</p><div class="editor-indent" style="margin-left: 30px;"><p>\(v_1={@v1@}\),&nbsp; \(v_2={@v2@}\),&nbsp; \(v_3={@v3@}\)</p><p><br></p></div><p><b>(a)</b>&nbsp;Entscheiden Sie:</p><p></p><ul><li>Die Vektoren \(v_1,v_2\) und \(v_3\) bilden [[input:ans1]]&nbsp; Erzeugendensystem des \(\mathbb{R}^2\).[[validation:ans1]][[feedback:prt1]]</li><li>Die Vektoren&nbsp; &nbsp; &nbsp;\(v_1\) und \(v_2\)&nbsp; &nbsp; bilden [[input:ans2]]&nbsp; Erzeugendensystem des \(\mathbb{R}^2\).[[validation:ans2]][[feedback:prt2]]</li><li>Die Vektoren&nbsp; &nbsp; &nbsp; \(v_1\) und \(v_3\)&nbsp; &nbsp;bilden [[input:ans3]]&nbsp; Erzeugendensystem des \(\mathbb{R}^2\). [[validation:ans3]][[feedback:prt3]]</li></ul><p><b>(b)</b> Entscheiden Sie:</p><p></p><ul><li>Die Vektoren \(v_1,v_2\) und \(v_3\) bilden [[input:ans4]]&nbsp; Basis des \(\mathbb{R}^2\).[[validation:ans4]][[feedback:prt4]]</li><li>Die Vektoren&nbsp; &nbsp; \(v_1\) und \(v_2\)&nbsp; &nbsp; &nbsp;bilden [[input:ans5]]&nbsp; Basis des \(\mathbb{R}^2\).[[validation:ans5]][[feedback:prt5]]</li><li>Die Vektoren&nbsp; &nbsp; \(v_1\) und \(v_3\)&nbsp; &nbsp; &nbsp;bilden [[input:ans6]]&nbsp; Basis des \(\mathbb{R}^2\).[[validation:ans6]][[feedback:prt6]]</li></ul>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<h4><strong>Lösung</strong></h4><p><br></p><p><strong>(a) </strong>Für ein Erzeugendensystem des \(\mathbb{R}^2\) müssen <strong>zwei</strong> Vektoren linear unabhängig sein.&nbsp;</p><p>&nbsp; &nbsp; &nbsp;(Es dürfen zusätzlich auch linear abhängige Vektoren enthalten sein.)</p><p>&nbsp; &nbsp; &nbsp; Hier ist \(v_1\), \(v_3\) kolinear und \(v_1\), \(v_2\), bzw. \(v_1\), \(v_3\) sind linear unabhängig.</p><p><br></p><p></p><ul><li>Die Vektoren \(v_1,v_2\) und \(v_3\) bilden ein&nbsp; &nbsp; Erzeugendensystem des \(\mathbb{R}^2\). (Zwei linear unabhängige Vektoren)</li></ul><ul><li>Die Vektoren&nbsp; &nbsp; &nbsp;\(v_1\) und \(v_2\)&nbsp; &nbsp; bilden ein&nbsp; &nbsp; Erzeugendensystem des \(\mathbb{R}^2\).&nbsp;(Zwei linear unabhängige Vektoren)</li></ul><ul><li>Die Vektoren&nbsp; &nbsp; &nbsp; \(v_1\) und \(v_3\)&nbsp; &nbsp;bilden kein&nbsp; Erzeugendensystem des \(\mathbb{R}^2\).&nbsp;(Kolineare Vektoren)</li></ul><p><br></p><p><strong>(b)</strong> Im Gegensatz zum Erzeugendensystem müssen die Vektoren einer Basis alle linear unabhängig sein.&nbsp;</p><p>&nbsp; &nbsp; &nbsp;Das heißt eine Basis des&nbsp; \(\mathbb{R}^2\) wird durch <strong>genau zwei linear unabhängige Vektoren</strong> gebildet.</p><p><br></p><ul><li>Die Vektoren \(v_1,v_2\) und \(v_3\) bilden keine&nbsp; Basis des \(\mathbb{R}^2\). (Ein linear abhängiger Vektor zu viel)</li></ul><ul><li>Die Vektoren&nbsp; &nbsp; \(v_1\) und \(v_2\)&nbsp; &nbsp; &nbsp;bilden eine&nbsp; Basis des \(\mathbb{R}^2\). (Zwei linear unabhängige Vektoren)</li></ul><ul><li>Die Vektoren&nbsp; &nbsp; \(v_1\) und \(v_3\)&nbsp; &nbsp; &nbsp;bilden keine&nbsp; Basis des \(\mathbb{R}^2\).&nbsp;(Kolineare Vektoren)</li></ul><p></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[a: 1+rand(5)
b: rand_with_prohib(2,4,[b])
c: rand_with_prohib(2,4,[a,b])
d:-1-rand(5)

v1: matrix([a],[b])
v2: matrix([c],[d])
v3: matrix([-3*a],[-3*b])

Tans1: 1;
AnsList1: [[1, true, "ein"], [2, false, "kein"]];
Tans2 : 1;
AnsList2: [[1, true, "ein"], [2, false, "kein"]];
Tans3: 2;
AnsList3: [[1, false, "ein"], [2, true, "kein"]];
Tans4: 2;
AnsList4: [[1, false, "eine"], [2, true, "keine"]];
Tans5: 1;
AnsList5: [[1, true, "eine"], [2, false, "keine"]];
Tans6: 2;
AnsList6: [[1, false, "eine"], [2, true, "keine"]];]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>Basis, Erzeugendensystem</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>(</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>dropdown</type>
      <tans>AnsList1</tans>
      <boxsize>2</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>dropdown</type>
      <tans>AnsList2</tans>
      <boxsize>2</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>dropdown</type>
      <tans>AnsList3</tans>
      <boxsize>2</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>dropdown</type>
      <tans>AnsList4</tans>
      <boxsize>2</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans5</name>
      <type>dropdown</type>
      <tans>AnsList5</tans>
      <boxsize>2</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans6</name>
      <type>dropdown</type>
      <tans>AnsList6</tans>
      <boxsize>2</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>Tans1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>Tans2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt3</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>Tans3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt3-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt3-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt4</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>Tans4</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt4-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt4-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt5</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans5</sans>
        <tans>Tans5</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt5-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt5-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt6</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans6</sans>
        <tans>Tans6</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt6-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt6-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>TE:1:Lineare Algebra</text>
</tag>
      <tag><text>te:2:Vektorraum</text>
</tag>
      <tag><text>TE:3:Basis</text>
</tag>
      <tag><text>TE:3:Erzeugendensystem</text>
</tag>
      <tag><text>TE:3:Lineare Unabhängigkeit</text>
</tag>
      <tag><text>src:F07-INT</text>
</tag>
      <tag><text>Bloom:2</text>
</tag>
      <tag><text>Maier:1:3</text>
</tag>
      <tag><text>Maier:2:2</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>praxiserprobt</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:TaggingGeprueft</text>
</tag>
      <tag><text>qs:importIliasGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 807649  -->
  <question type="stack">
    <name>
      <text>Lineare Algebra: Lineare Abhängigkeit (MC)</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Sind die angegebenen Vektoren linear abhängig voneinander?<span style="font-size: 20px;"><b><br></b></span></p><p></p><p></p><p><b>(a)</b> \(\begin{bmatrix} {@a@} \\ {@b@}\\ {@c@}\\ \end{bmatrix} ,\begin{bmatrix} {@aplus1@} \\ {@bminus1@}\\ {@c@}\\ \end{bmatrix} , \begin{bmatrix} {@aplus2@} \\ {@b@}\\ {@cplus2@}\\ \end{bmatrix} \)<br></p><p>[[input:ans1]] [[validation:ans1]][[feedback:prt1]]<br></p><p><b>(b)</b> \( \begin{bmatrix} {@a@} \\ {@b@}\\ {@c@}\\ \end{bmatrix} ,\begin{bmatrix} {@d@} \\ {@e@}\\ {@f@}\\ \end{bmatrix} , \begin{bmatrix} {@aminus2@} \\ {@bminus2@}\\ {@cminus2@}\\ \end{bmatrix} \)<br></p><p>[[input:ans2]] [[validation:ans2]][[feedback:prt2]]</p><p></p><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<h4><b>Lösung</b></h4><p><br></p><p></p><p>Es wird eine Umformung der Matrix mit den Vektoren als Spalten in Zeilenstufenform durchgeführt.&nbsp;</p><p>Ist der Rang voll (also keine Nullzeile am Ende), sind die Vektoren linear unabhängig, anderenfalls sind sie linear abhängig.</p><br><p></p><p><b><b>(a)</b>&nbsp;</b>\(\begin{bmatrix} {@a@} \\ {@b@}\\ {@c@}\\ \end{bmatrix} ,\begin{bmatrix} {@aplus1@} \\ {@bminus1@}\\ {@c@}\\ \end{bmatrix} , \begin{bmatrix} {@aplus2@} \\ {@b@}\\ {@cplus2@}\\ \end{bmatrix} \)<br></p><p>&nbsp;</p><div class="editor-indent" style="margin-left: 30px;"><p>\({@A@} \xrightarrow{{@a@}II-{@b@}I, {@a@}III- {@c@}I} {@B@} \xrightarrow{{@a1@}III+({@a2@})II} {@C@}\)</p></div><p><br></p><p><b>(b)</b>&nbsp;\( \begin{bmatrix} {@a@} \\ {@b@}\\ {@c@}\\ \end{bmatrix} ,\begin{bmatrix} {@d@} \\ {@e@}\\ {@f@}\\ \end{bmatrix} , \begin{bmatrix} {@aminus2@} \\ {@bminus2@}\\ {@cminus2@}\\ \end{bmatrix} \)<br></p><p><br></p><div class="editor-indent" style="margin-left: 30px;"><p>\({@D@} \xrightarrow{{@a@}II-{@b@}I, {@a@}III- {@c@}I} {@E@} \xrightarrow{{@b1@}III+({@b2@})II} {@F@}\)</p></div>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[a:rand_with_step(1,5,1);
aplus1:a+1;
aplus2:a+2;
b:rand_with_step(1,5,1);
bminus1:b-1;
c: rand_with_prohib(1,5,[a+b]);
cplus2:c+2;
d:rand_with_step(1,5,1);
e:rand_with_step(1,5,1);
f:rand_with_step(1,5,1);
aminus2:a-2*d;
bminus2:b-2*e;
cminus2: rand_with_prohib(c-2*f,c-2*f,[a,b]);
mm:matrix([1,3,-1],[0,2,1],[0,-1,2])


Tans2 : 2;
AnsList : [[1, false, "ja"], [2, true, "nein"]];


Tans3 : 1;
AnsList2 : [[1, true, "ja"], [2, false, "nein"]];

A: matrix([a,a+1,a+2],[b,b-1,b],[c,c,c+2])
B: matrix([a,a+1,a+2],[0,a*(b-1)-b*(a+1),a*b-b*(a+2)], [0, a*c-c*(a+1),a*(c+2)-c*(a+2)])
C: matrix([a,a+1,a+2],[0,a*(b-1)-b*(a+1),a*b-b*(a+2)], [0,0 ,(a*(b-1)-b*(a+1))*(a*(c+2)-c*(a+2))-(a*c-c*(a+1))*(a*b-b*(a+2))])
a1: (a*(b-1)-b*(a+1))
a2: (a*c-c*(a+1))

D: matrix([a,d,aminus2], [b,e,bminus2], [c,f,cminus2])
E: matrix([a,d,aminus2], [0, a*e-b*d, a*bminus2-b*aminus2], [0, a*f-c*d, a*cminus2-c*aminus2])
F: matrix([a,d,aminus2], [0, a*e-b*d, a*bminus2-b*aminus2], [0, 0, (a*e-b*d)*(a*cminus2-c*aminus2)-( a*f-c*d)*( a*bminus2-b*aminus2)])
b1:a*e-b*d
b2: a*f-c*d]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>n</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>(</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>radio</type>
      <tans>AnsList </tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>radio</type>
      <tans>AnsList2 </tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>Tans2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>Tans3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>TE:1:Lineare Algebra</text>
</tag>
      <tag><text>te:2:Vektorraum</text>
</tag>
      <tag><text>TE:3:Lineare Unabhängigkeit</text>
</tag>
      <tag><text>src:F07-INT</text>
</tag>
      <tag><text>Bloom:2</text>
</tag>
      <tag><text>Maier:1:3</text>
</tag>
      <tag><text>Maier:2:1</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>praxiserprobt</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:TaggingGeprueft</text>
</tag>
      <tag><text>qs:importIliasGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 809353  -->
  <question type="stack">
    <name>
      <text>Lineare Algebra: Lineare Abhängigkeit (MC)</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Sind die angegebenen Vektoren linear abhängig voneinander?<span style="font-size: 20px;"><b><br></b></span></p><p></p><p></p><p><b>(a)</b> \(\begin{bmatrix} {@a@} \\ {@b@}\\ {@c@}\\ \end{bmatrix} ,\begin{bmatrix} {@aplus1@} \\ {@bminus1@}\\ {@c@}\\ \end{bmatrix} , \begin{bmatrix} {@aplus2@} \\ {@b@}\\ {@cplus2@}\\ \end{bmatrix} \)<br></p><p>[[input:ans1]] [[validation:ans1]][[feedback:prt1]]<br></p><p><b>(b)</b> \( \begin{bmatrix} {@a@} \\ {@b@}\\ {@c@}\\ \end{bmatrix} ,\begin{bmatrix} {@d@} \\ {@e@}\\ {@f@}\\ \end{bmatrix} , \begin{bmatrix} {@aminus2@} \\ {@bminus2@}\\ {@cminus2@}\\ \end{bmatrix} \)<br></p><p>[[input:ans2]] [[validation:ans2]][[feedback:prt2]]</p><p></p><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<h4><b>Lösung</b></h4><p><br></p><p></p><p>Es wird eine Umformung der Matrix mit den Vektoren als Spalten in Zeilenstufenform durchgeführt.&nbsp;</p><p>Ist der Rang voll (also keine Nullzeile am Ende), sind die Vektoren linear unabhängig, anderenfalls sind sie linear abhängig.</p><br><p></p><p><b><b>(a)</b>&nbsp;</b>\(\begin{bmatrix} {@a@} \\ {@b@}\\ {@c@}\\ \end{bmatrix} ,\begin{bmatrix} {@aplus1@} \\ {@bminus1@}\\ {@c@}\\ \end{bmatrix} , \begin{bmatrix} {@aplus2@} \\ {@b@}\\ {@cplus2@}\\ \end{bmatrix} \)<br></p><p>&nbsp;</p><div class="editor-indent" style="margin-left: 30px;"><p>\({@A@} \xrightarrow{{@a@}II-{@b@}I, {@a@}III- {@c@}I} {@B@} \xrightarrow{{@a1@}III+({@a2@})II} {@C@}\)</p></div><p><br></p><p><b>(b)</b>&nbsp;\( \begin{bmatrix} {@a@} \\ {@b@}\\ {@c@}\\ \end{bmatrix} ,\begin{bmatrix} {@d@} \\ {@e@}\\ {@f@}\\ \end{bmatrix} , \begin{bmatrix} {@aminus2@} \\ {@bminus2@}\\ {@cminus2@}\\ \end{bmatrix} \)<br></p><p><br></p><div class="editor-indent" style="margin-left: 30px;"><p>\({@D@} \xrightarrow{{@a@}II-{@b@}I, {@a@}III- {@c@}I} {@E@} \xrightarrow{{@b1@}III+({@b2@})II} {@F@}\)</p></div>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[a:rand_with_step(1,5,1);
aplus1:a+1;
aplus2:a+2;
b:rand_with_step(1,5,1);
bminus1:b-1;
c: rand_with_prohib(1,5,[a+b]);
cplus2:c+2;
d:rand_with_step(1,5,1);
e:rand_with_step(1,5,1);
f:rand_with_step(1,5,1);
aminus2:a-2*d;
bminus2:b-2*e;
cminus2: rand_with_prohib(c-2*f,c-2*f,[a,b]);
mm:matrix([1,3,-1],[0,2,1],[0,-1,2])


Tans2 : 2;
AnsList : [[1, false, "ja"], [2, true, "nein"]];


Tans3 : 1;
AnsList2 : [[1, true, "ja"], [2, false, "nein"]];

A: matrix([a,a+1,a+2],[b,b-1,b],[c,c,c+2])
B: matrix([a,a+1,a+2],[0,a*(b-1)-b*(a+1),a*b-b*(a+2)], [0, a*c-c*(a+1),a*(c+2)-c*(a+2)])
C: matrix([a,a+1,a+2],[0,a*(b-1)-b*(a+1),a*b-b*(a+2)], [0,0 ,(a*(b-1)-b*(a+1))*(a*(c+2)-c*(a+2))-(a*c-c*(a+1))*(a*b-b*(a+2))])
a1: (a*(b-1)-b*(a+1))
a2: (a*c-c*(a+1))

D: matrix([a,d,aminus2], [b,e,bminus2], [c,f,cminus2])
E: matrix([a,d,aminus2], [0, a*e-b*d, a*bminus2-b*aminus2], [0, a*f-c*d, a*cminus2-c*aminus2])
F: matrix([a,d,aminus2], [0, a*e-b*d, a*bminus2-b*aminus2], [0, 0, (a*e-b*d)*(a*cminus2-c*aminus2)-( a*f-c*d)*( a*bminus2-b*aminus2)])
b1:a*e-b*d
b2: a*f-c*d]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>n</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>(</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>radio</type>
      <tans>AnsList </tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>radio</type>
      <tans>AnsList2 </tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>Tans2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>Tans3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>TE:1:Lineare Algebra</text>
</tag>
      <tag><text>te:2:Vektorraum</text>
</tag>
      <tag><text>TE:3:Lineare Unabhängigkeit</text>
</tag>
      <tag><text>src:F07-INT</text>
</tag>
      <tag><text>Bloom:2</text>
</tag>
      <tag><text>Maier:1:3</text>
</tag>
      <tag><text>Maier:2:1</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>praxiserprobt</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:TaggingGeprueft</text>
</tag>
      <tag><text>qs:importIliasGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 809209  -->
  <question type="stack">
    <name>
      <text><![CDATA[Vektorräume: 4 Linear abhängige Vektoren (R3) [{"DOMAINUID":"B78FF66"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Betrachten Sie den Vektorraum \(\mathbb{R}^3\).</p>
<p><br />Die Vektoren</p>
<p>\(@uv@\, , \, @vv@\, , \, @wv@\, , \, @xv@\)</p>
<p>sind linear abhängig.</p>
<p><br />Geben Sie vier Zahlen \(a_1,a_2,a_3\) und \(a_4 \) an, die nicht Null sind mit</p>
<p><br />\( a_1 \cdot @uv@ + a_2 \cdot @vv@ + a_3 \cdot @wv@ + a_4 \cdot @xv@ = 0 \)</p>
<p><br />Hinweis: Geben Sie die Zahlen kommagetrennt in diesem Format ein \( [a_1,a_2,a_3,a_4] \).</p>
<p><br />\( [a_1,a_2,a_3,a_4] \ = \ \)[[input:ans1]] [[validation:ans1]] [[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text>u1: rand_with_prohib(-9,9,[0]);
u2: 0;
u3: 0;
uv: matrix([u1],[u2],[u3]);
v1: rand_with_prohib(-9,9,[0]);
v2: rand_with_prohib(-9,9,[0]);
v3: 0;
vv: matrix([v1],[v2],[v3]);
w1: rand_with_prohib(-9,9,[0]);
w2: rand_with_prohib(-9,9,[0]);
w3: rand_with_prohib(-9,9,[0]);
wv: matrix([w1],[w2],[w3]);
x1: rand_with_prohib(-9,9,[0]);
x2: rand_with_prohib(-9,9,[0]);
x3: rand_with_prohib(-9,9,[0]);
xv: matrix([x1],[x2],[x3]);

A: matrix([u1, v1, w1, x1 ], [u2, v2, w2, x2 ], [u3, v3, w3, x3 ]);

R: rank(A);

kern: nullspace(A);


a1: transpose(args(kern)[1][1][1]);
a2: transpose(args(kern)[1][2][1]);
a3: transpose(args(kern)[1][3][1]);
a4: transpose(args(kern)[1][4][1]);

loes: [a1,a2,a3,a4];</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(Lösung:@loes@ \)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>loes</tans>
      <boxsize>40</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>null: if length(ans1)=4 then ans1[1]*ans1[2]*ans1[3]*ans1[4] else 0;
prod: if length(ans1)=4 then ans1[1]*uv+ans1[2]*vv+ans1[3]*wv+ans1[4]*xv else matrix([1],[1],[1]);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>null</sans>
        <tans>0</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Keine der Zahlen \(a_1,a_2,a_3,a_4 \) darf null sein.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>prod</sans>
        <tans>matrix([0],[0],[0])</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>376067240</deployedseed>
    <deployedseed>2106404684</deployedseed>
    <deployedseed>1054981633</deployedseed>
    <deployedseed>990873646</deployedseed>
    <deployedseed>238183500</deployedseed>
    <deployedseed>1746471038</deployedseed>
    <deployedseed>797968003</deployedseed>
    <deployedseed>517871216</deployedseed>
    <deployedseed>979119720</deployedseed>
    <deployedseed>594025933</deployedseed>
    <deployedseed>1495743375</deployedseed>
    <deployedseed>1108077037</deployedseed>
    <deployedseed>1432283027</deployedseed>
    <deployedseed>1436734654</deployedseed>
    <deployedseed>2107222398</deployedseed>
    <deployedseed>735002358</deployedseed>
    <deployedseed>299534436</deployedseed>
    <deployedseed>626664910</deployedseed>
    <deployedseed>741048777</deployedseed>
    <deployedseed>1200702308</deployedseed>
    <deployedseed>761719064</deployedseed>
    <deployedseed>1469301995</deployedseed>
    <deployedseed>937254670</deployedseed>
    <deployedseed>917442210</deployedseed>
    <deployedseed>87457233</deployedseed>
    <deployedseed>969055299</deployedseed>
    <deployedseed>1115338071</deployedseed>
    <deployedseed>877818248</deployedseed>
    <deployedseed>808941555</deployedseed>
    <deployedseed>1376707367</deployedseed>
    <deployedseed>841811257</deployedseed>
    <deployedseed>798044707</deployedseed>
    <deployedseed>666004660</deployedseed>
    <deployedseed>508459259</deployedseed>
    <deployedseed>1484130808</deployedseed>
    <deployedseed>1022467376</deployedseed>
    <deployedseed>1860279304</deployedseed>
    <deployedseed>1465040126</deployedseed>
    <deployedseed>1753105603</deployedseed>
    <deployedseed>479420914</deployedseed>
    <deployedseed>17497613</deployedseed>
    <deployedseed>1304290868</deployedseed>
    <deployedseed>1434210965</deployedseed>
    <deployedseed>156096175</deployedseed>
    <deployedseed>2053309969</deployedseed>
    <deployedseed>1011289458</deployedseed>
    <deployedseed>525514234</deployedseed>
    <deployedseed>1922904248</deployedseed>
    <deployedseed>280674083</deployedseed>
    <deployedseed>892991987</deployedseed>
    <deployedseed>81319599</deployedseed>
    <deployedseed>1992474389</deployedseed>
    <deployedseed>1488636637</deployedseed>
    <deployedseed>807382132</deployedseed>
    <deployedseed>983432525</deployedseed>
    <deployedseed>1196953943</deployedseed>
    <deployedseed>586745232</deployedseed>
    <deployedseed>741564552</deployedseed>
    <deployedseed>2091254399</deployedseed>
    <deployedseed>1357694469</deployedseed>
    <deployedseed>910739982</deployedseed>
    <deployedseed>1772416712</deployedseed>
    <deployedseed>1714887687</deployedseed>
    <deployedseed>1421222537</deployedseed>
    <deployedseed>474717499</deployedseed>
    <deployedseed>1620569963</deployedseed>
    <deployedseed>174412280</deployedseed>
    <deployedseed>2088949664</deployedseed>
    <deployedseed>219047116</deployedseed>
    <deployedseed>1344518829</deployedseed>
    <deployedseed>847007550</deployedseed>
    <deployedseed>2106214320</deployedseed>
    <deployedseed>875644297</deployedseed>
    <deployedseed>617542615</deployedseed>
    <deployedseed>1505491078</deployedseed>
    <deployedseed>838496538</deployedseed>
    <deployedseed>1168639506</deployedseed>
    <deployedseed>363777869</deployedseed>
    <deployedseed>1558257084</deployedseed>
    <deployedseed>1108097140</deployedseed>
    <deployedseed>1716824064</deployedseed>
    <deployedseed>1912379355</deployedseed>
    <deployedseed>1960149414</deployedseed>
    <deployedseed>1848010354</deployedseed>
    <deployedseed>657012396</deployedseed>
    <deployedseed>1641456131</deployedseed>
    <deployedseed>123907463</deployedseed>
    <deployedseed>1388790719</deployedseed>
    <deployedseed>1263630255</deployedseed>
    <deployedseed>672298025</deployedseed>
    <deployedseed>1069006991</deployedseed>
    <deployedseed>604225575</deployedseed>
    <deployedseed>1052288630</deployedseed>
    <deployedseed>1320199123</deployedseed>
    <deployedseed>492310295</deployedseed>
    <deployedseed>848160560</deployedseed>
    <deployedseed>1484142978</deployedseed>
    <deployedseed>1624361191</deployedseed>
    <deployedseed>1618996345</deployedseed>
    <deployedseed>191940335</deployedseed>
    <deployedseed>631416070</deployedseed>
    <deployedseed>1059001106</deployedseed>
    <deployedseed>882948310</deployedseed>
    <deployedseed>388165056</deployedseed>
    <deployedseed>751124672</deployedseed>
    <deployedseed>2009446503</deployedseed>
    <deployedseed>958095093</deployedseed>
    <deployedseed>1881123511</deployedseed>
    <deployedseed>992061590</deployedseed>
    <deployedseed>227905866</deployedseed>
    <deployedseed>105485796</deployedseed>
    <deployedseed>1351167296</deployedseed>
    <deployedseed>536463677</deployedseed>
    <deployedseed>400613298</deployedseed>
    <deployedseed>1082852957</deployedseed>
    <deployedseed>1237036177</deployedseed>
    <deployedseed>586657013</deployedseed>
    <deployedseed>806428616</deployedseed>
    <deployedseed>1915930591</deployedseed>
    <deployedseed>384150052</deployedseed>
    <deployedseed>1573012550</deployedseed>
    <deployedseed>512774013</deployedseed>
    <deployedseed>1516910153</deployedseed>
    <deployedseed>1956435283</deployedseed>
    <deployedseed>707408729</deployedseed>
    <deployedseed>677701407</deployedseed>
    <deployedseed>278240223</deployedseed>
    <deployedseed>488686186</deployedseed>
    <deployedseed>1724701491</deployedseed>
    <deployedseed>2105017447</deployedseed>
    <deployedseed>2117077453</deployedseed>
    <deployedseed>2067858307</deployedseed>
    <deployedseed>645354739</deployedseed>
    <deployedseed>1189898708</deployedseed>
    <deployedseed>1718980105</deployedseed>
    <deployedseed>1470998953</deployedseed>
    <deployedseed>170463867</deployedseed>
    <deployedseed>1507053162</deployedseed>
    <deployedseed>1888830405</deployedseed>
    <deployedseed>115456998</deployedseed>
    <deployedseed>101669770</deployedseed>
    <deployedseed>311817734</deployedseed>
    <deployedseed>40840791</deployedseed>
    <deployedseed>441235155</deployedseed>
    <deployedseed>560289560</deployedseed>
    <deployedseed>184305066</deployedseed>
    <deployedseed>2053839187</deployedseed>
    <deployedseed>364948415</deployedseed>
    <deployedseed>3467290</deployedseed>
    <deployedseed>557824566</deployedseed>
    <deployedseed>995652</deployedseed>
    <deployedseed>181091428</deployedseed>
    <deployedseed>46595347</deployedseed>
    <deployedseed>1899389703</deployedseed>
    <deployedseed>766242461</deployedseed>
    <deployedseed>486548360</deployedseed>
    <deployedseed>1854728251</deployedseed>
    <deployedseed>1762413382</deployedseed>
    <deployedseed>785622933</deployedseed>
    <deployedseed>875236093</deployedseed>
    <deployedseed>1603254935</deployedseed>
    <deployedseed>769075515</deployedseed>
    <deployedseed>1576099656</deployedseed>
    <deployedseed>669785322</deployedseed>
    <deployedseed>326283595</deployedseed>
    <deployedseed>1626678649</deployedseed>
    <deployedseed>1237904630</deployedseed>
    <deployedseed>1396358965</deployedseed>
    <deployedseed>1331626222</deployedseed>
    <deployedseed>403412243</deployedseed>
    <deployedseed>1836229229</deployedseed>
    <deployedseed>1503410562</deployedseed>
    <deployedseed>355400016</deployedseed>
    <deployedseed>1852872809</deployedseed>
    <deployedseed>1837687778</deployedseed>
    <deployedseed>608373378</deployedseed>
    <deployedseed>1507257245</deployedseed>
    <deployedseed>469820950</deployedseed>
    <deployedseed>1914918347</deployedseed>
    <deployedseed>1423942596</deployedseed>
    <deployedseed>404502844</deployedseed>
    <deployedseed>570235735</deployedseed>
    <deployedseed>2076977752</deployedseed>
    <deployedseed>945564209</deployedseed>
    <deployedseed>1903964021</deployedseed>
    <deployedseed>352835288</deployedseed>
    <deployedseed>1341930263</deployedseed>
    <deployedseed>1410944157</deployedseed>
    <deployedseed>1782789356</deployedseed>
    <deployedseed>215714742</deployedseed>
    <deployedseed>1450821009</deployedseed>
    <deployedseed>1629909015</deployedseed>
    <deployedseed>485206311</deployedseed>
    <deployedseed>511824500</deployedseed>
    <deployedseed>1350742703</deployedseed>
    <deployedseed>1059162358</deployedseed>
    <deployedseed>1885675120</deployedseed>
    <deployedseed>1631783457</deployedseed>
    <deployedseed>749841037</deployedseed>
    <deployedseed>1190203902</deployedseed>
    <qtest>
      <testcase>1</testcase>
      <description></description>
      <testinput>
        <name>ans1</name>
        <value>loes</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt1-2-T</expectedanswernote>
      </expected>
    </qtest>
  </question>

<!-- question: 809217  -->
  <question type="stack">
    <name>
      <text><![CDATA[Vektorräume: 4 Linear abhängige Vektoren (R3) [{"DOMAINUID":"B78FF66"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Betrachten Sie den Vektorraum \(\mathbb{R}^3\).</p>
<p><br />Die Vektoren</p>
<p>\(@uv@\, , \, @vv@\, , \, @wv@\, , \, @xv@\)</p>
<p>sind linear abhängig.</p>
<p><br />Geben Sie vier Zahlen \(a_1,a_2,a_3\) und \(a_4 \) an, die nicht Null sind mit</p>
<p><br />\( a_1 \cdot @uv@ + a_2 \cdot @vv@ + a_3 \cdot @wv@ + a_4 \cdot @xv@ = 0 \)</p>
<p><br />Hinweis: Geben Sie die Zahlen kommagetrennt in diesem Format ein \( [a_1,a_2,a_3,a_4] \).</p>
<p><br />\( [a_1,a_2,a_3,a_4] \ = \ \)[[input:ans1]] [[validation:ans1]] [[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text>u1: rand_with_prohib(-9,9,[0]);
u2: 0;
u3: 0;
uv: matrix([u1],[u2],[u3]);
v1: rand_with_prohib(-9,9,[0]);
v2: rand_with_prohib(-9,9,[0]);
v3: 0;
vv: matrix([v1],[v2],[v3]);
w1: rand_with_prohib(-9,9,[0]);
w2: rand_with_prohib(-9,9,[0]);
w3: rand_with_prohib(-9,9,[0]);
wv: matrix([w1],[w2],[w3]);
x1: rand_with_prohib(-9,9,[0]);
x2: rand_with_prohib(-9,9,[0]);
x3: rand_with_prohib(-9,9,[0]);
xv: matrix([x1],[x2],[x3]);

A: matrix([u1, v1, w1, x1 ], [u2, v2, w2, x2 ], [u3, v3, w3, x3 ]);

R: rank(A);

kern: nullspace(A);


a1: transpose(args(kern)[1][1][1]);
a2: transpose(args(kern)[1][2][1]);
a3: transpose(args(kern)[1][3][1]);
a4: transpose(args(kern)[1][4][1]);

loes: [a1,a2,a3,a4];</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(Lösung:@loes@ \)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>loes</tans>
      <boxsize>40</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>null: if length(ans1)=4 then ans1[1]*ans1[2]*ans1[3]*ans1[4] else 0;
prod: if length(ans1)=4 then ans1[1]*uv+ans1[2]*vv+ans1[3]*wv+ans1[4]*xv else matrix([1],[1],[1]);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>null</sans>
        <tans>0</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Keine der Zahlen \(a_1,a_2,a_3,a_4 \) darf null sein.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>prod</sans>
        <tans>matrix([0],[0],[0])</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>376067240</deployedseed>
    <deployedseed>2106404684</deployedseed>
    <deployedseed>1054981633</deployedseed>
    <deployedseed>990873646</deployedseed>
    <deployedseed>238183500</deployedseed>
    <deployedseed>1746471038</deployedseed>
    <deployedseed>797968003</deployedseed>
    <deployedseed>517871216</deployedseed>
    <deployedseed>979119720</deployedseed>
    <deployedseed>594025933</deployedseed>
    <deployedseed>1495743375</deployedseed>
    <deployedseed>1108077037</deployedseed>
    <deployedseed>1432283027</deployedseed>
    <deployedseed>1436734654</deployedseed>
    <deployedseed>2107222398</deployedseed>
    <deployedseed>735002358</deployedseed>
    <deployedseed>299534436</deployedseed>
    <deployedseed>626664910</deployedseed>
    <deployedseed>741048777</deployedseed>
    <deployedseed>1200702308</deployedseed>
    <deployedseed>761719064</deployedseed>
    <deployedseed>1469301995</deployedseed>
    <deployedseed>937254670</deployedseed>
    <deployedseed>917442210</deployedseed>
    <deployedseed>87457233</deployedseed>
    <deployedseed>969055299</deployedseed>
    <deployedseed>1115338071</deployedseed>
    <deployedseed>877818248</deployedseed>
    <deployedseed>808941555</deployedseed>
    <deployedseed>1376707367</deployedseed>
    <deployedseed>841811257</deployedseed>
    <deployedseed>798044707</deployedseed>
    <deployedseed>666004660</deployedseed>
    <deployedseed>508459259</deployedseed>
    <deployedseed>1484130808</deployedseed>
    <deployedseed>1022467376</deployedseed>
    <deployedseed>1860279304</deployedseed>
    <deployedseed>1465040126</deployedseed>
    <deployedseed>1753105603</deployedseed>
    <deployedseed>479420914</deployedseed>
    <deployedseed>17497613</deployedseed>
    <deployedseed>1304290868</deployedseed>
    <deployedseed>1434210965</deployedseed>
    <deployedseed>156096175</deployedseed>
    <deployedseed>2053309969</deployedseed>
    <deployedseed>1011289458</deployedseed>
    <deployedseed>525514234</deployedseed>
    <deployedseed>1922904248</deployedseed>
    <deployedseed>280674083</deployedseed>
    <deployedseed>892991987</deployedseed>
    <deployedseed>81319599</deployedseed>
    <deployedseed>1992474389</deployedseed>
    <deployedseed>1488636637</deployedseed>
    <deployedseed>807382132</deployedseed>
    <deployedseed>983432525</deployedseed>
    <deployedseed>1196953943</deployedseed>
    <deployedseed>586745232</deployedseed>
    <deployedseed>741564552</deployedseed>
    <deployedseed>2091254399</deployedseed>
    <deployedseed>1357694469</deployedseed>
    <deployedseed>910739982</deployedseed>
    <deployedseed>1772416712</deployedseed>
    <deployedseed>1714887687</deployedseed>
    <deployedseed>1421222537</deployedseed>
    <deployedseed>474717499</deployedseed>
    <deployedseed>1620569963</deployedseed>
    <deployedseed>174412280</deployedseed>
    <deployedseed>2088949664</deployedseed>
    <deployedseed>219047116</deployedseed>
    <deployedseed>1344518829</deployedseed>
    <deployedseed>847007550</deployedseed>
    <deployedseed>2106214320</deployedseed>
    <deployedseed>875644297</deployedseed>
    <deployedseed>617542615</deployedseed>
    <deployedseed>1505491078</deployedseed>
    <deployedseed>838496538</deployedseed>
    <deployedseed>1168639506</deployedseed>
    <deployedseed>363777869</deployedseed>
    <deployedseed>1558257084</deployedseed>
    <deployedseed>1108097140</deployedseed>
    <deployedseed>1716824064</deployedseed>
    <deployedseed>1912379355</deployedseed>
    <deployedseed>1960149414</deployedseed>
    <deployedseed>1848010354</deployedseed>
    <deployedseed>657012396</deployedseed>
    <deployedseed>1641456131</deployedseed>
    <deployedseed>123907463</deployedseed>
    <deployedseed>1388790719</deployedseed>
    <deployedseed>1263630255</deployedseed>
    <deployedseed>672298025</deployedseed>
    <deployedseed>1069006991</deployedseed>
    <deployedseed>604225575</deployedseed>
    <deployedseed>1052288630</deployedseed>
    <deployedseed>1320199123</deployedseed>
    <deployedseed>492310295</deployedseed>
    <deployedseed>848160560</deployedseed>
    <deployedseed>1484142978</deployedseed>
    <deployedseed>1624361191</deployedseed>
    <deployedseed>1618996345</deployedseed>
    <deployedseed>191940335</deployedseed>
    <deployedseed>631416070</deployedseed>
    <deployedseed>1059001106</deployedseed>
    <deployedseed>882948310</deployedseed>
    <deployedseed>388165056</deployedseed>
    <deployedseed>751124672</deployedseed>
    <deployedseed>2009446503</deployedseed>
    <deployedseed>958095093</deployedseed>
    <deployedseed>1881123511</deployedseed>
    <deployedseed>992061590</deployedseed>
    <deployedseed>227905866</deployedseed>
    <deployedseed>105485796</deployedseed>
    <deployedseed>1351167296</deployedseed>
    <deployedseed>536463677</deployedseed>
    <deployedseed>400613298</deployedseed>
    <deployedseed>1082852957</deployedseed>
    <deployedseed>1237036177</deployedseed>
    <deployedseed>586657013</deployedseed>
    <deployedseed>806428616</deployedseed>
    <deployedseed>1915930591</deployedseed>
    <deployedseed>384150052</deployedseed>
    <deployedseed>1573012550</deployedseed>
    <deployedseed>512774013</deployedseed>
    <deployedseed>1516910153</deployedseed>
    <deployedseed>1956435283</deployedseed>
    <deployedseed>707408729</deployedseed>
    <deployedseed>677701407</deployedseed>
    <deployedseed>278240223</deployedseed>
    <deployedseed>488686186</deployedseed>
    <deployedseed>1724701491</deployedseed>
    <deployedseed>2105017447</deployedseed>
    <deployedseed>2117077453</deployedseed>
    <deployedseed>2067858307</deployedseed>
    <deployedseed>645354739</deployedseed>
    <deployedseed>1189898708</deployedseed>
    <deployedseed>1718980105</deployedseed>
    <deployedseed>1470998953</deployedseed>
    <deployedseed>170463867</deployedseed>
    <deployedseed>1507053162</deployedseed>
    <deployedseed>1888830405</deployedseed>
    <deployedseed>115456998</deployedseed>
    <deployedseed>101669770</deployedseed>
    <deployedseed>311817734</deployedseed>
    <deployedseed>40840791</deployedseed>
    <deployedseed>441235155</deployedseed>
    <deployedseed>560289560</deployedseed>
    <deployedseed>184305066</deployedseed>
    <deployedseed>2053839187</deployedseed>
    <deployedseed>364948415</deployedseed>
    <deployedseed>3467290</deployedseed>
    <deployedseed>557824566</deployedseed>
    <deployedseed>995652</deployedseed>
    <deployedseed>181091428</deployedseed>
    <deployedseed>46595347</deployedseed>
    <deployedseed>1899389703</deployedseed>
    <deployedseed>766242461</deployedseed>
    <deployedseed>486548360</deployedseed>
    <deployedseed>1854728251</deployedseed>
    <deployedseed>1762413382</deployedseed>
    <deployedseed>785622933</deployedseed>
    <deployedseed>875236093</deployedseed>
    <deployedseed>1603254935</deployedseed>
    <deployedseed>769075515</deployedseed>
    <deployedseed>1576099656</deployedseed>
    <deployedseed>669785322</deployedseed>
    <deployedseed>326283595</deployedseed>
    <deployedseed>1626678649</deployedseed>
    <deployedseed>1237904630</deployedseed>
    <deployedseed>1396358965</deployedseed>
    <deployedseed>1331626222</deployedseed>
    <deployedseed>403412243</deployedseed>
    <deployedseed>1836229229</deployedseed>
    <deployedseed>1503410562</deployedseed>
    <deployedseed>355400016</deployedseed>
    <deployedseed>1852872809</deployedseed>
    <deployedseed>1837687778</deployedseed>
    <deployedseed>608373378</deployedseed>
    <deployedseed>1507257245</deployedseed>
    <deployedseed>469820950</deployedseed>
    <deployedseed>1914918347</deployedseed>
    <deployedseed>1423942596</deployedseed>
    <deployedseed>404502844</deployedseed>
    <deployedseed>570235735</deployedseed>
    <deployedseed>2076977752</deployedseed>
    <deployedseed>945564209</deployedseed>
    <deployedseed>1903964021</deployedseed>
    <deployedseed>352835288</deployedseed>
    <deployedseed>1341930263</deployedseed>
    <deployedseed>1410944157</deployedseed>
    <deployedseed>1782789356</deployedseed>
    <deployedseed>215714742</deployedseed>
    <deployedseed>1450821009</deployedseed>
    <deployedseed>1629909015</deployedseed>
    <deployedseed>485206311</deployedseed>
    <deployedseed>511824500</deployedseed>
    <deployedseed>1350742703</deployedseed>
    <deployedseed>1059162358</deployedseed>
    <deployedseed>1885675120</deployedseed>
    <deployedseed>1631783457</deployedseed>
    <deployedseed>749841037</deployedseed>
    <deployedseed>1190203902</deployedseed>
    <qtest>
      <testcase>1</testcase>
      <description></description>
      <testinput>
        <name>ans1</name>
        <value>loes</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt1-2-T</expectedanswernote>
      </expected>
    </qtest>
  </question>

<!-- question: 809221  -->
  <question type="stack">
    <name>
      <text><![CDATA[Vektorräume: 4 Linear abhängige Vektoren (R3) [{"DOMAINUID":"B78FF66"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Betrachten Sie den Vektorraum \(\mathbb{R}^3\).</p>
<p><br />Die Vektoren</p>
<p>\(@uv@\, , \, @vv@\, , \, @wv@\, , \, @xv@\)</p>
<p>sind linear abhängig.</p>
<p><br />Geben Sie vier Zahlen \(a_1,a_2,a_3\) und \(a_4 \) an, die nicht Null sind mit</p>
<p><br />\( a_1 \cdot @uv@ + a_2 \cdot @vv@ + a_3 \cdot @wv@ + a_4 \cdot @xv@ = 0 \)</p>
<p><br />Hinweis: Geben Sie die Zahlen kommagetrennt in diesem Format ein \( [a_1,a_2,a_3,a_4] \).</p>
<p><br />\( [a_1,a_2,a_3,a_4] \ = \ \)[[input:ans1]] [[validation:ans1]] [[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text>u1: rand_with_prohib(-9,9,[0]);
u2: 0;
u3: 0;
uv: matrix([u1],[u2],[u3]);
v1: rand_with_prohib(-9,9,[0]);
v2: rand_with_prohib(-9,9,[0]);
v3: 0;
vv: matrix([v1],[v2],[v3]);
w1: rand_with_prohib(-9,9,[0]);
w2: rand_with_prohib(-9,9,[0]);
w3: rand_with_prohib(-9,9,[0]);
wv: matrix([w1],[w2],[w3]);
x1: rand_with_prohib(-9,9,[0]);
x2: rand_with_prohib(-9,9,[0]);
x3: rand_with_prohib(-9,9,[0]);
xv: matrix([x1],[x2],[x3]);

A: matrix([u1, v1, w1, x1 ], [u2, v2, w2, x2 ], [u3, v3, w3, x3 ]);

R: rank(A);

kern: nullspace(A);


a1: transpose(args(kern)[1][1][1]);
a2: transpose(args(kern)[1][2][1]);
a3: transpose(args(kern)[1][3][1]);
a4: transpose(args(kern)[1][4][1]);

loes: [a1,a2,a3,a4];</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(Lösung:@loes@ \)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>loes</tans>
      <boxsize>40</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>null: if length(ans1)=4 then ans1[1]*ans1[2]*ans1[3]*ans1[4] else 0;
prod: if length(ans1)=4 then ans1[1]*uv+ans1[2]*vv+ans1[3]*wv+ans1[4]*xv else matrix([1],[1],[1]);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>null</sans>
        <tans>0</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Keine der Zahlen \(a_1,a_2,a_3,a_4 \) darf null sein.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>prod</sans>
        <tans>matrix([0],[0],[0])</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>376067240</deployedseed>
    <deployedseed>2106404684</deployedseed>
    <deployedseed>1054981633</deployedseed>
    <deployedseed>990873646</deployedseed>
    <deployedseed>238183500</deployedseed>
    <deployedseed>1746471038</deployedseed>
    <deployedseed>797968003</deployedseed>
    <deployedseed>517871216</deployedseed>
    <deployedseed>979119720</deployedseed>
    <deployedseed>594025933</deployedseed>
    <deployedseed>1495743375</deployedseed>
    <deployedseed>1108077037</deployedseed>
    <deployedseed>1432283027</deployedseed>
    <deployedseed>1436734654</deployedseed>
    <deployedseed>2107222398</deployedseed>
    <deployedseed>735002358</deployedseed>
    <deployedseed>299534436</deployedseed>
    <deployedseed>626664910</deployedseed>
    <deployedseed>741048777</deployedseed>
    <deployedseed>1200702308</deployedseed>
    <deployedseed>761719064</deployedseed>
    <deployedseed>1469301995</deployedseed>
    <deployedseed>937254670</deployedseed>
    <deployedseed>917442210</deployedseed>
    <deployedseed>87457233</deployedseed>
    <deployedseed>969055299</deployedseed>
    <deployedseed>1115338071</deployedseed>
    <deployedseed>877818248</deployedseed>
    <deployedseed>808941555</deployedseed>
    <deployedseed>1376707367</deployedseed>
    <deployedseed>841811257</deployedseed>
    <deployedseed>798044707</deployedseed>
    <deployedseed>666004660</deployedseed>
    <deployedseed>508459259</deployedseed>
    <deployedseed>1484130808</deployedseed>
    <deployedseed>1022467376</deployedseed>
    <deployedseed>1860279304</deployedseed>
    <deployedseed>1465040126</deployedseed>
    <deployedseed>1753105603</deployedseed>
    <deployedseed>479420914</deployedseed>
    <deployedseed>17497613</deployedseed>
    <deployedseed>1304290868</deployedseed>
    <deployedseed>1434210965</deployedseed>
    <deployedseed>156096175</deployedseed>
    <deployedseed>2053309969</deployedseed>
    <deployedseed>1011289458</deployedseed>
    <deployedseed>525514234</deployedseed>
    <deployedseed>1922904248</deployedseed>
    <deployedseed>280674083</deployedseed>
    <deployedseed>892991987</deployedseed>
    <deployedseed>81319599</deployedseed>
    <deployedseed>1992474389</deployedseed>
    <deployedseed>1488636637</deployedseed>
    <deployedseed>807382132</deployedseed>
    <deployedseed>983432525</deployedseed>
    <deployedseed>1196953943</deployedseed>
    <deployedseed>586745232</deployedseed>
    <deployedseed>741564552</deployedseed>
    <deployedseed>2091254399</deployedseed>
    <deployedseed>1357694469</deployedseed>
    <deployedseed>910739982</deployedseed>
    <deployedseed>1772416712</deployedseed>
    <deployedseed>1714887687</deployedseed>
    <deployedseed>1421222537</deployedseed>
    <deployedseed>474717499</deployedseed>
    <deployedseed>1620569963</deployedseed>
    <deployedseed>174412280</deployedseed>
    <deployedseed>2088949664</deployedseed>
    <deployedseed>219047116</deployedseed>
    <deployedseed>1344518829</deployedseed>
    <deployedseed>847007550</deployedseed>
    <deployedseed>2106214320</deployedseed>
    <deployedseed>875644297</deployedseed>
    <deployedseed>617542615</deployedseed>
    <deployedseed>1505491078</deployedseed>
    <deployedseed>838496538</deployedseed>
    <deployedseed>1168639506</deployedseed>
    <deployedseed>363777869</deployedseed>
    <deployedseed>1558257084</deployedseed>
    <deployedseed>1108097140</deployedseed>
    <deployedseed>1716824064</deployedseed>
    <deployedseed>1912379355</deployedseed>
    <deployedseed>1960149414</deployedseed>
    <deployedseed>1848010354</deployedseed>
    <deployedseed>657012396</deployedseed>
    <deployedseed>1641456131</deployedseed>
    <deployedseed>123907463</deployedseed>
    <deployedseed>1388790719</deployedseed>
    <deployedseed>1263630255</deployedseed>
    <deployedseed>672298025</deployedseed>
    <deployedseed>1069006991</deployedseed>
    <deployedseed>604225575</deployedseed>
    <deployedseed>1052288630</deployedseed>
    <deployedseed>1320199123</deployedseed>
    <deployedseed>492310295</deployedseed>
    <deployedseed>848160560</deployedseed>
    <deployedseed>1484142978</deployedseed>
    <deployedseed>1624361191</deployedseed>
    <deployedseed>1618996345</deployedseed>
    <deployedseed>191940335</deployedseed>
    <deployedseed>631416070</deployedseed>
    <deployedseed>1059001106</deployedseed>
    <deployedseed>882948310</deployedseed>
    <deployedseed>388165056</deployedseed>
    <deployedseed>751124672</deployedseed>
    <deployedseed>2009446503</deployedseed>
    <deployedseed>958095093</deployedseed>
    <deployedseed>1881123511</deployedseed>
    <deployedseed>992061590</deployedseed>
    <deployedseed>227905866</deployedseed>
    <deployedseed>105485796</deployedseed>
    <deployedseed>1351167296</deployedseed>
    <deployedseed>536463677</deployedseed>
    <deployedseed>400613298</deployedseed>
    <deployedseed>1082852957</deployedseed>
    <deployedseed>1237036177</deployedseed>
    <deployedseed>586657013</deployedseed>
    <deployedseed>806428616</deployedseed>
    <deployedseed>1915930591</deployedseed>
    <deployedseed>384150052</deployedseed>
    <deployedseed>1573012550</deployedseed>
    <deployedseed>512774013</deployedseed>
    <deployedseed>1516910153</deployedseed>
    <deployedseed>1956435283</deployedseed>
    <deployedseed>707408729</deployedseed>
    <deployedseed>677701407</deployedseed>
    <deployedseed>278240223</deployedseed>
    <deployedseed>488686186</deployedseed>
    <deployedseed>1724701491</deployedseed>
    <deployedseed>2105017447</deployedseed>
    <deployedseed>2117077453</deployedseed>
    <deployedseed>2067858307</deployedseed>
    <deployedseed>645354739</deployedseed>
    <deployedseed>1189898708</deployedseed>
    <deployedseed>1718980105</deployedseed>
    <deployedseed>1470998953</deployedseed>
    <deployedseed>170463867</deployedseed>
    <deployedseed>1507053162</deployedseed>
    <deployedseed>1888830405</deployedseed>
    <deployedseed>115456998</deployedseed>
    <deployedseed>101669770</deployedseed>
    <deployedseed>311817734</deployedseed>
    <deployedseed>40840791</deployedseed>
    <deployedseed>441235155</deployedseed>
    <deployedseed>560289560</deployedseed>
    <deployedseed>184305066</deployedseed>
    <deployedseed>2053839187</deployedseed>
    <deployedseed>364948415</deployedseed>
    <deployedseed>3467290</deployedseed>
    <deployedseed>557824566</deployedseed>
    <deployedseed>995652</deployedseed>
    <deployedseed>181091428</deployedseed>
    <deployedseed>46595347</deployedseed>
    <deployedseed>1899389703</deployedseed>
    <deployedseed>766242461</deployedseed>
    <deployedseed>486548360</deployedseed>
    <deployedseed>1854728251</deployedseed>
    <deployedseed>1762413382</deployedseed>
    <deployedseed>785622933</deployedseed>
    <deployedseed>875236093</deployedseed>
    <deployedseed>1603254935</deployedseed>
    <deployedseed>769075515</deployedseed>
    <deployedseed>1576099656</deployedseed>
    <deployedseed>669785322</deployedseed>
    <deployedseed>326283595</deployedseed>
    <deployedseed>1626678649</deployedseed>
    <deployedseed>1237904630</deployedseed>
    <deployedseed>1396358965</deployedseed>
    <deployedseed>1331626222</deployedseed>
    <deployedseed>403412243</deployedseed>
    <deployedseed>1836229229</deployedseed>
    <deployedseed>1503410562</deployedseed>
    <deployedseed>355400016</deployedseed>
    <deployedseed>1852872809</deployedseed>
    <deployedseed>1837687778</deployedseed>
    <deployedseed>608373378</deployedseed>
    <deployedseed>1507257245</deployedseed>
    <deployedseed>469820950</deployedseed>
    <deployedseed>1914918347</deployedseed>
    <deployedseed>1423942596</deployedseed>
    <deployedseed>404502844</deployedseed>
    <deployedseed>570235735</deployedseed>
    <deployedseed>2076977752</deployedseed>
    <deployedseed>945564209</deployedseed>
    <deployedseed>1903964021</deployedseed>
    <deployedseed>352835288</deployedseed>
    <deployedseed>1341930263</deployedseed>
    <deployedseed>1410944157</deployedseed>
    <deployedseed>1782789356</deployedseed>
    <deployedseed>215714742</deployedseed>
    <deployedseed>1450821009</deployedseed>
    <deployedseed>1629909015</deployedseed>
    <deployedseed>485206311</deployedseed>
    <deployedseed>511824500</deployedseed>
    <deployedseed>1350742703</deployedseed>
    <deployedseed>1059162358</deployedseed>
    <deployedseed>1885675120</deployedseed>
    <deployedseed>1631783457</deployedseed>
    <deployedseed>749841037</deployedseed>
    <deployedseed>1190203902</deployedseed>
    <qtest>
      <testcase>1</testcase>
      <description></description>
      <testinput>
        <name>ans1</name>
        <value>loes</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt1-2-T</expectedanswernote>
      </expected>
    </qtest>
  </question>

<!-- question: 809222  -->
  <question type="stack">
    <name>
      <text><![CDATA[Vektorräume: Lineare Unabhängigkeit und Abhängigkeit (R3) [{"DOMAINUID":"68AE421"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben sind die Vektoren</p>
<p>\(\vec{a}_1= {@av@}, \quad \vec{a}_2= {@bv@}&nbsp; \)</p>
<p>Geben Sie einen vom Nullvektor verschiedenen Vektor \(\vec{x}_1\) ein, so dass die Vektoren \(\vec{a}_1,&nbsp;\vec{a}_2\) und&nbsp;\(\vec{x}_1\) linear abhängig sind, und \(\vec{x_1}\neq\vec{a_1}\) und&nbsp;\(\vec{x_1}\neq\vec{a_2}\).</p>
<p>&nbsp;</p>
<p>\(\vec{x_1}=\)&nbsp;[[input:ans1]]&nbsp;[[validation:ans1]] [[feedback:prt1]]</p>
<p>&nbsp;</p>
<p>Geben Sie einen Vektor \(\vec{x_2}\) ein, so dass die Vektoren&nbsp;\(\vec{a}_1,&nbsp;\vec{a}_2\) und&nbsp;\(\vec{x_2}\) linear unabhängig sind.</p>
<p>&nbsp;</p>
<p>\(\vec{x_2}=\)&nbsp;[[input:ans2]]&nbsp;[[validation:ans2]] [[feedback:prt2]]</p>
<p>&nbsp;</p>
<p><strong>Hinweis:</strong> Geben Sie die Koordinaten mit&nbsp;Klammern in der Form <strong>[a,b,c]</strong> ein.</p>
<p>&nbsp;</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text>a1: rand_with_prohib(-5,5,[0]);
a2: rand_with_step(-5,5,1);
a3: rand_with_step(-5,5,1);
b1: rand_with_prohib(-5,5,[a1]);
b2: rand_with_prohib(-5,5,[a2,0]);
b3: rand_with_step(-5,5,1);

av: matrix([a1],[a2],[a3]);
bv: matrix([b1],[b2],[b3]);

a: [a1,a2,a3];
b: [b1,b2,b3];

M1: matrix ([a1,a2,a3],[b1,b2,b3]);
R1: rank(M1);

x11: 2*a1;
x12: 2*a2;
x13: 2*a3;

x1: [x11,x12,x13];


x21: a1;
x22: a2;
x23: 6;

x2: [x21,x22,x23];

M3: matrix([a1,a2,a3], [b1,b2,b3], [x21,x22,x23]);
R3: rank(M3);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(\vec{a}_1= @av@, \vec{a}_2= @bv@  \)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>x1</tans>
      <boxsize>40</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>x2</tans>
      <boxsize>40</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>M2: if length(ans1)=3 then matrix([a1,a2,a3], [b1,b2,b3], ans1);
R2: if length(ans1)=3 then rank(M2) else 3;</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>R2</sans>
        <tans>3</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>[a1,a2,a3]</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>[b1,b2,b3]</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>3</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>[0,0,0]</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-4-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>1</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-4-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>M3: if length(ans2)=3 then matrix([a1,a2,a3], [b1,b2,b3], ans2);
R3: if length(ans2)=3 then  rank(M3);
numtest1:  if length(ans2)=3 then numberp(ans2[1]*ans2[2]*ans2[3]);
numtest2: if numtest1 then 1 else 0;</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>R3</sans>
        <tans>3</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>numtest2</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 809215  -->
  <question type="stack">
    <name>
      <text><![CDATA[Vektorräume: Lineare Unabhängigkeit und Abhängigkeit (R3) [{"DOMAINUID":"68AE421"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben sind die Vektoren</p>
<p>\(\vec{a}_1= @av@, \quad \vec{a}_2= @bv@  \)</p>
<p>Geben Sie einen vom Nullvektor verschiedenen Vektor \(\vec{x}_1\) ein, so dass die Vektoren \(\vec{a}_1, \vec{a}_2\) und \(\vec{x}_1\) linear abhängig sind, und \(\vec{x_1}\neq\vec{a_1}\) und \(\vec{x_1}\neq\vec{a_2}\).</p>
<p> </p>
<p>\(\vec{x_1}=\) [[input:ans1]] [[validation:ans1]] [[feedback:prt1]]</p>
<p> </p>
<p>Geben Sie einen Vektor \(\vec{x_2}\) ein, so dass die Vektoren \(\vec{a}_1, \vec{a}_2\) und \(\vec{x_2}\) linear unabhängig sind.</p>
<p> </p>
<p>\(\vec{x_2}=\) [[input:ans2]] [[validation:ans2]] [[feedback:prt2]]</p>
<p> </p>
<p><strong>Hinweis:</strong> Geben Sie die Koordinaten mit Klammern in der Form <strong>[a,b,c]</strong> ein.</p>
<p> </p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text>a1: rand_with_prohib(-5,5,[0]);
a2: rand_with_step(-5,5,1);
a3: rand_with_step(-5,5,1);
b1: rand_with_prohib(-5,5,[a1]);
b2: rand_with_prohib(-5,5,[a2,0]);
b3: rand_with_step(-5,5,1);

av: matrix([a1],[a2],[a3]);
bv: matrix([b1],[b2],[b3]);

a: [a1,a2,a3];
b: [b1,b2,b3];

M1: matrix ([a1,a2,a3],[b1,b2,b3]);
R1: rank(M1);

x11: 2*a1;
x12: 2*a2;
x13: 2*a3;

x1: [x11,x12,x13];


x21: a1;
x22: a2;
x23: 6;

x2: [x21,x22,x23];

M3: matrix([a1,a2,a3], [b1,b2,b3], [x21,x22,x23]);
R3: rank(M3);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(\vec{a}_1= @av@, \vec{a}_2= @bv@  \)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>x1</tans>
      <boxsize>40</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>x2</tans>
      <boxsize>40</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>M2: if length(ans1)=3 then matrix([a1,a2,a3], [b1,b2,b3], ans1);
R2: if length(ans1)=3 then rank(M2) else 3;</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>R2</sans>
        <tans>3</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>[a1,a2,a3]</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>[b1,b2,b3]</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>3</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>[0,0,0]</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-4-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>1.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-4-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>M3: if length(ans2)=3 then matrix([a1,a2,a3], [b1,b2,b3], ans2);
R3: if length(ans2)=3 then  rank(M3);
numtest1:  if length(ans2)=3 then numberp(ans2[1]*ans2[2]*ans2[3]);
numtest2: if numtest1 then 1 else 0;</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>R3</sans>
        <tans>3</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>numtest2</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 809219  -->
  <question type="stack">
    <name>
      <text><![CDATA[Vektorräume: Lineare Unabhängigkeit und Abhängigkeit (R3) [{"DOMAINUID":"68AE421"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben sind die Vektoren</p>
<p>\(\vec{a}_1= @av@, \quad \vec{a}_2= @bv@  \)</p>
<p>Geben Sie einen vom Nullvektor verschiedenen Vektor \(\vec{x}_1\) ein, so dass die Vektoren \(\vec{a}_1, \vec{a}_2\) und \(\vec{x}_1\) linear abhängig sind, und \(\vec{x_1}\neq\vec{a_1}\) und \(\vec{x_1}\neq\vec{a_2}\).</p>
<p> </p>
<p>\(\vec{x_1}=\) [[input:ans1]] [[validation:ans1]] [[feedback:prt1]]</p>
<p> </p>
<p>Geben Sie einen Vektor \(\vec{x_2}\) ein, so dass die Vektoren \(\vec{a}_1, \vec{a}_2\) und \(\vec{x_2}\) linear unabhängig sind.</p>
<p> </p>
<p>\(\vec{x_2}=\) [[input:ans2]] [[validation:ans2]] [[feedback:prt2]]</p>
<p> </p>
<p><strong>Hinweis:</strong> Geben Sie die Koordinaten mit Klammern in der Form <strong>[a,b,c]</strong> ein.</p>
<p> </p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text></text>
    </stackversion>
    <questionvariables>
      <text>a1: rand_with_prohib(-5,5,[0]);
a2: rand_with_step(-5,5,1);
a3: rand_with_step(-5,5,1);
b1: rand_with_prohib(-5,5,[a1]);
b2: rand_with_prohib(-5,5,[a2,0]);
b3: rand_with_step(-5,5,1);

av: matrix([a1],[a2],[a3]);
bv: matrix([b1],[b2],[b3]);

a: [a1,a2,a3];
b: [b1,b2,b3];

M1: matrix ([a1,a2,a3],[b1,b2,b3]);
R1: rank(M1);

x11: 2*a1;
x12: 2*a2;
x13: 2*a3;

x1: [x11,x12,x13];


x21: a1;
x22: a2;
x23: 6;

x2: [x21,x22,x23];

M3: matrix([a1,a2,a3], [b1,b2,b3], [x21,x22,x23]);
R3: rank(M3);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(\vec{a}_1= @av@, \vec{a}_2= @bv@  \)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>x1</tans>
      <boxsize>40</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>x2</tans>
      <boxsize>40</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>M2: if length(ans1)=3 then matrix([a1,a2,a3], [b1,b2,b3], ans1);
R2: if length(ans1)=3 then rank(M2) else 3;</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>R2</sans>
        <tans>3</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>[a1,a2,a3]</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>[b1,b2,b3]</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>3</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>[0,0,0]</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-4-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>1.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-4-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>M3: if length(ans2)=3 then matrix([a1,a2,a3], [b1,b2,b3], ans2);
R3: if length(ans2)=3 then  rank(M3);
numtest1:  if length(ans2)=3 then numberp(ans2[1]*ans2[2]*ans2[3]);
numtest2: if numtest1 then 1 else 0;</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>R3</sans>
        <tans>3</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>numtest2</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 809348  -->
  <question type="stack">
    <name>
      <text><![CDATA[Vektorräume: Linearkombination (R3) [{"DOMAINUID":"AC1DE4B"}]]]></text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Im Raum \(\,\mathbb{R}^3\,\) soll der Vektor \(\,\vec{b}\,\) aus den Vektoren \(\,\vec{v}_1, \, \vec{v}_2\,\) und \(\, \vec{v}_3 \, \) linear kombiniert werden, so dass</p>
<p>\(\vec{b} = c_1 \cdot \vec{v}_1 + c_2 \cdot \vec{v}_2&nbsp;+ c_3 \cdot \vec{v}_3\).</p>
<p>&nbsp;</p>
<p>\(\vec{v}_1 =\begin{matrixb}&nbsp;1\\0\\3&nbsp;\end{matrixb},\quad \vec{v}_2 =\begin{matrix} -1\\1\\1 \end{matrix},\quad&nbsp;\vec{v}_3 =\begin{matrix} 2\\2\\1 \end{matrix},\)</p><p>\(\quad \vec{b} =\begin{matrix} {@a@} \\ {@b@} \\{@c@} \end{matrix}&nbsp;&nbsp;\)</p>
<p>&nbsp;</p>
<p>Geben Sie die Werte \(\,c_1, \,c_2\,\) und \(\,c_3\,\) ein.</p>
<p><strong>Hinweis:</strong> Geben Sie die exakten Antworten ein. Keine Dezimalzahlen.</p>
<p>&nbsp;</p>
<p>\(c_1 = \)&nbsp;[[input:ans1]]&nbsp;[[validation:ans1]]</p>
<p>\(c_2 = \)&nbsp;[[input:ans2]]&nbsp;[[validation:ans2]]</p>
<p>\(c_3 = \)&nbsp;[[input:ans3]]&nbsp;[[validation:ans3]]</p>
<p>[[feedback:prt1]]</p>
<p>&nbsp;</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text>a: rand_with_step(1,4,1);
b: a+rand_with_step(2,4,1);
c: a+1;
loes1: (a+4*c-3*b)/13;
loes2: (5*b-6*a+2*c)/13;
loes3: (4*b+3*a-c)/13;</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(c_1=@loes1@, c_2=@loes2@, c_3=@loes3@  \)</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>loes1</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>loes2</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>loes3</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>antwort: [ans1,ans2,ans3];
loesung: [loes1,loes2,loes3];</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>antwort</sans>
        <tans>loesung</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 0  -->
  <question type="category">
    <category>
      <text>$course$/top/Determinanten</text>
    </category>
    <info format="html">
      <text></text>
    </info>
    <idnumber></idnumber>
  </question>

<!-- question: 809377  -->
  <question type="multichoice">
    <name>
      <text>Lineare Gleichungssysteme: Lösbarkeit</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[Sei \[A = \begin{pmatrix} 1 &amp; 2 &amp; 2\\ -2 &amp; 5 &amp; 1\\ 4 &amp; 8 &amp; 8 \end{pmatrix}\] und \[b= \begin{pmatrix} 1\\ 1\\ 4\end{pmatrix}.\] <br><br>Was können Sie über die Lösungsmenge \(\mathbb{L}\) des LGS \(Ax=b\) aussagen?<br>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<h4><strong>Lösung</strong></h4><p><br></p><p>Mit Gauss:</p><p><br></p><p>\(\left(\begin{array}{ccc|c} 1 &amp; 2 &amp; 2 &amp; 1 \\ -2 &amp; 5 &amp; 1 &amp; 1 \\ 4 &amp; 8 &amp; 8 &amp; 4 \end{array}\right) \xrightarrow{II+2I, III-4I} \left(\begin{array}{ccc|c} 1 &amp; 2 &amp; 2 &amp; 1 \\ 0 &amp; 9 &amp; 5 &amp; 3 \\ 0 &amp; 0 &amp; 0 &amp; 0 \end{array}\right)\)<br></p><p><br></p><p>Daraus folgt, dass es eine freie Variable gibt und somit unendlich viele Lösungen existieren.</p><p><br></p><p><br></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text></text>
    </correctfeedback>
    <partiallycorrectfeedback format="moodle_auto_format">
      <text>1</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text></text>
    </incorrectfeedback>
    <answer fraction="0" format="moodle_auto_format">
      <text>Es existiert eine eindeutige Lösung.</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>Es existieren undendlich viele Lösungen.</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>Es existiert keine Lösung.</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>TE:1:Lineare Algebra</text>
</tag>
      <tag><text>TE:2:Lineare Gleichungssysteme</text>
</tag>
      <tag><text>TE:3:Lösbarkeit</text>
</tag>
      <tag><text>src:F07-INT</text>
</tag>
      <tag><text>Bloom:2</text>
</tag>
      <tag><text>Maier:1:3</text>
</tag>
      <tag><text>Maier:2:2</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>praxiserprobt</text>
</tag>
      <tag><text>ILIAS-Import-Error</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:TaggingGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 809374  -->
  <question type="stack">
    <name>
      <text>Determinante, Basis komplex</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p>Betrachte folgende Matrix</p><p>\(A={@A@}\)</p><p><br></p><p><b>(a)</b> Berechen sie die Determinante von \(A\).</p><p>&nbsp; &nbsp; &nbsp;\(\det(A)=\) [[input:ans1]] [[validation:ans1]][[feedback:prt1]]</p><p><br></p><p><b>(b)</b> Die Matrix hat den Rang \(\text{rg}(A)=\) [[input:ans2]] und die Spaltenvektoren bilden somit&nbsp; [[input:ans3]] Basis des \(\mathbb{C}^3\).[[validation:ans2]][[validation:ans3]][[feedback:prt2]][[feedback:prt3]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<h4><strong>Lösung</strong></h4><p><br></p><p><strong>(a)</strong> \(A\) ist eine Dreiecksmatrix (Alle Einträge unter der Diagonale sind Null). Für solche Matrizen ist die Determinante das Produkt der Diagonaleinträge:</p><div class="editor-indent" style="margin-left: 30px;"><p>\(\det(A)=(1+{@b@}i)(-i)({@a@}+i)={@det@}\)</p><p><br></p></div><span style=""><span style=""><strong>(b) </strong>Der Rang der Matrix ist voll, also \(\text{rg}(A)=3\). Das lässt sich entweder direkt aus der Matrix ablesen, da sie keine Gauß-Umformung mehr benötigt oder man argumentiert mit \(\det(A)\neq 0\). Die Spaltenvektoren bilden bei vollem Rang immer auch eine Basis, da sie damit linear unabhängig sind.</span></span><p><span style=""><span style=""><br></span></span></p><p><span style=""><span style=""><br></span></span></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[a: -2-rand(3)
b: 2+rand(3)
A: matrix([1+b*%i,%i,-1],[0,-%i, 2+3*%i],[0,0,a+%i])
det: expand((1+b*%i)*(-%i)*(a+%i))

a1: 3
a2: 1
al: [[1, true, "eine"], [2, false, "keine"]]]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>Rang</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>(</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>det</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>a1</tans>
      <boxsize>2</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>dropdown</type>
      <tans>al</tans>
      <boxsize>2</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>det</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>a1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt3</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>a2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt3-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt3-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>TE:1:Lineare Algebra</text>
</tag>
      <tag><text>TE:2:Matrizen</text>
</tag>
      <tag><text>TE:3:Rang</text>
</tag>
      <tag><text>TE:3:Basis</text>
</tag>
      <tag><text>TE:3:Determinante</text>
</tag>
      <tag><text>src:F07-INT</text>
</tag>
      <tag><text>Bloom:3</text>
</tag>
      <tag><text>Maier:1:2</text>
</tag>
      <tag><text>Maier:2:2</text>
</tag>
      <tag><text>Maier:3:2</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>praxiserprobt</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:TaggingGeprueft</text>
</tag>
      <tag><text>qs:importIliasGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 809378  -->
  <question type="stack">
    <name>
      <text>Lineare Algebra: Determinante 3x3</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[Bestimmen Sie die Determinante der Matrix.<p><br></p><p></p><div class="editor-indent" style="margin-left: 30px;"><p style=""></p><p>\( A= \) {@A1@}</p><p></p></div><p style=""><br></p><p>\( \det(A)= \) [[input:ans1]] [[validation:ans1]][[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<p><b>Musterlösung:</b></p><p><b><br></b></p><p><span>\(\det(A)=\det\left({@A1@}\right)\)</span></p><p><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \(=({@a@}-9-12)-({@b@}-1+36)\)</span></p><p><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(Regel von Sarrus, gilt nur für 3x3 Matrizen)</span></p><p><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \(={@c@}\)</span></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text>A:rand_with_step(-10,3,1);
A1:matrix([-2,3,-1],[2,1,-3],[1,6,A]);

a:-2*A
b: 6*A
c: (a-9-12)-(b-1+36)</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>1</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>(-8)*(A)-56</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>(-8)*(A)-56</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>TE:1:Lineare Algebra</text>
</tag>
      <tag><text>TE:2:Matrizen</text>
</tag>
      <tag><text>TE:3:Determinante</text>
</tag>
      <tag><text>src:F07-INT</text>
</tag>
      <tag><text>Bloom:3</text>
</tag>
      <tag><text>Maier:1:2</text>
</tag>
      <tag><text>Maier:2:2</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>praxiserprobt</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:TaggingGeprueft</text>
</tag>
      <tag><text>qs:importIliasGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 809375  -->
  <question type="stack">
    <name>
      <text>Lineare Algebra: Determinante 4x4</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[Bestimmen Sie die Determinante der folgenden Matrix:<br><p><br></p><p></p><p></p><div class="editor-indent" style="margin-left: 30px;"><p>{@(A)@} = {@A1@}</p></div><p><br></p><p>\( \det(A)= \) [[input:ans1]] [[validation:ans1]][[feedback:prt1]]</p><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<h4><b>Lösung</b></h4><p><br></p><p>\(\det(A)=\det\left({@A1@}\right)\)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \(=-({@C@}) \cdot \det\left({@a1@}\right)-\det\left({@a2@}\right)\)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (Laplace Entwicklung nach der zweiten Zeile)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \(=-({@C@})\Big(({@a3@}-5)-({@a4@}-4)\Big)-\Big((-15+48)-({@a5@}-30)\Big)\)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (Regel von Sarrus)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \(={@a6@}\)</p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text>C:rand_with_step(-3,5,1);
B:rand_with_step(-3,5,1);
z2: if(notequal(B,0)) then 1 else 0;
E1:B*z2;
D:(-E1)*C-6*E1+C+33;
A1:matrix([3,-1,4,1],[C,0,0,-1],[6,-1,E1,0],[0,-2,5,1]);

a1: matrix([-1,4,1],[-1,E1,0],[-2,5,1])
a2: matrix([3,-1,4],[6,-1,E1],[0,-2,5])
a3: -E1
a4: -2*E1
a5: -6*E1
a6: -C*((a3-5)-(a4-4))-((-15-48)-(a5-30))</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>1</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>(</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>D</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>D</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>TE:1:Lineare Algebra</text>
</tag>
      <tag><text>TE:2:Matrizen</text>
</tag>
      <tag><text>TE:3:Determinante</text>
</tag>
      <tag><text>src:F07-INT</text>
</tag>
      <tag><text>Bloom:3</text>
</tag>
      <tag><text>Maier:1:2</text>
</tag>
      <tag><text>Maier:2:2</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>praxiserprobt</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:TaggingGeprueft</text>
</tag>
      <tag><text>qs:importIliasGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 809379  -->
  <question type="stack">
    <name>
      <text>Lineare Algebra: Determinante a</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p style="">Bestimmen Sie den Parameter \(a\), so&nbsp;dass die Determinante der Matrix \(A\)&nbsp;Null ergibt.</p><p style=""><br></p><div class="editor-indent" style="margin-left: 30px;"><p>\( {@(A)@} =\)&nbsp; {@A1@}</p><p><br></p></div><p>\( a= \) [[input:ans1]] [[validation:ans1]][[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<h4><b>Lösung</b></h4><p><b><br></b></p><p><span>\(\det(A)=\det\left({@A1@}\right)\)</span></p><p><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\(=(-2+({@a1@}))-(-2+{@a2@})\)</span></p><p><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(Regel von Sarrus)</span></p><p><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\(={@a3@}\)</span></p><p><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\(=0\)</span></p><p><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(Nach Aufgabenstellung)</span></p><p><span><br></span></p><p><span>\(\Leftrightarrow \ \ a={@a4@}\)</span></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text>A2:rand([-5,-4,-3,-2,-1,1,2,3,4,5])

A1:matrix([1,0,-1],[a,1,A2],[2,A2,-2]);

a1: -A2*a
a2: A2^2
a3: (-2+a1)-(-2+a2)
a4: -A2</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>n</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>(</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>(-1)*(A2)</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>(-1)*(A2)</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>TE:1:Lineare Algebra</text>
</tag>
      <tag><text>TE:2:Matrizen</text>
</tag>
      <tag><text>TE:3:Gleichung</text>
</tag>
      <tag><text>TE:3:Determinante</text>
</tag>
      <tag><text>src:F07-INT</text>
</tag>
      <tag><text>Bloom:3</text>
</tag>
      <tag><text>Maier:1:2</text>
</tag>
      <tag><text>Maier:2:2</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>praxiserprobt</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:TaggingGeprueft</text>
</tag>
      <tag><text>qs:importIliasGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 809380  -->
  <question type="stack">
    <name>
      <text>Lineare Algebra: Matrizenrechnung</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben seien die Matrizen<br></p><p><br></p><p></p><p></p>\( A={@A1@} , B={@B1@} \)&nbsp;sowie der Vektor&nbsp; \( c = {@C1@} \).<p><br></p><p>Bestimmen Sie<br></p><p><b>(a)</b> \(A\cdot B =\)</p><p></p><div class="editor-indent" style="margin-left: 30px;"><p></p><p>[[input:ans1]] [[validation:ans1]][[feedback:prt1]]</p><p><br></p><p></p></div><p></p><p><b>(b)</b> die Lösung des linearen Gleichungssystems&nbsp;</p><div class="editor-indent" style="margin-left: 30px;"><p>\( A\cdot x=c \)</p></div><div class="editor-indent" style="margin-left: 30px;"><div class="editor-indent" style="margin-left: 30px;"><p><br></p><p></p></div></div><p></p><p>&nbsp; &nbsp; &nbsp;\( x_1=\)&nbsp;[[input:ans2]][[validation:ans2]][[feedback:prt2]]</p><p>&nbsp; &nbsp; &nbsp;\( x_2= \)&nbsp;[[input:ans3]][[validation:ans3]][[feedback:prt3]]</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<h4><b>Lösung</b></h4><p><b><br></b></p><p><span><b style="font-weight: bold;">(a)</b>&nbsp;\(A\cdot B = {@A1@} \cdot {@B1@}={@erg1@}\)<br></span></p><p><span><br></span></p><p><span></span></p><p><b>(b)</b>&nbsp;die Lösung des linearen Gleichungssystems&nbsp;</p><div><p>&nbsp; &nbsp; \( A\cdot x=c\)</p><p><br></p><p>&nbsp; &nbsp;Mit Gauss:</p><p>&nbsp; &nbsp;\(\left[\begin{array}{cc|c} 2 &amp; -3 &amp; {@a1@} \\ 1 &amp; 4 &amp; 2 \end{array}\right] \xrightarrow{\frac{I}{2}} \left[ \begin{array}{cc|c}1 &amp; -\frac{3}{2} &amp; {@c@} \\ 1 &amp; 4 &amp; 2 \end{array} \right] \xrightarrow{II-I} \left[ \begin{array}{cc|c} 1 &amp; -\frac{3}{2} &amp; {@c@} \\ 0 &amp; \frac{11}{2} &amp; {@a@} \end{array}\right]\)</p><p><br></p><p>&nbsp; &nbsp;<b>II:</b>&nbsp; &nbsp; \(\frac{11}{2} x_{2}={@a@}\)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\(\Leftrightarrow\)&nbsp; &nbsp;\(x_{2}={@b@}\)</p><p>&nbsp; &nbsp;<b>I:</b>&nbsp; &nbsp; &nbsp;\(x_1 - \frac{3}{2}x_2={@c@}\)&nbsp; &nbsp; &nbsp; &nbsp; ,\(x_2\) einsetzen:</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \(x_{1}+{@d@}={@c@}\)&nbsp; &nbsp; &nbsp;\(\Leftrightarrow\)&nbsp; &nbsp;\(x_{1}={@e@}\)</p></div><p></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2019052700</text>
    </stackversion>
    <questionvariables>
      <text>a1:2+rand(50)
b1:2+rand(50)
A1:matrix([2,-3],[1,4]);
B1:matrix([b1,1,2],[6,0,1]);
C1:matrix([a1],[2]);

erg1:A1.B1;

A: matrix([2,-3,a1],[1,4,2])
B: matrix([1,(-3/2),(a1/2)],[1,4,2])
C: matrix([1,(-3/2),(a1/2)],[0,(11/2),2-(a1/2)])
a: 2-a1/2
b: 4/11-a1/11
c: a1/2
d: -6/11+3*a1/22
e:c-d</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>n</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>matrix</type>
      <tans>erg1</tans>
      <boxsize>3</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>6/11+4/11*a1</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>4/11-1/11*a1</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>erg1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>F1:6/11+4/11*a1</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>NumRelative</answertest>
        <sans>ans2</sans>
        <tans>F1</tans>
        <testoptions>0.05</testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt3</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>F2:4/11-1/11*a1</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>NumRelative</answertest>
        <sans>ans3</sans>
        <tans>F2</tans>
        <testoptions>0.05</testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt3-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt3-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>TE:1:Lineare Algebra</text>
</tag>
      <tag><text>TE:2:Matrizen</text>
</tag>
      <tag><text>TE:3:Multiplikation</text>
</tag>
      <tag><text>te:3:Lösungsmenge</text>
</tag>
      <tag><text>TE:3:Lineare Gleichungssysteme</text>
</tag>
      <tag><text>src:F07-INT</text>
</tag>
      <tag><text>Bloom:3</text>
</tag>
      <tag><text>Maier:1:2</text>
</tag>
      <tag><text>Maier:2:2</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>praxiserprobt</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:TaggingGeprueft</text>
</tag>
      <tag><text>qs:importIliasGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 809376  -->
  <question type="stack">
    <name>
      <text>Lineare Gleichungssysteme: Lösbarkeit</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><b>(a)</b> Bestimmen Sie für&nbsp;</p><div class="editor-indent" style="margin-left: 30px;"><p><span>{@(B)@} = {@B1@} &nbsp; &nbsp;und &nbsp; &nbsp;\(b\) ={@b1@}</span></p><p><span>die Lösung des linearen Gleichungssystems</span></p><p><span>&nbsp;\( B\cdot x=b\).</span></p><p><span>Das Gleichungssystem besitzt&nbsp;</span></p><p>[[input:ans1]] [[validation:ans1]][[feedback:prt1]]</p></div><p><br><span></span></p><p><b>(b)</b> Bestimmen Sie für<br></p><p></p><div class="editor-indent" style="margin-left: 30px;"><p>{@(C)@} = {@C1@} &nbsp; &nbsp;und &nbsp; &nbsp;\(b\) ={@b1@}</p><p>die Lösung des linearen Gleichungssystems&nbsp;</p><p>&nbsp;\( C\cdot x= b\).</p><p>Das Gleichungssystem besitzt</p><p>[[input:ans2]] [[validation:ans2]][[feedback:prt2]]&nbsp;</p></div><p></p><p><br></p><p><b>(c)</b> Bestimmen Sie für<br></p><p></p><div class="editor-indent" style="margin-left: 30px;"><p>{@(D)@} = {@D1@} &nbsp; &nbsp;und &nbsp; &nbsp;\(b\) ={@b1@}</p><p>die Lösung des linearen Gleichungssystems&nbsp;</p><p>&nbsp;\( D\cdot x = b\).</p><p>Das Gleichungssystem besitzt</p><p>[[input:ans3]] [[validation:ans3]][[feedback:prt3]]</p></div><p></p><p></p><p></p><p></p><p></p><p><br></p><p><br></p><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<h4><strong>Lösung&nbsp;</strong></h4><p><br></p><p><strong>(a)</strong><br></p><span style="">\(\left(\begin{array}{ccc|c} {@A@} &amp; {@B2@}&amp; {@C2@} &amp; 1\\ 4&amp; 5 &amp; 6 &amp; 1 \\{@D2@} &amp; {@E@} &amp; {@F@} &amp;2 \end{array}\right) \xrightarrow{{@A@}II-4I, {@A@}III-{@D2@}I}\left(\begin{array}{ccc|c} {@A@} &amp; {@B2@}&amp; {@C2@} &amp; 1\\ 0&amp; {@5*A-B2*4@} &amp; {@6*A-4*C2@} &amp; {@A-4@} \\0&amp; {@E*A-B2*D2@} &amp; {@F*A-D2*C2@} &amp; {@2*A-D2@} \end{array}\right)\xrightarrow{{@5*A-B2*4@}III-({@E*A-B2*D2@})II}\left(\begin{array}{ccc|c} {@A@} &amp; {@B2@}&amp; {@C2@} &amp; 1\\ 0&amp; {@5*A-B2*4@} &amp; {@6*A-4*C2@} &amp; {@A-4@} \\0&amp; 0 &amp; {@(F*A-D2*C2)*(5*A-B2*4)-(E*A-B2*D2)*(6*A-4*C2)@} &amp; {@(5*A-B2*4)*(2*A-D2)-(E*A-B2*D2)*(A-4)@} \end{array}\right)\)&nbsp;</span><br><div class="editor-indent" style="margin-left: 30px;"><p><br></p><p>Es gibt eine freie Variable (beispielsweise \(x_3\)).</p><p>Daraus folgt: Das LGS besitzt unendlich viele Lösungen.</p></div><p><br></p><p></p><p><strong>(b)</strong><br></p><span style="">\(\left(\begin{array}{ccc|c} {@F@} &amp; {@D2@}&amp; {@C2@} &amp; 1\\ 4&amp; 5 &amp; 6 &amp; 1 \\{@B2@} &amp; {@E@} &amp; {@A@} &amp;2 \end{array}\right) \xrightarrow{{@F@}II-4I, {@F@}III-{@B2@}I}\left(\begin{array}{ccc|c} {@F@} &amp; {@D2@}&amp; {@C2@} &amp; 1\\ 0&amp; {@5*F-D2*4@} &amp; {@6*F-4*C2@} &amp; {@F-4@} \\0&amp; {@E*F-D2*B2@} &amp; {@F*A-B2*C2@} &amp; {@2*F-B2@} \end{array}\right)\xrightarrow{{@5*F-D2*4@}III-({@E*F-B2*D2@})II}\left(\begin{array}{ccc|c} {@F@} &amp; {@D2@}&amp; {@C2@} &amp; 1\\ 0&amp; {@5*F-D2*4@} &amp; {@6*F-4*C2@} &amp; {@F-4@} \\0&amp; 0 &amp; {@(F*A-B2*C2)*(5*F-D2*4)-(E*F-B2*D2)*(6*F-4*C2)@} &amp; {@(5*F-D2*4)*(2*F-B2)-(E*F-B2*D2)*(F-4)@} \end{array}\right)\)&nbsp;</span><br><div class="editor-indent" style="margin-left: 30px;"><br></div><div class="editor-indent" style="margin-left: 30px;"><span>\(x_1,x_2,x_3\) können eindeutig bestimmt werden.</span><br><p>Daraus folgt: Das LGS besitzt genau eine Lösung.</p></div><p></p><p></p><p><br></p><p></p><p><strong>(c)</strong><br></p><span style="">\(\left(\begin{array}{ccc|c} {@F3@} &amp; {@E3@}&amp; {@D3@} &amp; 1\\ 6&amp; 5 &amp; 4 &amp; 1 \\{@C3@} &amp; {@B3@} &amp; {@A3@} &amp;2 \end{array}\right) \xrightarrow{{@F3@}II-6I, {@F3@}III-{@C3@}I}\left(\begin{array}{ccc|c} {@F3@} &amp; {@E3@}&amp; {@D3@} &amp; 1\\ 0&amp; {@5*F3-E3*6@} &amp; {@4*F3-6*D3@} &amp; {@F3-6@} \\0&amp; {@B3*F3-E3*C3@} &amp; {@F3*A3-C3*D3@} &amp; {@2*F3-C3@} \end{array}\right)\xrightarrow{{@5*F3-E3*6@}III-({@B3*F3-C3*E3@})II}\left(\begin{array}{ccc|c} {@F3@} &amp; {@E3@}&amp; {@D3@} &amp; 1\\ 0&amp; {@5*F3-E3*6@} &amp; {@4*F3-6*D3@} &amp; {@F3-6@} \\0&amp; 0 &amp; {@(F3*A3-C3*D3)*(5*F3-E3*6)-(B3*F3-C3*E3)*(4*F3-6*D3)@} &amp; {@(5*F3-E3*6)*(2*F3-C3)-(B3*F3-C3*E3)*(F3-6)@} \end{array}\right)\)&nbsp;</span><br><div class="editor-indent" style="margin-left: 30px;"><p></p><p><br></p><p><strong>III:</strong>&nbsp;\(0x_1+0x_2+0x_3={@(5*F3-E3*6)*(2*F3-C3)-(B3*F3-C3*E3)*(F3-6)@}\) ist für kein \(x_1,x_2,x_3\) erfüllt.</p><p>Daraus folgt: Das LGS besitzt keine Lösung.</p></div>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[A:rand([1,2,3,5])
B2:A+1;
C2:A+2;
D2:2*A-3;
E:2*(A+1)-3;
F:2*(A+2)-3;

B1:matrix([A,B2,C2],[4,5,6],[D2,E,F]);
b1:matrix([1],[1],[2]);

C1:matrix([F,D2,C2],[4,5,6],[B2,E,A]);
A3:4+rand(5);
B3:A3+1;
C3:A3+2;
D3:2*A3-3;
E3:2*(A3+1)-3;
F3:2*(A3+2)-3;
D1:matrix([F3,E3,D3],[6,5,4],[C3,B3,A3]);

ta : [[1, false, "genau eine Loesung"], [2, false, "keine Loesung"], [3, true, "unendlich viele Loesungen"]]
ta:random_permutation(ta);
tb: [[1, true, "genau eine Loesung"], [2, false, "keine Loesung"], [3, false, "unendlich viele Loesungen"]]
tb:random_permutation(tb);
tc: [[1, false, "genau eine Loesung"], [2, true, "keine Loesung"], [3, false, "unendlich viele Loesungen"]]
tc:random_permutation(tc);]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text><![CDATA[<p></p><h4><br></h4><p></p>]]></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>n</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>radio</type>
      <tans>ta</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options>latex</options>
    </input>
    <input>
      <name>ans2</name>
      <type>radio</type>
      <tans>tb</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options>latex</options>
    </input>
    <input>
      <name>ans3</name>
      <type>radio</type>
      <tans>tc</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options>latex</options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt3</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt3-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt3-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>TE:1:Lineare Algebra</text>
</tag>
      <tag><text>TE:2:Lineare Gleichungssysteme</text>
</tag>
      <tag><text>TE:3:Lösbarkeit</text>
</tag>
      <tag><text>src:F07-INT</text>
</tag>
      <tag><text>Bloom:2</text>
</tag>
      <tag><text>Maier:1:3</text>
</tag>
      <tag><text>Maier:2:2</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>praxiserprobt</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:TaggingGeprueft</text>
</tag>
      <tag><text>qs:importIliasGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 0  -->
  <question type="category">
    <category>
      <text>$course$/top/Blatt12</text>
    </category>
    <info format="html">
      <text></text>
    </info>
    <idnumber></idnumber>
  </question>

<!-- question: 811149  -->
  <question type="multichoice">
    <name>
      <text>linaear unabh</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Die Vektoren $$v_1,v_2,v_3 \in \mathbb{R}^3$$ sind genau dann linear unabhängig, wenn das lineare Gleichungssystem $$x_1 v_1 + x_2 v_2 + x_3v_3 = 0$$</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<h4><b>Lösung</b></h4><p><b><br></b></p><p></p><ul><li><span>unendlich viele Lösungen&nbsp; \(\Leftrightarrow\)&nbsp; &nbsp;\(v_1,v_2,v_3\) linear abhängig</span></li></ul><div class="editor-indent" style="margin-left: 30px;"><p></p></div><ul><li><span style="">nur die triviale Lösung&nbsp; \(\Leftrightarrow\)&nbsp; &nbsp;\(v_1,v_2,v_3\) linear unabhängig.&nbsp;</span></li></ul><p>&nbsp; &nbsp; &nbsp; (triviale Lösung: \(x_1=x_2=x_3=0\))</p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text></text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text></text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text></text>
    </incorrectfeedback>
    <answer fraction="100" format="html">
      <text><![CDATA[<p>... nur die triviale Lösung hat.</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>... unendlich viele Lösungen hat.</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>... ein Parallelogramm ist.</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>... einen rechten Winkel bildet.</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>TE:1:Lineare Algebra</text>
</tag>
      <tag><text>TE:2:Lineare Unabhängigkeit</text>
</tag>
      <tag><text>TE:3:Definition</text>
</tag>
      <tag><text>src:F07-INT</text>
</tag>
      <tag><text>Bloom:1</text>
</tag>
      <tag><text>Maier:1:1</text>
</tag>
      <tag><text>Maier:2:2</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>praxiserprobt</text>
</tag>
      <tag><text>ILIAS-Import-Error</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:TaggingGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 811148  -->
  <question type="multichoice">
    <name>
      <text>Lineare Algebra: orthogonale Matrix 2</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<h4><span style="font-size: 14px; font-weight: normal;">Ergänzen Sie \(A\) zu einer orthogonalen \(2 \times 2\) Matrix:</span><br></h4><div class="editor-indent" style="margin-left: 30px;">$$A =\begin{pmatrix} \frac{\sqrt{6}}{3} &amp; \frac{1}{\sqrt 3}\\ \frac{\sqrt 3}{3} &amp; a \end{pmatrix}$$</div><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text></text>
    </correctfeedback>
    <partiallycorrectfeedback format="moodle_auto_format">
      <text>1</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text></text>
    </incorrectfeedback>
    <answer fraction="100" format="moodle_auto_format">
      <text>\(a = -\sqrt{\frac{2}{3}}\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>\( a= -\frac{1}{\sqrt 2}\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>\(a =  -\frac{3}{\sqrt 2}\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>\(a = 1\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>\(a = \sqrt{6}\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>TE:1:Lineare Algebra</text>
</tag>
      <tag><text>TE:2:Matrizen</text>
</tag>
      <tag><text>TE:3:Orthogonal</text>
</tag>
      <tag><text>src:F07-INT</text>
</tag>
      <tag><text>Bloom:3</text>
</tag>
      <tag><text>Maier:1:2</text>
</tag>
      <tag><text>Maier:2:2</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>praxiserprobt</text>
</tag>
      <tag><text>ILIAS-Import-Error</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:TaggingGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 811147  -->
  <question type="multichoice">
    <name>
      <text>Lineare Algebra: Orthogonale Matrizen</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<h4><span style="font-size: 14px; font-weight: normal;">Welche der folgenden Aussagen sind wahr?</span><br></h4>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<h4><span>Lösung</span></h4><p><span><br></span></p><u>Orthogonale Matrizen sind regulär.</u><div class="editor-indent" style="margin-left: 30px;"><p><span>Ja, nach der Definition von orthogonalen Matrizen müssen diese immer regulär sein. Denn es existiert eine inverse Matrix mit \(A^T=A^{-1}\)</span></p><p><span><br></span></p></div><u><span style="">Orthogonale Matrizen sind symmetrisch.</span><br></u><div class="editor-indent" style="margin-left: 30px;"><p><span style=""><span>N</span>ein, da zum Beispiel \(A= \begin{pmatrix} 1 \ \ 1 \\ 1 \ \ 0 \end{pmatrix}\) symmetrisch ist (\(A=A^{T}\))</span></p><p><span style=""></span></p><p>Aber: \(A \cdot A^T= A^2=\begin{pmatrix} 2 \ \ 1 \\ 1 \ \ 0 \end{pmatrix} \neq E\)</p><p></p><p><span style=""></span></p><p>und damit ist \(A\) nicht orthogonal.</p><p><br></p><p></p></div><p><span style=""><u>Wenn \(A\) orthogonal ist, so ist auch \(2A\) orthogonal.</u><br></span></p><div class="editor-indent" style="margin-left: 30px;"><p><span style="">Nein, da \((2A)\cdot (2A)^T=4\cdot (A \cdot A^T)=4 \cdot E \neq E\)</span></p><p><span style=""><br></span></p></div><p><span style=""><u>Wenn \(A\) orthogonal ist, so ist auch \(-A\) orthogonal.</u><br></span></p><div class="editor-indent" style="margin-left: 30px;"><p><span style="">Ja, da&nbsp;\((-A)\cdot (-A)^T=(-1)^2 \cdot (A \cdot A^T)=E\)</span></p><p><span style=""><br></span></p></div><p><span style=""><u>Wenn \(A\) eine orthogonale Matrix ist und die Vektoren \(v\) und \(w\) orthogonal sind, so sind auch \(Av\) und \(Aw\) orthogonal.</u><br></span></p><div class="editor-indent" style="margin-left: 30px;"><p><span style="">Ja, da \((Av)\cdot (Aw)=(Av)^T \cdot (Aw)=v^T \cdot A^T \cdot A \cdot w= v^T \cdot w=v \cdot w =0\).&nbsp;</span></p><p><span style="">(\(A\), \(w\) und \(v\) sind orthogonal.)</span></p><p><span style=""><br></span></p></div><p><span style=""><u>Diagonalmatrizen sind stets orthogonal.</u><br></span></p><p><span style=""></span></p><div class="editor-indent" style="margin-left: 30px;"><p>Nein, da zum Beispiel für \(A= \begin{pmatrix} 2 \ \ 0 \\ 0 \ \ 2 \end{pmatrix}\) gilt:</p></div><p></p><div class="editor-indent" style="margin-left: 30px;"><p><span style=""></span></p><p>\(A \cdot A^T=A^2= \begin{pmatrix} 4 \ \ 0 \\ 0 \ \ 4 \end{pmatrix} \neq E\)</p><p></p></div><p><span style=""><u><br></u></span></p><p><span style=""><u>Die Determinante einer reellen orthogonalen Matrix ist \(1\) oder \(-1\).</u><br></span></p><div class="editor-indent" style="margin-left: 30px;"><p><span style="">Ja, da gilt</span></p><p><span style="">\(\det(A)^2=\det(A^2)=\det(A \cdot A)=\det(A \cdot A^{T})=\det(A \cdot A^{-1})=\det(E)=1\)</span></p><p><span style="">und damit \(\det(A)= \pm 1\) sein muss.</span></p><p><span style=""><br></span></p><p><span style=""><br></span></p></div>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>false</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Die Antwort ist richtig.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Die Antwort ist teilweise richtig.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Die Antwort ist falsch.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="25" format="html">
      <text><![CDATA[<p>Orthogonale Matrizen sind regulär.<br></p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-33.33333" format="html">
      <text><![CDATA[<p>Orthogonale Matrizen sind symmetrisch.<br></p>]]></text>
      <feedback format="html">
        <text><![CDATA[<br>]]></text>
      </feedback>
    </answer>
    <answer fraction="-33.33333" format="html">
      <text><![CDATA[<p>Wenn \(A\) orthogonal ist, so ist auch \(2A\) orthogonal.<br></p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="25" format="html">
      <text><![CDATA[<p>Wenn \(A\) orthogonal ist, so ist auch \(-A\) orthogonal.<br></p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="25" format="html">
      <text><![CDATA[<p>Wenn \(A\) eine orthogonale Matrix ist und die Vektoren \(v\) und \(w\) orthogonal sind, so sind auch \(Av\) und \(Aw\) orthogonal.<br></p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-33.33333" format="html">
      <text><![CDATA[<p>Diagonalmatrizen sind stets orthogonal.<br></p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p><br></p><p>\(A \cdot A^T=A^2= \begin{pmatrix 4 \ 0 \\ 0 \ 4 \end{pmatrix} \neq \mathbb{1}\)</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="25" format="html">
      <text><![CDATA[<p>Die Determinante einer reellen orthogonalen Matrix ist \(1\) oder \(-1\).<br></p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>TE:1:Lineare Algebra</text>
</tag>
      <tag><text>TE:2:Matrizen</text>
</tag>
      <tag><text>TE:3:Regularität</text>
</tag>
      <tag><text>TE:3:Determinante</text>
</tag>
      <tag><text>TE:3:Orthogonal</text>
</tag>
      <tag><text>src:F07-INT</text>
</tag>
      <tag><text>Bloom:2</text>
</tag>
      <tag><text>Maier:1:3</text>
</tag>
      <tag><text>Maier:2:3</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>maier:4:2</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>praxiserprobt</text>
</tag>
      <tag><text>ILIAS-Import-Error</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:TaggingGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 811151  -->
  <question type="multichoice">
    <name>
      <text>Lineare Gleichungssysteme: Lösbarkeit</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[Sei \[A = \begin{pmatrix} 1 &amp; 2 &amp; 2\\ -2 &amp; 5 &amp; 1\\ 4 &amp; 8 &amp; 8 \end{pmatrix}\] und \[b= \begin{pmatrix} 1\\ 1\\ 4\end{pmatrix}.\] <br><br>Was können Sie über die Lösungsmenge \(\mathbb{L}\) des LGS \(Ax=b\) aussagen?<br>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<h4><strong>Lösung</strong></h4><p><br></p><p>Mit Gauss:</p><p><br></p><p>\(\left(\begin{array}{ccc|c} 1 &amp; 2 &amp; 2 &amp; 1 \\ -2 &amp; 5 &amp; 1 &amp; 1 \\ 4 &amp; 8 &amp; 8 &amp; 4 \end{array}\right) \xrightarrow{II+2I, III-4I} \left(\begin{array}{ccc|c} 1 &amp; 2 &amp; 2 &amp; 1 \\ 0 &amp; 9 &amp; 5 &amp; 3 \\ 0 &amp; 0 &amp; 0 &amp; 0 \end{array}\right)\)<br></p><p><br></p><p>Daraus folgt, dass es eine freie Variable gibt und somit unendlich viele Lösungen existieren.</p><p><br></p><p><br></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text></text>
    </correctfeedback>
    <partiallycorrectfeedback format="moodle_auto_format">
      <text>1</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text></text>
    </incorrectfeedback>
    <answer fraction="0" format="moodle_auto_format">
      <text>Es existiert eine eindeutige Lösung.</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>Es existieren undendlich viele Lösungen.</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>Es existiert keine Lösung.</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>TE:1:Lineare Algebra</text>
</tag>
      <tag><text>TE:2:Lineare Gleichungssysteme</text>
</tag>
      <tag><text>TE:3:Lösbarkeit</text>
</tag>
      <tag><text>src:F07-INT</text>
</tag>
      <tag><text>Bloom:2</text>
</tag>
      <tag><text>Maier:1:3</text>
</tag>
      <tag><text>Maier:2:2</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>praxiserprobt</text>
</tag>
      <tag><text>ILIAS-Import-Error</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:TaggingGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 811150  -->
  <question type="stack">
    <name>
      <text>Lineare Gleichungssysteme: Lösbarkeit</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><b>(a)</b> Bestimmen Sie für&nbsp;</p><div class="editor-indent" style="margin-left: 30px;"><p><span>{@(B)@} = {@B1@} &nbsp; &nbsp;und &nbsp; &nbsp;\(b\) ={@b1@}</span></p><p><span>die Lösung des linearen Gleichungssystems</span></p><p><span>&nbsp;\( B\cdot x=b\).</span></p><p><span>Das Gleichungssystem besitzt&nbsp;</span></p><p>[[input:ans1]] [[validation:ans1]][[feedback:prt1]]</p></div><p><br><span></span></p><p><b>(b)</b> Bestimmen Sie für<br></p><p></p><div class="editor-indent" style="margin-left: 30px;"><p>{@(C)@} = {@C1@} &nbsp; &nbsp;und &nbsp; &nbsp;\(b\) ={@b1@}</p><p>die Lösung des linearen Gleichungssystems&nbsp;</p><p>&nbsp;\( C\cdot x= b\).</p><p>Das Gleichungssystem besitzt</p><p>[[input:ans2]] [[validation:ans2]][[feedback:prt2]]&nbsp;</p></div><p></p><p><br></p><p><b>(c)</b> Bestimmen Sie für<br></p><p></p><div class="editor-indent" style="margin-left: 30px;"><p>{@(D)@} = {@D1@} &nbsp; &nbsp;und &nbsp; &nbsp;\(b\) ={@b1@}</p><p>die Lösung des linearen Gleichungssystems&nbsp;</p><p>&nbsp;\( D\cdot x = b\).</p><p>Das Gleichungssystem besitzt</p><p>[[input:ans3]] [[validation:ans3]][[feedback:prt3]]</p></div><p></p><p></p><p></p><p></p><p></p><p><br></p><p><br></p><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<h4><strong>Lösung&nbsp;</strong></h4><p><br></p><p><strong>(a)</strong><br></p><span style="">\(\left(\begin{array}{ccc|c} {@A@} &amp; {@B2@}&amp; {@C2@} &amp; 1\\ 4&amp; 5 &amp; 6 &amp; 1 \\{@D2@} &amp; {@E@} &amp; {@F@} &amp;2 \end{array}\right) \xrightarrow{{@A@}II-4I, {@A@}III-{@D2@}I}\left(\begin{array}{ccc|c} {@A@} &amp; {@B2@}&amp; {@C2@} &amp; 1\\ 0&amp; {@5*A-B2*4@} &amp; {@6*A-4*C2@} &amp; {@A-4@} \\0&amp; {@E*A-B2*D2@} &amp; {@F*A-D2*C2@} &amp; {@2*A-D2@} \end{array}\right)\xrightarrow{{@5*A-B2*4@}III-({@E*A-B2*D2@})II}\left(\begin{array}{ccc|c} {@A@} &amp; {@B2@}&amp; {@C2@} &amp; 1\\ 0&amp; {@5*A-B2*4@} &amp; {@6*A-4*C2@} &amp; {@A-4@} \\0&amp; 0 &amp; {@(F*A-D2*C2)*(5*A-B2*4)-(E*A-B2*D2)*(6*A-4*C2)@} &amp; {@(5*A-B2*4)*(2*A-D2)-(E*A-B2*D2)*(A-4)@} \end{array}\right)\)&nbsp;</span><br><div class="editor-indent" style="margin-left: 30px;"><p><br></p><p>Es gibt eine freie Variable (beispielsweise \(x_3\)).</p><p>Daraus folgt: Das LGS besitzt unendlich viele Lösungen.</p></div><p><br></p><p></p><p><strong>(b)</strong><br></p><span style="">\(\left(\begin{array}{ccc|c} {@F@} &amp; {@D2@}&amp; {@C2@} &amp; 1\\ 4&amp; 5 &amp; 6 &amp; 1 \\{@B2@} &amp; {@E@} &amp; {@A@} &amp;2 \end{array}\right) \xrightarrow{{@F@}II-4I, {@F@}III-{@B2@}I}\left(\begin{array}{ccc|c} {@F@} &amp; {@D2@}&amp; {@C2@} &amp; 1\\ 0&amp; {@5*F-D2*4@} &amp; {@6*F-4*C2@} &amp; {@F-4@} \\0&amp; {@E*F-D2*B2@} &amp; {@F*A-B2*C2@} &amp; {@2*F-B2@} \end{array}\right)\xrightarrow{{@5*F-D2*4@}III-({@E*F-B2*D2@})II}\left(\begin{array}{ccc|c} {@F@} &amp; {@D2@}&amp; {@C2@} &amp; 1\\ 0&amp; {@5*F-D2*4@} &amp; {@6*F-4*C2@} &amp; {@F-4@} \\0&amp; 0 &amp; {@(F*A-B2*C2)*(5*F-D2*4)-(E*F-B2*D2)*(6*F-4*C2)@} &amp; {@(5*F-D2*4)*(2*F-B2)-(E*F-B2*D2)*(F-4)@} \end{array}\right)\)&nbsp;</span><br><div class="editor-indent" style="margin-left: 30px;"><br></div><div class="editor-indent" style="margin-left: 30px;"><span>\(x_1,x_2,x_3\) können eindeutig bestimmt werden.</span><br><p>Daraus folgt: Das LGS besitzt genau eine Lösung.</p></div><p></p><p></p><p><br></p><p></p><p><strong>(c)</strong><br></p><span style="">\(\left(\begin{array}{ccc|c} {@F3@} &amp; {@E3@}&amp; {@D3@} &amp; 1\\ 6&amp; 5 &amp; 4 &amp; 1 \\{@C3@} &amp; {@B3@} &amp; {@A3@} &amp;2 \end{array}\right) \xrightarrow{{@F3@}II-6I, {@F3@}III-{@C3@}I}\left(\begin{array}{ccc|c} {@F3@} &amp; {@E3@}&amp; {@D3@} &amp; 1\\ 0&amp; {@5*F3-E3*6@} &amp; {@4*F3-6*D3@} &amp; {@F3-6@} \\0&amp; {@B3*F3-E3*C3@} &amp; {@F3*A3-C3*D3@} &amp; {@2*F3-C3@} \end{array}\right)\xrightarrow{{@5*F3-E3*6@}III-({@B3*F3-C3*E3@})II}\left(\begin{array}{ccc|c} {@F3@} &amp; {@E3@}&amp; {@D3@} &amp; 1\\ 0&amp; {@5*F3-E3*6@} &amp; {@4*F3-6*D3@} &amp; {@F3-6@} \\0&amp; 0 &amp; {@(F3*A3-C3*D3)*(5*F3-E3*6)-(B3*F3-C3*E3)*(4*F3-6*D3)@} &amp; {@(5*F3-E3*6)*(2*F3-C3)-(B3*F3-C3*E3)*(F3-6)@} \end{array}\right)\)&nbsp;</span><br><div class="editor-indent" style="margin-left: 30px;"><p></p><p><br></p><p><strong>III:</strong>&nbsp;\(0x_1+0x_2+0x_3={@(5*F3-E3*6)*(2*F3-C3)-(B3*F3-C3*E3)*(F3-6)@}\) ist für kein \(x_1,x_2,x_3\) erfüllt.</p><p>Daraus folgt: Das LGS besitzt keine Lösung.</p></div>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[A:rand([1,2,3,5])
B2:A+1;
C2:A+2;
D2:2*A-3;
E:2*(A+1)-3;
F:2*(A+2)-3;

B1:matrix([A,B2,C2],[4,5,6],[D2,E,F]);
b1:matrix([1],[1],[2]);

C1:matrix([F,D2,C2],[4,5,6],[B2,E,A]);
A3:4+rand(5);
B3:A3+1;
C3:A3+2;
D3:2*A3-3;
E3:2*(A3+1)-3;
F3:2*(A3+2)-3;
D1:matrix([F3,E3,D3],[6,5,4],[C3,B3,A3]);

ta : [[1, false, "genau eine Loesung"], [2, false, "keine Loesung"], [3, true, "unendlich viele Loesungen"]]
ta:random_permutation(ta);
tb: [[1, true, "genau eine Loesung"], [2, false, "keine Loesung"], [3, false, "unendlich viele Loesungen"]]
tb:random_permutation(tb);
tc: [[1, false, "genau eine Loesung"], [2, true, "keine Loesung"], [3, false, "unendlich viele Loesungen"]]
tc:random_permutation(tc);]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text><![CDATA[<p></p><h4><br></h4><p></p>]]></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>n</text>
    </questionnote>
    <questiondescription format="html">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>radio</type>
      <tans>ta</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options>latex</options>
    </input>
    <input>
      <name>ans2</name>
      <type>radio</type>
      <tans>tb</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options>latex</options>
    </input>
    <input>
      <name>ans3</name>
      <type>radio</type>
      <tans>tc</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options>latex</options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt3</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt3-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt3-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>TE:1:Lineare Algebra</text>
</tag>
      <tag><text>TE:2:Lineare Gleichungssysteme</text>
</tag>
      <tag><text>TE:3:Lösbarkeit</text>
</tag>
      <tag><text>src:F07-INT</text>
</tag>
      <tag><text>Bloom:2</text>
</tag>
      <tag><text>Maier:1:3</text>
</tag>
      <tag><text>Maier:2:2</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>praxiserprobt</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:TaggingGeprueft</text>
</tag>
      <tag><text>qs:importIliasGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 0  -->
  <question type="category">
    <category>
      <text>$course$/top/Eigenwerete und Eigenvektoren</text>
    </category>
    <info format="html">
      <text></text>
    </info>
    <idnumber></idnumber>
  </question>

<!-- question: 815815  -->
  <question type="multichoice">
    <name>
      <text>charakt. Polynom</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[Sei $$A=\begin{pmatrix}1 &amp;3\\ -2 &amp; 0\end{pmatrix} $$<br> die Abbildungsmatrix einer linearen Abbildung \(f:\mathbb R^2 \rightarrow \mathbb R^2\).<br>Das charakteristische Polynom ist gegeben durch:<br>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<h4>Lösung</h4><p><br></p><p>\(p(\lambda)=\det(A-\lambda E)\)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\(=\det\begin{pmatrix} 1-\lambda &amp; 3 \\ -2 &amp; 0-\lambda \end{pmatrix}\)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\(=(1-\lambda)(-\lambda)+6\)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\(=\lambda^2-\lambda+6\)</p><p><br></p><p><br></p><p><br></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text></text>
    </correctfeedback>
    <partiallycorrectfeedback format="moodle_auto_format">
      <text>1</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text></text>
    </incorrectfeedback>
    <answer fraction="100" format="moodle_auto_format">
      <text>\(p(\lambda)= \lambda^2 - \lambda + 6\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>\(p(\lambda)= \lambda^2 + \lambda + 6\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>\(p(\lambda)=-\lambda +7\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>\(p(\lambda)=\lambda^2-\lambda +7\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>\(p(\lambda)=\lambda^2+\lambda +7\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>TE:1:Lineare Algebra</text>
</tag>
      <tag><text>TE:2:Matrizen</text>
</tag>
      <tag><text>TE:3:Eigenwerte</text>
</tag>
      <tag><text>TE:3:Determinante</text>
</tag>
      <tag><text>src:F07-INT</text>
</tag>
      <tag><text>Bloom:3</text>
</tag>
      <tag><text>Maier:1:2</text>
</tag>
      <tag><text>Maier:2:3</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>praxiserprobt</text>
</tag>
      <tag><text>ILIAS-Import-Error</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:TaggingGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 815816  -->
  <question type="stack">
    <name>
      <text>Lineare Algebra: Eigenvektoren 2x2</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gegeben ist die Matrix \( A \)<br></p>
<p>&nbsp;</p>
<p>\(A\,=\,{@M@} \)</p>
<p>&nbsp;</p>
<p>Die Eigenwerte von \(\,A\,\) sind \(\,\lambda_1={@l1@}\, \) und \(\,\lambda_2={@l2@} \,\).&nbsp;</p>
<p>Berechnen Sie die Eigenvektoren der Matrix \( \,A\,\)</p>
<p></p><ul><li>Ein Eigenvektor zum Eigenwert&nbsp;\(\,\lambda_1={@l1@} \,\) ist&nbsp;</li></ul><p></p><div class="editor-indent" style="margin-left: 30px;"><p>\( {v_1}=\) [[input:ans1]]&nbsp;[[validation:ans1]] [[feedback:prt1]]</p></div>
<p>&nbsp;</p>
<p></p><ul><li>Ein Eigenvektor zum Eigenwert \(\,\lambda_2={@l2@} \,\) ist&nbsp;</li></ul><p></p><div class="editor-indent" style="margin-left: 30px;"><p>\({v_2}=\) [[input:ans2]]&nbsp;[[validation:ans2]] [[feedback:prt2]]</p></div><p></p><p><br></p><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<h4><b>Lösung</b></h4><p><br></p><p>Der Eigenvektor \({v_i}\) liegt im \(\text{ker}(A-\lambda_i \cdot E)\)</p><p><br></p><p></p><ul><li>Für \(\lambda_1={@l1@}\):</li></ul><p></p><div class="editor-indent" style="margin-left: 30px;"><p>\(A-({@l1@})E={@C@}\)</p></div><div class="editor-indent" style="margin-left: 30px;"><p>Ein möglicher Eigenvektor ist \({v_1}={@loes1@}\) (oder jedes Vielfache davon).</p></div><p><br></p><p></p><p></p><ul><li>Für \(\lambda_2={@l2@}\):</li></ul><p></p><div class="editor-indent" style="margin-left: 30px;"><p>\(A-({@l2@})E={@E@}\)</p></div><div class="editor-indent" style="margin-left: 30px;"><p>Ein möglicher Eigenvektor ist \({v_2}={@loes2@}\) (oder jedes Vielfache davon).</p></div><br><p></p><p><br></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2021120900</text>
    </stackversion>
    <questionvariables>
      <text>a11: rand_with_prohib(-1,1,[0]);
a12: rand_with_prohib(-3,3,[0]);
a21: rand_with_prohib(-3,3,[0]);
a22: rand([(a21*a12-1)/a11,(1+a21*a12)/a11]);

P: matrix([a11,a12],[a21,a22]);

InvP: invert(P);

m11: rand_with_step(3,6,1);
m22: rand_with_step(-5,2,1);
m: rand_with_step(1,3,1);

A: matrix( [m11,m],[0,m22] );

M: InvP.A.P;

EV: eigenvectors(M);

l1: EV[1][1][1];
l2: EV[1][1][2];


loes1: EV[2][1][1];

loes2: EV[2][2][1];

B: matrix([(1/(a11*a22-a12*a21))*(m11*a22*a11+a21*(m*a22-a12*m22)), (1/(a11*a22-a12*a21))*(a12*m11*a22+a22*(m*a22-a12*m22))],[(1/(a11*a22-a12*a21))*(-a11*m11*a21-a21*(m*a21-a11*m22)), (1/(a11*a22-a12*a21))*(-m11*a21*a12-a22*(m*a21-a11*m22))])
C: matrix([(1/(a11*a22-a12*a21))*(m11*a22*a11+a21*(m*a22-a12*m22))-l1, (1/(a11*a22-a12*a21))*(a12*m11*a22+a22*(m*a22-a12*m22))],[(1/(a11*a22-a12*a21))*(-a11*m11*a21-a21*(m*a21-a11*m22)), (1/(a11*a22-a12*a21))*(-m11*a21*a12-a22*(m*a21-a11*m22))-l1])
a:(1/(a11*a22-a12*a21))*(m11*a22*a11+a21*(m*a22-a12*m22))-l1
b:(1/(a11*a22-a12*a21))*(-a11*m11*a21-a21*(m*a21-a11*m22))
D: matrix([(1/(a11*a22-a12*a21))*(m11*a22*a11+a21*(m*a22-a12*m22))-l1, (1/(a11*a22-a12*a21))*(a12*m11*a22+a22*(m*a22-a12*m22))],[0, a*((1/(a11*a22-a12*a21))*(-m11*a21*a12-a22*(m*a21-a11*m22))-l1)-b*((1/(a11*a22-a12*a21))*(a12*m11*a22+a22*(m*a22-a12*m22)))])
E: matrix([(1/(a11*a22-a12*a21))*(m11*a22*a11+a21*(m*a22-a12*m22))-l2, (1/(a11*a22-a12*a21))*(a12*m11*a22+a22*(m*a22-a12*m22))],[(1/(a11*a22-a12*a21))*(-a11*m11*a21-a21*(m*a21-a11*m22)), (1/(a11*a22-a12*a21))*(-m11*a21*a12-a22*(m*a21-a11*m22))-l2])
c:(1/(a11*a22-a12*a21))*(m11*a22*a11+a21*(m*a22-a12*m22))-l2
d:(1/(a11*a22-a12*a21))*(-a11*m11*a21-a21*(m*a21-a11*m22))
F: matrix([(1/(a11*a22-a12*a21))*(m11*a22*a11+a21*(m*a22-a12*m22))-l2, (1/(a11*a22-a12*a21))*(a12*m11*a22+a22*(m*a22-a12*m22))],[0, c*((1/(a11*a22-a12*a21))*(-m11*a21*a12-a22*(m*a21-a11*m22))-l2)-d*((1/(a11*a22-a12*a21))*(a12*m11*a22+a22*(m*a22-a12*m22)))])</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>\(x_1={@loes1@}, x_2={@loes2@}, Det={@PDet@}\)</text>
    </questionnote>
    <questiondescription format="moodle_auto_format">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<p>Richtige Antwort, gut gemacht!</p>]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<p>Ihre Antwort ist teilweise korrekt.</p>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<p>Falsche Antwort.</p>]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>(</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>loes1</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint>Eingabe: [x,y]</syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>loes2</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint>Eingabe: [x,y]</syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>1</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>antwort1: if length(ans1)=2 then matrix([ans1[1]],[ans1[2]]) else matrix([0],[0]);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>antwort1</sans>
        <tans>matrix([0],[0])</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>M.antwort1</sans>
        <tans>l1*antwort1</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>antwort2: if length(ans2)=2 then matrix([ans2[1]],[ans2[2]]) else matrix([0],[0]);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>antwort2</sans>
        <tans>matrix([0],[0])</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>M.antwort2</sans>
        <tans>l2*antwort2</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty>0</truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty>0</falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>1139376245</deployedseed>
    <deployedseed>241000578</deployedseed>
    <deployedseed>1342908307</deployedseed>
    <deployedseed>974339208</deployedseed>
    <deployedseed>1226168287</deployedseed>
    <deployedseed>957426053</deployedseed>
    <deployedseed>1828751649</deployedseed>
    <deployedseed>1947125647</deployedseed>
    <deployedseed>600184703</deployedseed>
    <deployedseed>1811034052</deployedseed>
    <deployedseed>1851537315</deployedseed>
    <deployedseed>359077273</deployedseed>
    <deployedseed>1779592266</deployedseed>
    <deployedseed>47211128</deployedseed>
    <deployedseed>262883724</deployedseed>
    <deployedseed>1685936390</deployedseed>
    <deployedseed>794306857</deployedseed>
    <deployedseed>61993483</deployedseed>
    <deployedseed>175064787</deployedseed>
    <deployedseed>1887266250</deployedseed>
    <deployedseed>1006575217</deployedseed>
    <deployedseed>773711109</deployedseed>
    <deployedseed>1866806584</deployedseed>
    <deployedseed>681533595</deployedseed>
    <deployedseed>761214514</deployedseed>
    <deployedseed>966854315</deployedseed>
    <deployedseed>667830092</deployedseed>
    <deployedseed>513993272</deployedseed>
    <deployedseed>271827004</deployedseed>
    <deployedseed>680864935</deployedseed>
    <deployedseed>802046733</deployedseed>
    <deployedseed>955106210</deployedseed>
    <deployedseed>320535836</deployedseed>
    <deployedseed>788922957</deployedseed>
    <deployedseed>1026824250</deployedseed>
    <deployedseed>771133417</deployedseed>
    <deployedseed>77621235</deployedseed>
    <deployedseed>1437833847</deployedseed>
    <deployedseed>627531140</deployedseed>
    <deployedseed>2101568091</deployedseed>
    <deployedseed>384661986</deployedseed>
    <deployedseed>914712274</deployedseed>
    <deployedseed>704751969</deployedseed>
    <deployedseed>2034440845</deployedseed>
    <deployedseed>1529838455</deployedseed>
    <deployedseed>1896698473</deployedseed>
    <deployedseed>1680769883</deployedseed>
    <deployedseed>1018610101</deployedseed>
    <deployedseed>603555479</deployedseed>
    <deployedseed>1236305365</deployedseed>
    <deployedseed>121887391</deployedseed>
    <deployedseed>1964685854</deployedseed>
    <deployedseed>980475701</deployedseed>
    <deployedseed>1696294575</deployedseed>
    <deployedseed>987540258</deployedseed>
    <deployedseed>860931862</deployedseed>
    <deployedseed>1874937481</deployedseed>
    <deployedseed>400307614</deployedseed>
    <deployedseed>1912961460</deployedseed>
    <deployedseed>1972352955</deployedseed>
    <deployedseed>1211875671</deployedseed>
    <deployedseed>492497260</deployedseed>
    <deployedseed>2070639259</deployedseed>
    <deployedseed>1148537694</deployedseed>
    <deployedseed>895736101</deployedseed>
    <deployedseed>1507145602</deployedseed>
    <deployedseed>1588512846</deployedseed>
    <deployedseed>972003639</deployedseed>
    <deployedseed>715626154</deployedseed>
    <deployedseed>59745266</deployedseed>
    <deployedseed>2092011603</deployedseed>
    <deployedseed>644413443</deployedseed>
    <deployedseed>205439637</deployedseed>
    <deployedseed>1504823697</deployedseed>
    <deployedseed>1844869105</deployedseed>
    <deployedseed>1202432599</deployedseed>
    <deployedseed>1411400625</deployedseed>
    <deployedseed>1704935929</deployedseed>
    <deployedseed>357184199</deployedseed>
    <deployedseed>1546756517</deployedseed>
    <deployedseed>2147256553</deployedseed>
    <deployedseed>1894164356</deployedseed>
    <deployedseed>1203426245</deployedseed>
    <deployedseed>1289974493</deployedseed>
    <deployedseed>1486838300</deployedseed>
    <deployedseed>50447606</deployedseed>
    <deployedseed>1680644188</deployedseed>
    <deployedseed>1493090397</deployedseed>
    <deployedseed>509029874</deployedseed>
    <deployedseed>586817041</deployedseed>
    <deployedseed>575364568</deployedseed>
    <deployedseed>1241453584</deployedseed>
    <deployedseed>550775487</deployedseed>
    <deployedseed>261983096</deployedseed>
    <deployedseed>803091209</deployedseed>
    <deployedseed>1620922595</deployedseed>
    <deployedseed>758769322</deployedseed>
    <deployedseed>1150250026</deployedseed>
    <deployedseed>1590896068</deployedseed>
    <deployedseed>857026708</deployedseed>
    <deployedseed>391549316</deployedseed>
    <deployedseed>250883743</deployedseed>
    <deployedseed>1020544608</deployedseed>
    <deployedseed>1816316840</deployedseed>
    <deployedseed>1084044724</deployedseed>
    <deployedseed>1393328409</deployedseed>
    <deployedseed>1642769905</deployedseed>
    <deployedseed>1780650254</deployedseed>
    <deployedseed>711601003</deployedseed>
    <deployedseed>1982153524</deployedseed>
    <tags>
      <tag><text>TE:1:Lineare Algebra</text>
</tag>
      <tag><text>TE:2:Matrizen</text>
</tag>
      <tag><text>TE:3:Eigenvektoren</text>
</tag>
      <tag><text>TE:3:Eigenwerte</text>
</tag>
      <tag><text>src:F07-INT</text>
</tag>
      <tag><text>Bloom:3</text>
</tag>
      <tag><text>Maier:1:2</text>
</tag>
      <tag><text>Maier:2:3</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>praxiserprobt</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:TaggingGeprueft</text>
</tag>
      <tag><text>qs:importIliasGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

<!-- question: 815818  -->
  <question type="stack">
    <name>
      <text>Lineare Algebra: Eigenwerte (reell)</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Bestimmen Sie für die Matrix</p><p><br></p><div class="editor-indent" style="margin-left: 30px;"><p></p><p></p><p>\({@(A)@} =\) {@A1@}</p><p></p><p></p></div><p></p><p></p><p><br></p><p><b>(a)</b> die Eigenwerte:&nbsp;</p><p>&nbsp; &nbsp; Geben Sie die Eigenwerte in aufsteigender Reihenfolge (\(\lambda_1&lt;\lambda_2&lt;\lambda_3\)) an.</p><p><br></p><div class="editor-indent" style="margin-left: 30px;"><div><p>&nbsp; &nbsp; \(\lambda_1 =\) [[input:ans1]] [[validation:ans1]][[feedback:prt1]]</p></div><div><p>&nbsp; &nbsp; \(\lambda_2 =\) [[input:ans2]] [[validation:ans2]][[feedback:prt2]]</p></div><div><p>&nbsp; &nbsp; \(\lambda_3 =\) [[input:ans3]] [[validation:ans3]][[feedback:prt3]]</p></div></div><p><br></p><b>(b)</b>&nbsp;Geben Sie Komponenten des normierten Eigenvektors \( \frac{\vec{v}}{||\vec{v}||} \) zum Eigenwert 1 an:<p><nobr><span role="math"><br></span></nobr></p><div class="editor-indent" style="margin-left: 30px;"><div><p><span id="MathJax-Element-2-Frame"><nobr><span id="MathJax-Span-56" role="math"><span id="MathJax-Span-57"><span id="MathJax-Span-58"><span id="MathJax-Span-59"><span id="MathJax-Span-60">&nbsp; </span></span></span></span></span></nobr></span>\(v_1 =\) [[input:ans4]] [[validation:ans4]][[feedback:prt4]]</p></div><div><p>&nbsp; \(v_2 =\) [[input:ans5]] [[validation:ans5]][[feedback:prt5]]</p></div><div><p><span>&nbsp; \(v_3 =\) [[input:ans6]] [[validation:ans6]][[feedback:prt6]]</span></p></div></div><p></p><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<h4><b>Lösung</b></h4><p><br></p><p><span></span></p><p style=""><b>(a)</b> Es muss gelten: \(p(\lambda)=\det(A- \lambda E)=0\)</p><p style=""><br></p><p style="">&nbsp; &nbsp;\(p(\lambda)=\det(A- \lambda E)\)</p><p style="">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\(=\det\left({@a1@}\right)\)&nbsp;<br></p><p style="">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\(=(-3-\lambda)\cdot \det\left({@a2@}\right)\)</p><p style="">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (Laplace Entwicklung nach der dritten Zeile)</p><p style="">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \(=(-3-\lambda)(2-\lambda)(1-\lambda)\)</p><p style=""><br></p><p style="">&nbsp; &nbsp;Damit der Ausdruck \(0\) wird, muss entweder 1., 2. oder 3. gelten (Linearfaktoren):</p><p style=""></p><ol style=""><li>\((-3-\lambda)=0\)&nbsp; &nbsp; &nbsp;\(\Leftrightarrow\)&nbsp; &nbsp; &nbsp; \(\lambda_1=-3\)</li><li>\((1-\lambda)=0\)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\(\Leftrightarrow\)&nbsp; &nbsp; &nbsp; \(\lambda_2=1\)</li><li>\((2-\lambda)=0\)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\(\Leftrightarrow\)&nbsp; &nbsp; &nbsp; \(\lambda_3=2\)</li></ol><br><p></p><p><span><b>(b) </b>Eigenvektor zu \(\lambda_2=1\):</span></p><p><span>&nbsp; &nbsp; </span>Berechne \(\ker(A-\lambda_2 E)\)&nbsp; &nbsp;(Das heißt: \(A-\lambda_2 E=O\))</p><p><br></p><p>&nbsp; &nbsp; \(A-E={@a3@}\xrightarrow{II-I}{@a5@}\)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\(\xrightarrow{ \frac{II}{-8},\frac{III}{-4}}{@a6@}\xrightarrow{I-5II, III-II}{@a7@}\)</p><p><br></p><p>&nbsp; &nbsp; Da der \(A-\lambda E=O\) sein muss, folgt \(v={@a8@}\) (oder jedes Vielfache).</p><p>&nbsp; &nbsp; Der normierte Eigenvektor ist definiert als \(\frac{v}{||v||}\).</p><p>&nbsp; &nbsp; Da hier \(||v||=1\) gilt, ist \(v\) auch der normierte Eigenvektor.</p><p><br></p><p><br></p>]]></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023072101</text>
    </stackversion>
    <questionvariables>
      <text>A1:matrix([2,0,5],[1,1,-3],[0,0,-3]);
A2:[vals, vecs] : eigenvectors (A1);
A3:vals[1];
E1:A3[1];
E2:A3[2];
E3:A3[3];
A4:vecs[2];
A6:A4[1];
nE1:A6[1];
nE2:A6[2];
nE3:A6[3];

a1: matrix([2-lambda,0,5],[1,1-lambda,-3],[0,0,-3-lambda])
a2: matrix([2-lambda,0],[1, 1-lambda])
a3: matrix([2-1,0,5],[1,1-1,-3],[0,0,-3-1])
a4: matrix([1,0,5],[1,0,-3],[0,0,-4])
a5: matrix([1,0,5],[0,0,-8],[0,0,-4])
a6: matrix([1,0,5],[0,0,1],[0,0,1])
a7: matrix([1,0,0],[0,0,1],[0,0,0])
a8: matrix([0],[1],[0])</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text>n</text>
    </questionnote>
    <questiondescription format="moodle_auto_format">
      <text></text>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>E1</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>E2</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>E3</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>algebraic</type>
      <tans>nE1</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans5</name>
      <type>algebraic</type>
      <tans>nE2</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans6</name>
      <type>algebraic</type>
      <tans>nE3</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>E1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>E2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt3</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>E3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt3-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt3-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt4</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>nE1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt4-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt4-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt5</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans5</sans>
        <tans>nE2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt5-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt5-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt6</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description></description>
        <answertest>AlgEquiv</answertest>
        <sans>ans6</sans>
        <tans>nE3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt6-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt6-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>praxiserprobt</text>
</tag>
      <tag><text>TE:1:Lineare Algebra</text>
</tag>
      <tag><text>TE:2:Matrizen</text>
</tag>
      <tag><text>TE:3:Eigenvektoren</text>
</tag>
      <tag><text>TE:3:Eigenwerte</text>
</tag>
      <tag><text>src:F07-INT</text>
</tag>
      <tag><text>Bloom:3</text>
</tag>
      <tag><text>Maier:1:2</text>
</tag>
      <tag><text>Maier:2:2</text>
</tag>
      <tag><text>Maier:3:1</text>
</tag>
      <tag><text>Maier:4:1</text>
</tag>
      <tag><text>Maier:5:1</text>
</tag>
      <tag><text>Maier:6:1</text>
</tag>
      <tag><text>Maier:7:1</text>
</tag>
      <tag><text>qs:visuellGeprueft</text>
</tag>
      <tag><text>qs:sprachlichGeprueft</text>
</tag>
      <tag><text>qs:TaggingGeprueft</text>
</tag>
      <tag><text>qs:importIliasGeprueft</text>
</tag>
      <tag><text>qs:importMoodleGeprueft</text>
</tag>
    </tags>
  </question>

</quiz>